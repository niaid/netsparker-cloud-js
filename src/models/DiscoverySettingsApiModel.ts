/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Discovery Settings api model.
 * @export
 * @interface DiscoverySettingsApiModel
 */
export interface DiscoverySettingsApiModel {
    /**
     * Gets or sets the included SLDS.
     * @type {string}
     * @memberof DiscoverySettingsApiModel
     */
    includedSlds?: string;
    /**
     * Gets or sets the included ip ranges.
     * @type {string}
     * @memberof DiscoverySettingsApiModel
     */
    includedIpRanges?: string;
    /**
     * Gets or sets the included organizations.
     * @type {string}
     * @memberof DiscoverySettingsApiModel
     */
    includedOrganizations?: string;
    /**
     * Gets or sets the excluded SLDS.
     * @type {string}
     * @memberof DiscoverySettingsApiModel
     */
    excludedSlds?: string;
    /**
     * Gets or sets the excluded TLDS.
     * @type {string}
     * @memberof DiscoverySettingsApiModel
     */
    excludedTlds?: string;
    /**
     * Gets or sets the excluded ip addresses.
     * @type {string}
     * @memberof DiscoverySettingsApiModel
     */
    excludedIpAddresses?: string;
    /**
     * Gets or sets the excluded organizations.
     * @type {string}
     * @memberof DiscoverySettingsApiModel
     */
    excludedOrganizations?: string;
    /**
     * Gets or sets a value indicating whether [only registered domains].
     * @type {boolean}
     * @memberof DiscoverySettingsApiModel
     */
    onlyRegisteredDomains?: boolean;
    /**
     * Gets or sets a value indicating whether [shared host matching].
     * @type {boolean}
     * @memberof DiscoverySettingsApiModel
     */
    sharedHostMatching?: boolean;
    /**
     * Gets or sets a value indicating whether [organization name matching].
     * @type {boolean}
     * @memberof DiscoverySettingsApiModel
     */
    organizationNameMatching?: boolean;
    /**
     * Gets or sets a value indicating whether [only registered domains].
     * @type {boolean}
     * @memberof DiscoverySettingsApiModel
     */
    emailMatching?: boolean;
    /**
     * Gets or sets a value indicating whether [only registered domains].
     * @type {boolean}
     * @memberof DiscoverySettingsApiModel
     */
    websitesMatching?: boolean;
    /**
     * Gets or sets a value indicating whether [only registered domains].
     * @type {boolean}
     * @memberof DiscoverySettingsApiModel
     */
    enableSlds?: boolean;
}

/**
 * Check if a given object implements the DiscoverySettingsApiModel interface.
 */
export function instanceOfDiscoverySettingsApiModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DiscoverySettingsApiModelFromJSON(json: any): DiscoverySettingsApiModel {
    return DiscoverySettingsApiModelFromJSONTyped(json, false);
}

export function DiscoverySettingsApiModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): DiscoverySettingsApiModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'includedSlds': !exists(json, 'IncludedSlds') ? undefined : json['IncludedSlds'],
        'includedIpRanges': !exists(json, 'IncludedIpRanges') ? undefined : json['IncludedIpRanges'],
        'includedOrganizations': !exists(json, 'IncludedOrganizations') ? undefined : json['IncludedOrganizations'],
        'excludedSlds': !exists(json, 'ExcludedSlds') ? undefined : json['ExcludedSlds'],
        'excludedTlds': !exists(json, 'ExcludedTlds') ? undefined : json['ExcludedTlds'],
        'excludedIpAddresses': !exists(json, 'ExcludedIpAddresses') ? undefined : json['ExcludedIpAddresses'],
        'excludedOrganizations': !exists(json, 'ExcludedOrganizations') ? undefined : json['ExcludedOrganizations'],
        'onlyRegisteredDomains': !exists(json, 'OnlyRegisteredDomains') ? undefined : json['OnlyRegisteredDomains'],
        'sharedHostMatching': !exists(json, 'SharedHostMatching') ? undefined : json['SharedHostMatching'],
        'organizationNameMatching': !exists(json, 'OrganizationNameMatching') ? undefined : json['OrganizationNameMatching'],
        'emailMatching': !exists(json, 'EmailMatching') ? undefined : json['EmailMatching'],
        'websitesMatching': !exists(json, 'WebsitesMatching') ? undefined : json['WebsitesMatching'],
        'enableSlds': !exists(json, 'EnableSlds') ? undefined : json['EnableSlds'],
    };
}

export function DiscoverySettingsApiModelToJSON(value?: DiscoverySettingsApiModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'IncludedSlds': value.includedSlds,
        'IncludedIpRanges': value.includedIpRanges,
        'IncludedOrganizations': value.includedOrganizations,
        'ExcludedSlds': value.excludedSlds,
        'ExcludedTlds': value.excludedTlds,
        'ExcludedIpAddresses': value.excludedIpAddresses,
        'ExcludedOrganizations': value.excludedOrganizations,
        'OnlyRegisteredDomains': value.onlyRegisteredDomains,
        'SharedHostMatching': value.sharedHostMatching,
        'OrganizationNameMatching': value.organizationNameMatching,
        'EmailMatching': value.emailMatching,
        'WebsitesMatching': value.websitesMatching,
        'EnableSlds': value.enableSlds,
    };
}

