/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CachedFile } from './CachedFile';
import {
    CachedFileFromJSON,
    CachedFileFromJSONTyped,
    CachedFileToJSON,
} from './CachedFile';

/**
 * Represents a class that carries out imported links.
 * @export
 * @interface ImportedLinksSetting
 */
export interface ImportedLinksSetting {
    /**
     * Gets or sets the imported files.
     * @type {Array<CachedFile>}
     * @memberof ImportedLinksSetting
     */
    importedFiles?: Array<CachedFile>;
    /**
     * Gets or sets the imported links.
     * @type {string}
     * @memberof ImportedLinksSetting
     */
    importedLinks?: string;
    /**
     * 
     * @type {string}
     * @memberof ImportedLinksSetting
     */
    importedURL?: string;
}

/**
 * Check if a given object implements the ImportedLinksSetting interface.
 */
export function instanceOfImportedLinksSetting(value: object): boolean {
    return true;
}

export function ImportedLinksSettingFromJSON(json: any): ImportedLinksSetting {
    return ImportedLinksSettingFromJSONTyped(json, false);
}

export function ImportedLinksSettingFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImportedLinksSetting {
    if (json == null) {
        return json;
    }
    return {
        
        'importedFiles': json['ImportedFiles'] == null ? undefined : ((json['ImportedFiles'] as Array<any>).map(CachedFileFromJSON)),
        'importedLinks': json['ImportedLinks'] == null ? undefined : json['ImportedLinks'],
        'importedURL': json['ImportedURL'] == null ? undefined : json['ImportedURL'],
    };
}

export function ImportedLinksSettingToJSON(value?: ImportedLinksSetting | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'ImportedFiles': value['importedFiles'] == null ? undefined : ((value['importedFiles'] as Array<any>).map(CachedFileToJSON)),
        'ImportedLinks': value['importedLinks'],
        'ImportedURL': value['importedURL'],
    };
}

