/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Represents a model that carrying user mapping data.
 * @export
 * @interface IntegrationUserMappingItemModel
 */
export interface IntegrationUserMappingItemModel {
    /**
     * Gets or sets the user email
     * @type {string}
     * @memberof IntegrationUserMappingItemModel
     */
    email?: string;
    /**
     * Gets or sets the user mapping Id.
     * @type {string}
     * @memberof IntegrationUserMappingItemModel
     */
    id?: string;
    /**
     * Gets or sets the integration system.
     * @type {string}
     * @memberof IntegrationUserMappingItemModel
     */
    integrationSystem: IntegrationUserMappingItemModelIntegrationSystemEnum;
    /**
     * Gets or sets the user's integration name.
     * @type {string}
     * @memberof IntegrationUserMappingItemModel
     */
    integrationUserName: string;
    /**
     * Gets or sets whether the user mapping is requested for editing
     * @type {boolean}
     * @memberof IntegrationUserMappingItemModel
     */
    isEdit?: boolean;
    /**
     * Gets or sets the user name
     * @type {string}
     * @memberof IntegrationUserMappingItemModel
     */
    name?: string;
    /**
     * Gets the user's nc name in "Name (Email)" format.
     * @type {string}
     * @memberof IntegrationUserMappingItemModel
     */
    readonly nameEmail?: string;
    /**
     * Gets the user mapping item result enum.
     * @type {string}
     * @memberof IntegrationUserMappingItemModel
     */
    result?: IntegrationUserMappingItemModelResultEnum;
    /**
     * Gets or sets the user Id
     * @type {string}
     * @memberof IntegrationUserMappingItemModel
     */
    userId: string;
}


/**
 * @export
 */
export const IntegrationUserMappingItemModelIntegrationSystemEnum = {
    Teamcity: 'Teamcity',
    Jenkins: 'Jenkins',
    Bamboo: 'Bamboo',
    GitLab: 'GitLab',
    AzureDevOps: 'AzureDevOps',
    Jira: 'Jira',
    CircleCi: 'CircleCI',
    TravisCi: 'TravisCI',
    UrbanCodeDeploy: 'UrbanCodeDeploy',
    GitHubActions: 'GitHubActions'
} as const;
export type IntegrationUserMappingItemModelIntegrationSystemEnum = typeof IntegrationUserMappingItemModelIntegrationSystemEnum[keyof typeof IntegrationUserMappingItemModelIntegrationSystemEnum];

/**
 * @export
 */
export const IntegrationUserMappingItemModelResultEnum = {
    NotFound: 'NotFound',
    BadRequest: 'BadRequest',
    Duplicate: 'Duplicate',
    Saved: 'Saved',
    Edited: 'Edited',
    Deleted: 'Deleted',
    Exist: 'Exist'
} as const;
export type IntegrationUserMappingItemModelResultEnum = typeof IntegrationUserMappingItemModelResultEnum[keyof typeof IntegrationUserMappingItemModelResultEnum];


/**
 * Check if a given object implements the IntegrationUserMappingItemModel interface.
 */
export function instanceOfIntegrationUserMappingItemModel(value: object): boolean {
    if (!('integrationSystem' in value)) return false;
    if (!('integrationUserName' in value)) return false;
    if (!('userId' in value)) return false;
    return true;
}

export function IntegrationUserMappingItemModelFromJSON(json: any): IntegrationUserMappingItemModel {
    return IntegrationUserMappingItemModelFromJSONTyped(json, false);
}

export function IntegrationUserMappingItemModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): IntegrationUserMappingItemModel {
    if (json == null) {
        return json;
    }
    return {
        
        'email': json['Email'] == null ? undefined : json['Email'],
        'id': json['Id'] == null ? undefined : json['Id'],
        'integrationSystem': json['IntegrationSystem'],
        'integrationUserName': json['IntegrationUserName'],
        'isEdit': json['IsEdit'] == null ? undefined : json['IsEdit'],
        'name': json['Name'] == null ? undefined : json['Name'],
        'nameEmail': json['NameEmail'] == null ? undefined : json['NameEmail'],
        'result': json['Result'] == null ? undefined : json['Result'],
        'userId': json['UserId'],
    };
}

export function IntegrationUserMappingItemModelToJSON(value?: Omit<IntegrationUserMappingItemModel, 'NameEmail'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'Email': value['email'],
        'Id': value['id'],
        'IntegrationSystem': value['integrationSystem'],
        'IntegrationUserName': value['integrationUserName'],
        'IsEdit': value['isEdit'],
        'Name': value['name'],
        'Result': value['result'],
        'UserId': value['userId'],
    };
}

