/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Represents a model that carrying user mapping data.
 * @export
 * @interface IntegrationUserMappingItemModel
 */
export interface IntegrationUserMappingItemModel {
    /**
     * Gets or sets the user email
     * @type {string}
     * @memberof IntegrationUserMappingItemModel
     */
    email?: string;
    /**
     * Gets or sets the user mapping Id.
     * @type {string}
     * @memberof IntegrationUserMappingItemModel
     */
    id?: string;
    /**
     * Gets or sets the integration system.
     * @type {string}
     * @memberof IntegrationUserMappingItemModel
     */
    integrationSystem: IntegrationUserMappingItemModelIntegrationSystemEnum;
    /**
     * Gets or sets the user's integration name.
     * @type {string}
     * @memberof IntegrationUserMappingItemModel
     */
    integrationUserName: string;
    /**
     * Gets or sets whether the user mapping is requested for editing
     * @type {boolean}
     * @memberof IntegrationUserMappingItemModel
     */
    isEdit?: boolean;
    /**
     * Gets or sets the user name
     * @type {string}
     * @memberof IntegrationUserMappingItemModel
     */
    name?: string;
    /**
     * Gets the user's nc name in "Name (Email)" format.
     * @type {string}
     * @memberof IntegrationUserMappingItemModel
     */
    readonly nameEmail?: string;
    /**
     * Gets the user mapping item result enum.
     * @type {string}
     * @memberof IntegrationUserMappingItemModel
     */
    result?: IntegrationUserMappingItemModelResultEnum;
    /**
     * Gets or sets the user Id
     * @type {string}
     * @memberof IntegrationUserMappingItemModel
     */
    userId: string;
}

/**
* @export
* @enum {string}
*/
export enum IntegrationUserMappingItemModelIntegrationSystemEnum {
    Teamcity = 'Teamcity',
    Jenkins = 'Jenkins',
    Bamboo = 'Bamboo',
    GitLab = 'GitLab',
    AzureDevOps = 'AzureDevOps',
    Jira = 'Jira',
    CircleCi = 'CircleCI',
    TravisCi = 'TravisCI',
    UrbanCodeDeploy = 'UrbanCodeDeploy',
    GitHubActions = 'GitHubActions'
}
/**
* @export
* @enum {string}
*/
export enum IntegrationUserMappingItemModelResultEnum {
    NotFound = 'NotFound',
    BadRequest = 'BadRequest',
    Duplicate = 'Duplicate',
    Saved = 'Saved',
    Edited = 'Edited',
    Deleted = 'Deleted',
    Exist = 'Exist'
}


/**
 * Check if a given object implements the IntegrationUserMappingItemModel interface.
 */
export function instanceOfIntegrationUserMappingItemModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "integrationSystem" in value;
    isInstance = isInstance && "integrationUserName" in value;
    isInstance = isInstance && "userId" in value;

    return isInstance;
}

export function IntegrationUserMappingItemModelFromJSON(json: any): IntegrationUserMappingItemModel {
    return IntegrationUserMappingItemModelFromJSONTyped(json, false);
}

export function IntegrationUserMappingItemModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): IntegrationUserMappingItemModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'email': !exists(json, 'Email') ? undefined : json['Email'],
        'id': !exists(json, 'Id') ? undefined : json['Id'],
        'integrationSystem': json['IntegrationSystem'],
        'integrationUserName': json['IntegrationUserName'],
        'isEdit': !exists(json, 'IsEdit') ? undefined : json['IsEdit'],
        'name': !exists(json, 'Name') ? undefined : json['Name'],
        'nameEmail': !exists(json, 'NameEmail') ? undefined : json['NameEmail'],
        'result': !exists(json, 'Result') ? undefined : json['Result'],
        'userId': json['UserId'],
    };
}

export function IntegrationUserMappingItemModelToJSON(value?: IntegrationUserMappingItemModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Email': value.email,
        'Id': value.id,
        'IntegrationSystem': value.integrationSystem,
        'IntegrationUserName': value.integrationUserName,
        'IsEdit': value.isEdit,
        'Name': value.name,
        'Result': value.result,
        'UserId': value.userId,
    };
}

