/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FormAuthenticationHashicorpVaultSetting } from './FormAuthenticationHashicorpVaultSetting';
import {
    FormAuthenticationHashicorpVaultSettingFromJSON,
    FormAuthenticationHashicorpVaultSettingFromJSONTyped,
    FormAuthenticationHashicorpVaultSettingToJSON,
} from './FormAuthenticationHashicorpVaultSetting';
import type { OtpSettings } from './OtpSettings';
import {
    OtpSettingsFromJSON,
    OtpSettingsFromJSONTyped,
    OtpSettingsToJSON,
} from './OtpSettings';
import type { FormAuthenticationAzureKeyVaultSetting } from './FormAuthenticationAzureKeyVaultSetting';
import {
    FormAuthenticationAzureKeyVaultSettingFromJSON,
    FormAuthenticationAzureKeyVaultSettingFromJSONTyped,
    FormAuthenticationAzureKeyVaultSettingToJSON,
} from './FormAuthenticationAzureKeyVaultSetting';
import type { FormAuthenticationCustomScript } from './FormAuthenticationCustomScript';
import {
    FormAuthenticationCustomScriptFromJSON,
    FormAuthenticationCustomScriptFromJSONTyped,
    FormAuthenticationCustomScriptToJSON,
} from './FormAuthenticationCustomScript';
import type { FormAuthenticationCyberArkVaultSetting } from './FormAuthenticationCyberArkVaultSetting';
import {
    FormAuthenticationCyberArkVaultSettingFromJSON,
    FormAuthenticationCyberArkVaultSettingFromJSONTyped,
    FormAuthenticationCyberArkVaultSettingToJSON,
} from './FormAuthenticationCyberArkVaultSetting';
import type { AuthorizationTokenRule } from './AuthorizationTokenRule';
import {
    AuthorizationTokenRuleFromJSON,
    AuthorizationTokenRuleFromJSONTyped,
    AuthorizationTokenRuleToJSON,
} from './AuthorizationTokenRule';

/**
 * Provides credentials for form authentication.
 * @export
 * @interface FormAuthenticationSettingApiModel
 */
export interface FormAuthenticationSettingApiModel {
    /**
     * Gets or sets the custom scripts.
     * @type {Array<FormAuthenticationCustomScript>}
     * @memberof FormAuthenticationSettingApiModel
     */
    customScripts?: Array<FormAuthenticationCustomScript>;
    /**
     * Gets or sets a value indicating whether to detect Bearer token authorization.
     * @type {boolean}
     * @memberof FormAuthenticationSettingApiModel
     */
    detectBearerToken?: boolean;
    /**
     * Gets or sets a value indicating whether to diagnostics logging enabled.
     * @type {boolean}
     * @memberof FormAuthenticationSettingApiModel
     */
    enableDiagnosticsLogging?: boolean;
    /**
     * Gets or sets a value indicating whether to detect authorization tokens.
     * @type {boolean}
     * @memberof FormAuthenticationSettingApiModel
     */
    detectAuthorizationTokens?: boolean;
    /**
     * Gets or sets the token mappers.
     * @type {Array<AuthorizationTokenRule>}
     * @memberof FormAuthenticationSettingApiModel
     */
    authorizationTokenRules?: Array<AuthorizationTokenRule>;
    /**
     * Gets or sets whether logout detection is disabled.
     * @type {boolean}
     * @memberof FormAuthenticationSettingApiModel
     */
    disableLogoutDetection?: boolean;
    /**
     * Gets or sets the login form URL.
     * @type {string}
     * @memberof FormAuthenticationSettingApiModel
     */
    loginFormUrl?: string;
    /**
     * Gets or sets the login required URL.
     * @type {string}
     * @memberof FormAuthenticationSettingApiModel
     */
    loginRequiredUrl?: string;
    /**
     * Gets or sets the logout keyword patterns.
     * @type {string}
     * @memberof FormAuthenticationSettingApiModel
     */
    logoutKeywordPatterns?: string;
    /**
     * Gets or sets the logout redirect pattern.
     * @type {string}
     * @memberof FormAuthenticationSettingApiModel
     */
    logoutRedirectPattern?: string;
    /**
     * Gets or sets a value indicating whether target URL should be overrided with authenticated page.
     * @type {boolean}
     * @memberof FormAuthenticationSettingApiModel
     */
    overrideTargetUrlWithAuthenticatedPage?: boolean;
    /**
     * Gets or sets the password.
     * @type {string}
     * @memberof FormAuthenticationSettingApiModel
     */
    password?: string;
    /**
     * Gets or sets the name of the user.
     * @type {string}
     * @memberof FormAuthenticationSettingApiModel
     */
    userName?: string;
    /**
     * Gets or sets the type of form authentication.
     * @type {string}
     * @memberof FormAuthenticationSettingApiModel
     */
    formAuthType?: FormAuthenticationSettingApiModelFormAuthTypeEnum;
    /**
     * Gets or sets the type of form authentication type.
     * @type {string}
     * @memberof FormAuthenticationSettingApiModel
     */
    formAuthIntegrationType?: FormAuthenticationSettingApiModelFormAuthIntegrationTypeEnum;
    /**
     * 
     * @type {OtpSettings}
     * @memberof FormAuthenticationSettingApiModel
     */
    otpSettings?: OtpSettings;
    /**
     * 
     * @type {FormAuthenticationHashicorpVaultSetting}
     * @memberof FormAuthenticationSettingApiModel
     */
    hashicorpVaultSetting?: FormAuthenticationHashicorpVaultSetting;
    /**
     * 
     * @type {FormAuthenticationCyberArkVaultSetting}
     * @memberof FormAuthenticationSettingApiModel
     */
    cyberArkVaultSetting?: FormAuthenticationCyberArkVaultSetting;
    /**
     * 
     * @type {FormAuthenticationAzureKeyVaultSetting}
     * @memberof FormAuthenticationSettingApiModel
     */
    azureKeyVaultSetting?: FormAuthenticationAzureKeyVaultSetting;
}


/**
 * @export
 */
export const FormAuthenticationSettingApiModelFormAuthTypeEnum = {
    Manual: 'Manual',
    Integration: 'Integration'
} as const;
export type FormAuthenticationSettingApiModelFormAuthTypeEnum = typeof FormAuthenticationSettingApiModelFormAuthTypeEnum[keyof typeof FormAuthenticationSettingApiModelFormAuthTypeEnum];

/**
 * @export
 */
export const FormAuthenticationSettingApiModelFormAuthIntegrationTypeEnum = {
    HashiCorp: 'HashiCorp',
    CyberArk: 'CyberArk',
    AzureKeyVault: 'AzureKeyVault'
} as const;
export type FormAuthenticationSettingApiModelFormAuthIntegrationTypeEnum = typeof FormAuthenticationSettingApiModelFormAuthIntegrationTypeEnum[keyof typeof FormAuthenticationSettingApiModelFormAuthIntegrationTypeEnum];


/**
 * Check if a given object implements the FormAuthenticationSettingApiModel interface.
 */
export function instanceOfFormAuthenticationSettingApiModel(value: object): boolean {
    return true;
}

export function FormAuthenticationSettingApiModelFromJSON(json: any): FormAuthenticationSettingApiModel {
    return FormAuthenticationSettingApiModelFromJSONTyped(json, false);
}

export function FormAuthenticationSettingApiModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): FormAuthenticationSettingApiModel {
    if (json == null) {
        return json;
    }
    return {
        
        'customScripts': json['CustomScripts'] == null ? undefined : ((json['CustomScripts'] as Array<any>).map(FormAuthenticationCustomScriptFromJSON)),
        'detectBearerToken': json['DetectBearerToken'] == null ? undefined : json['DetectBearerToken'],
        'enableDiagnosticsLogging': json['EnableDiagnosticsLogging'] == null ? undefined : json['EnableDiagnosticsLogging'],
        'detectAuthorizationTokens': json['DetectAuthorizationTokens'] == null ? undefined : json['DetectAuthorizationTokens'],
        'authorizationTokenRules': json['AuthorizationTokenRules'] == null ? undefined : ((json['AuthorizationTokenRules'] as Array<any>).map(AuthorizationTokenRuleFromJSON)),
        'disableLogoutDetection': json['DisableLogoutDetection'] == null ? undefined : json['DisableLogoutDetection'],
        'loginFormUrl': json['LoginFormUrl'] == null ? undefined : json['LoginFormUrl'],
        'loginRequiredUrl': json['LoginRequiredUrl'] == null ? undefined : json['LoginRequiredUrl'],
        'logoutKeywordPatterns': json['LogoutKeywordPatterns'] == null ? undefined : json['LogoutKeywordPatterns'],
        'logoutRedirectPattern': json['LogoutRedirectPattern'] == null ? undefined : json['LogoutRedirectPattern'],
        'overrideTargetUrlWithAuthenticatedPage': json['OverrideTargetUrlWithAuthenticatedPage'] == null ? undefined : json['OverrideTargetUrlWithAuthenticatedPage'],
        'password': json['Password'] == null ? undefined : json['Password'],
        'userName': json['UserName'] == null ? undefined : json['UserName'],
        'formAuthType': json['FormAuthType'] == null ? undefined : json['FormAuthType'],
        'formAuthIntegrationType': json['FormAuthIntegrationType'] == null ? undefined : json['FormAuthIntegrationType'],
        'otpSettings': json['OtpSettings'] == null ? undefined : OtpSettingsFromJSON(json['OtpSettings']),
        'hashicorpVaultSetting': json['HashicorpVaultSetting'] == null ? undefined : FormAuthenticationHashicorpVaultSettingFromJSON(json['HashicorpVaultSetting']),
        'cyberArkVaultSetting': json['CyberArkVaultSetting'] == null ? undefined : FormAuthenticationCyberArkVaultSettingFromJSON(json['CyberArkVaultSetting']),
        'azureKeyVaultSetting': json['AzureKeyVaultSetting'] == null ? undefined : FormAuthenticationAzureKeyVaultSettingFromJSON(json['AzureKeyVaultSetting']),
    };
}

export function FormAuthenticationSettingApiModelToJSON(value?: FormAuthenticationSettingApiModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'CustomScripts': value['customScripts'] == null ? undefined : ((value['customScripts'] as Array<any>).map(FormAuthenticationCustomScriptToJSON)),
        'DetectBearerToken': value['detectBearerToken'],
        'EnableDiagnosticsLogging': value['enableDiagnosticsLogging'],
        'DetectAuthorizationTokens': value['detectAuthorizationTokens'],
        'AuthorizationTokenRules': value['authorizationTokenRules'] == null ? undefined : ((value['authorizationTokenRules'] as Array<any>).map(AuthorizationTokenRuleToJSON)),
        'DisableLogoutDetection': value['disableLogoutDetection'],
        'LoginFormUrl': value['loginFormUrl'],
        'LoginRequiredUrl': value['loginRequiredUrl'],
        'LogoutKeywordPatterns': value['logoutKeywordPatterns'],
        'LogoutRedirectPattern': value['logoutRedirectPattern'],
        'OverrideTargetUrlWithAuthenticatedPage': value['overrideTargetUrlWithAuthenticatedPage'],
        'Password': value['password'],
        'UserName': value['userName'],
        'FormAuthType': value['formAuthType'],
        'FormAuthIntegrationType': value['formAuthIntegrationType'],
        'OtpSettings': OtpSettingsToJSON(value['otpSettings']),
        'HashicorpVaultSetting': FormAuthenticationHashicorpVaultSettingToJSON(value['hashicorpVaultSetting']),
        'CyberArkVaultSetting': FormAuthenticationCyberArkVaultSettingToJSON(value['cyberArkVaultSetting']),
        'AzureKeyVaultSetting': FormAuthenticationAzureKeyVaultSettingToJSON(value['azureKeyVaultSetting']),
    };
}

