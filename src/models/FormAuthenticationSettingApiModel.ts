/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AuthorizationTokenRule } from './AuthorizationTokenRule';
import {
    AuthorizationTokenRuleFromJSON,
    AuthorizationTokenRuleFromJSONTyped,
    AuthorizationTokenRuleToJSON,
} from './AuthorizationTokenRule';
import type { FormAuthenticationAzureKeyVaultSetting } from './FormAuthenticationAzureKeyVaultSetting';
import {
    FormAuthenticationAzureKeyVaultSettingFromJSON,
    FormAuthenticationAzureKeyVaultSettingFromJSONTyped,
    FormAuthenticationAzureKeyVaultSettingToJSON,
} from './FormAuthenticationAzureKeyVaultSetting';
import type { FormAuthenticationCustomScript } from './FormAuthenticationCustomScript';
import {
    FormAuthenticationCustomScriptFromJSON,
    FormAuthenticationCustomScriptFromJSONTyped,
    FormAuthenticationCustomScriptToJSON,
} from './FormAuthenticationCustomScript';
import type { FormAuthenticationCyberArkVaultSetting } from './FormAuthenticationCyberArkVaultSetting';
import {
    FormAuthenticationCyberArkVaultSettingFromJSON,
    FormAuthenticationCyberArkVaultSettingFromJSONTyped,
    FormAuthenticationCyberArkVaultSettingToJSON,
} from './FormAuthenticationCyberArkVaultSetting';
import type { FormAuthenticationHashicorpVaultSetting } from './FormAuthenticationHashicorpVaultSetting';
import {
    FormAuthenticationHashicorpVaultSettingFromJSON,
    FormAuthenticationHashicorpVaultSettingFromJSONTyped,
    FormAuthenticationHashicorpVaultSettingToJSON,
} from './FormAuthenticationHashicorpVaultSetting';
import type { OtpSettings } from './OtpSettings';
import {
    OtpSettingsFromJSON,
    OtpSettingsFromJSONTyped,
    OtpSettingsToJSON,
} from './OtpSettings';

/**
 * Provides credentials for form authentication.
 * @export
 * @interface FormAuthenticationSettingApiModel
 */
export interface FormAuthenticationSettingApiModel {
    /**
     * Gets or sets the custom scripts.
     * @type {Array<FormAuthenticationCustomScript>}
     * @memberof FormAuthenticationSettingApiModel
     */
    customScripts?: Array<FormAuthenticationCustomScript>;
    /**
     * Gets or sets a value indicating whether to detect Bearer token authorization.
     * @type {boolean}
     * @memberof FormAuthenticationSettingApiModel
     */
    detectBearerToken?: boolean;
    /**
     * Gets or sets a value indicating whether to detect authorization tokens.
     * @type {boolean}
     * @memberof FormAuthenticationSettingApiModel
     */
    detectAuthorizationTokens?: boolean;
    /**
     * Gets or sets the token mappers.
     * @type {Array<AuthorizationTokenRule>}
     * @memberof FormAuthenticationSettingApiModel
     */
    authorizationTokenRules?: Array<AuthorizationTokenRule>;
    /**
     * Gets or sets whether logout detection is disabled.
     * @type {boolean}
     * @memberof FormAuthenticationSettingApiModel
     */
    disableLogoutDetection?: boolean;
    /**
     * Gets or sets the login form URL.
     * @type {string}
     * @memberof FormAuthenticationSettingApiModel
     */
    loginFormUrl?: string;
    /**
     * Gets or sets the login required URL.
     * @type {string}
     * @memberof FormAuthenticationSettingApiModel
     */
    loginRequiredUrl?: string;
    /**
     * Gets or sets the logout keyword patterns.
     * @type {string}
     * @memberof FormAuthenticationSettingApiModel
     */
    logoutKeywordPatterns?: string;
    /**
     * Gets or sets the logout redirect pattern.
     * @type {string}
     * @memberof FormAuthenticationSettingApiModel
     */
    logoutRedirectPattern?: string;
    /**
     * Gets or sets a value indicating whether target URL should be overrided with authenticated page.
     * @type {boolean}
     * @memberof FormAuthenticationSettingApiModel
     */
    overrideTargetUrlWithAuthenticatedPage?: boolean;
    /**
     * Gets or sets the password.
     * @type {string}
     * @memberof FormAuthenticationSettingApiModel
     */
    password?: string;
    /**
     * Gets or sets the name of the user.
     * @type {string}
     * @memberof FormAuthenticationSettingApiModel
     */
    userName?: string;
    /**
     * Gets or sets the type of form authentication.
     * @type {string}
     * @memberof FormAuthenticationSettingApiModel
     */
    formAuthType?: FormAuthenticationSettingApiModelFormAuthTypeEnum;
    /**
     * Gets or sets the type of form authentication type.
     * @type {string}
     * @memberof FormAuthenticationSettingApiModel
     */
    formAuthIntegrationType?: FormAuthenticationSettingApiModelFormAuthIntegrationTypeEnum;
    /**
     * 
     * @type {OtpSettings}
     * @memberof FormAuthenticationSettingApiModel
     */
    otpSettings?: OtpSettings;
    /**
     * 
     * @type {FormAuthenticationHashicorpVaultSetting}
     * @memberof FormAuthenticationSettingApiModel
     */
    hashicorpVaultSetting?: FormAuthenticationHashicorpVaultSetting;
    /**
     * 
     * @type {FormAuthenticationCyberArkVaultSetting}
     * @memberof FormAuthenticationSettingApiModel
     */
    cyberArkVaultSetting?: FormAuthenticationCyberArkVaultSetting;
    /**
     * 
     * @type {FormAuthenticationAzureKeyVaultSetting}
     * @memberof FormAuthenticationSettingApiModel
     */
    azureKeyVaultSetting?: FormAuthenticationAzureKeyVaultSetting;
}

/**
* @export
* @enum {string}
*/
export enum FormAuthenticationSettingApiModelFormAuthTypeEnum {
    Manual = 'Manual',
    Integration = 'Integration'
}
/**
* @export
* @enum {string}
*/
export enum FormAuthenticationSettingApiModelFormAuthIntegrationTypeEnum {
    HashiCorp = 'HashiCorp',
    CyberArk = 'CyberArk',
    AzureKeyVault = 'AzureKeyVault'
}


/**
 * Check if a given object implements the FormAuthenticationSettingApiModel interface.
 */
export function instanceOfFormAuthenticationSettingApiModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function FormAuthenticationSettingApiModelFromJSON(json: any): FormAuthenticationSettingApiModel {
    return FormAuthenticationSettingApiModelFromJSONTyped(json, false);
}

export function FormAuthenticationSettingApiModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): FormAuthenticationSettingApiModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'customScripts': !exists(json, 'CustomScripts') ? undefined : ((json['CustomScripts'] as Array<any>).map(FormAuthenticationCustomScriptFromJSON)),
        'detectBearerToken': !exists(json, 'DetectBearerToken') ? undefined : json['DetectBearerToken'],
        'detectAuthorizationTokens': !exists(json, 'DetectAuthorizationTokens') ? undefined : json['DetectAuthorizationTokens'],
        'authorizationTokenRules': !exists(json, 'AuthorizationTokenRules') ? undefined : ((json['AuthorizationTokenRules'] as Array<any>).map(AuthorizationTokenRuleFromJSON)),
        'disableLogoutDetection': !exists(json, 'DisableLogoutDetection') ? undefined : json['DisableLogoutDetection'],
        'loginFormUrl': !exists(json, 'LoginFormUrl') ? undefined : json['LoginFormUrl'],
        'loginRequiredUrl': !exists(json, 'LoginRequiredUrl') ? undefined : json['LoginRequiredUrl'],
        'logoutKeywordPatterns': !exists(json, 'LogoutKeywordPatterns') ? undefined : json['LogoutKeywordPatterns'],
        'logoutRedirectPattern': !exists(json, 'LogoutRedirectPattern') ? undefined : json['LogoutRedirectPattern'],
        'overrideTargetUrlWithAuthenticatedPage': !exists(json, 'OverrideTargetUrlWithAuthenticatedPage') ? undefined : json['OverrideTargetUrlWithAuthenticatedPage'],
        'password': !exists(json, 'Password') ? undefined : json['Password'],
        'userName': !exists(json, 'UserName') ? undefined : json['UserName'],
        'formAuthType': !exists(json, 'FormAuthType') ? undefined : json['FormAuthType'],
        'formAuthIntegrationType': !exists(json, 'FormAuthIntegrationType') ? undefined : json['FormAuthIntegrationType'],
        'otpSettings': !exists(json, 'OtpSettings') ? undefined : OtpSettingsFromJSON(json['OtpSettings']),
        'hashicorpVaultSetting': !exists(json, 'HashicorpVaultSetting') ? undefined : FormAuthenticationHashicorpVaultSettingFromJSON(json['HashicorpVaultSetting']),
        'cyberArkVaultSetting': !exists(json, 'CyberArkVaultSetting') ? undefined : FormAuthenticationCyberArkVaultSettingFromJSON(json['CyberArkVaultSetting']),
        'azureKeyVaultSetting': !exists(json, 'AzureKeyVaultSetting') ? undefined : FormAuthenticationAzureKeyVaultSettingFromJSON(json['AzureKeyVaultSetting']),
    };
}

export function FormAuthenticationSettingApiModelToJSON(value?: FormAuthenticationSettingApiModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'CustomScripts': value.customScripts === undefined ? undefined : ((value.customScripts as Array<any>).map(FormAuthenticationCustomScriptToJSON)),
        'DetectBearerToken': value.detectBearerToken,
        'DetectAuthorizationTokens': value.detectAuthorizationTokens,
        'AuthorizationTokenRules': value.authorizationTokenRules === undefined ? undefined : ((value.authorizationTokenRules as Array<any>).map(AuthorizationTokenRuleToJSON)),
        'DisableLogoutDetection': value.disableLogoutDetection,
        'LoginFormUrl': value.loginFormUrl,
        'LoginRequiredUrl': value.loginRequiredUrl,
        'LogoutKeywordPatterns': value.logoutKeywordPatterns,
        'LogoutRedirectPattern': value.logoutRedirectPattern,
        'OverrideTargetUrlWithAuthenticatedPage': value.overrideTargetUrlWithAuthenticatedPage,
        'Password': value.password,
        'UserName': value.userName,
        'FormAuthType': value.formAuthType,
        'FormAuthIntegrationType': value.formAuthIntegrationType,
        'OtpSettings': OtpSettingsToJSON(value.otpSettings),
        'HashicorpVaultSetting': FormAuthenticationHashicorpVaultSettingToJSON(value.hashicorpVaultSetting),
        'CyberArkVaultSetting': FormAuthenticationCyberArkVaultSettingToJSON(value.cyberArkVaultSetting),
        'AzureKeyVaultSetting': FormAuthenticationAzureKeyVaultSettingToJSON(value.azureKeyVaultSetting),
    };
}

