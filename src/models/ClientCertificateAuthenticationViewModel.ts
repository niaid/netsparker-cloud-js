/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CachedFile } from './CachedFile';
import {
    CachedFileFromJSON,
    CachedFileFromJSONTyped,
    CachedFileToJSON,
} from './CachedFile';

/**
 * Represents a model for carrying out client certificate authentication settings.
 * @export
 * @interface ClientCertificateAuthenticationViewModel
 */
export interface ClientCertificateAuthenticationViewModel {
    /**
     * Gets or sets a value indicating whether the placeholders is replaced with actual credentials.
     * @type {boolean}
     * @memberof ClientCertificateAuthenticationViewModel
     */
    isReplacedCredentials?: boolean;
    /**
     * 
     * @type {CachedFile}
     * @memberof ClientCertificateAuthenticationViewModel
     */
    file?: CachedFile;
    /**
     * Gets or sets a value indicating whether client certificate authentication is enabled.
     * @type {boolean}
     * @memberof ClientCertificateAuthenticationViewModel
     */
    isEnabled?: boolean;
    /**
     * Gets or sets the password for client certificate authentication.
     * @type {string}
     * @memberof ClientCertificateAuthenticationViewModel
     */
    password?: string;
}

/**
 * Check if a given object implements the ClientCertificateAuthenticationViewModel interface.
 */
export function instanceOfClientCertificateAuthenticationViewModel(value: object): boolean {
    return true;
}

export function ClientCertificateAuthenticationViewModelFromJSON(json: any): ClientCertificateAuthenticationViewModel {
    return ClientCertificateAuthenticationViewModelFromJSONTyped(json, false);
}

export function ClientCertificateAuthenticationViewModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClientCertificateAuthenticationViewModel {
    if (json == null) {
        return json;
    }
    return {
        
        'isReplacedCredentials': json['IsReplacedCredentials'] == null ? undefined : json['IsReplacedCredentials'],
        'file': json['File'] == null ? undefined : CachedFileFromJSON(json['File']),
        'isEnabled': json['IsEnabled'] == null ? undefined : json['IsEnabled'],
        'password': json['Password'] == null ? undefined : json['Password'],
    };
}

export function ClientCertificateAuthenticationViewModelToJSON(value?: ClientCertificateAuthenticationViewModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'IsReplacedCredentials': value['isReplacedCredentials'],
        'File': CachedFileToJSON(value['file']),
        'IsEnabled': value['isEnabled'],
        'Password': value['password'],
    };
}

