/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FileCache } from './FileCache';
import {
    FileCacheFromJSON,
    FileCacheFromJSONTyped,
    FileCacheToJSON,
} from './FileCache';

/**
 * Represents a model for carrying out client certificate authentication settings.
 * @export
 * @interface ClientCertificateAuthenticationViewModel
 */
export interface ClientCertificateAuthenticationViewModel {
    /**
     * Gets or sets a value indicating whether the placeholders is replaced with actual credentials.
     * @type {boolean}
     * @memberof ClientCertificateAuthenticationViewModel
     */
    isReplacedCredentials?: boolean;
    /**
     * 
     * @type {FileCache}
     * @memberof ClientCertificateAuthenticationViewModel
     */
    file?: FileCache;
    /**
     * Gets or sets a value indicating whether client certificate authentication is enabled.
     * @type {boolean}
     * @memberof ClientCertificateAuthenticationViewModel
     */
    isEnabled?: boolean;
    /**
     * Gets or sets the password for client certificate authentication.
     * @type {string}
     * @memberof ClientCertificateAuthenticationViewModel
     */
    password?: string;
}

/**
 * Check if a given object implements the ClientCertificateAuthenticationViewModel interface.
 */
export function instanceOfClientCertificateAuthenticationViewModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ClientCertificateAuthenticationViewModelFromJSON(json: any): ClientCertificateAuthenticationViewModel {
    return ClientCertificateAuthenticationViewModelFromJSONTyped(json, false);
}

export function ClientCertificateAuthenticationViewModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClientCertificateAuthenticationViewModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'isReplacedCredentials': !exists(json, 'IsReplacedCredentials') ? undefined : json['IsReplacedCredentials'],
        'file': !exists(json, 'File') ? undefined : FileCacheFromJSON(json['File']),
        'isEnabled': !exists(json, 'IsEnabled') ? undefined : json['IsEnabled'],
        'password': !exists(json, 'Password') ? undefined : json['Password'],
    };
}

export function ClientCertificateAuthenticationViewModelToJSON(value?: ClientCertificateAuthenticationViewModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'IsReplacedCredentials': value.isReplacedCredentials,
        'File': FileCacheToJSON(value.file),
        'IsEnabled': value.isEnabled,
        'Password': value.password,
    };
}

