/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RoleWebsiteGroupMappingApiModel } from './RoleWebsiteGroupMappingApiModel';
import {
    RoleWebsiteGroupMappingApiModelFromJSON,
    RoleWebsiteGroupMappingApiModelFromJSONTyped,
    RoleWebsiteGroupMappingApiModelToJSON,
} from './RoleWebsiteGroupMappingApiModel';

/**
 * Represents a model for carrying out new account invitation.
 * @export
 * @interface NewMemberInvitationApiModel
 */
export interface NewMemberInvitationApiModel {
    /**
     * Gets or sets the email.
     * @type {string}
     * @memberof NewMemberInvitationApiModel
     */
    email: string;
    /**
     * Gets or sets the alternative login email.
     * @type {string}
     * @memberof NewMemberInvitationApiModel
     */
    alternateLoginEmail?: string;
    /**
     * Gets or sets the display name of the user.
     * @type {string}
     * @memberof NewMemberInvitationApiModel
     */
    name: string;
    /**
     * Gets or sets the phone number.
     * @type {string}
     * @memberof NewMemberInvitationApiModel
     */
    phoneNumber?: string;
    /**
     * Gets or sets a value indicating where api access is enabled for user.
     * @type {boolean}
     * @memberof NewMemberInvitationApiModel
     */
    isApiAccessEnabled?: boolean;
    /**
     * Selected users
     * @type {Array<string>}
     * @memberof NewMemberInvitationApiModel
     */
    teams?: Array<string>;
    /**
     * Selected Role Website Groups Mappings
     * @type {Array<RoleWebsiteGroupMappingApiModel>}
     * @memberof NewMemberInvitationApiModel
     */
    roleWebsiteGroupMappings?: Array<RoleWebsiteGroupMappingApiModel>;
    /**
     * Gets or sets a value indicating whether the allowed site limit that user can create.
     * @type {number}
     * @memberof NewMemberInvitationApiModel
     */
    allowedWebsiteLimit?: number;
    /**
     * Gets or sets a value indicating whether this user is enforced for SSO.
     * @type {boolean}
     * @memberof NewMemberInvitationApiModel
     */
    onlySsoLogin?: boolean;
}

/**
 * Check if a given object implements the NewMemberInvitationApiModel interface.
 */
export function instanceOfNewMemberInvitationApiModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function NewMemberInvitationApiModelFromJSON(json: any): NewMemberInvitationApiModel {
    return NewMemberInvitationApiModelFromJSONTyped(json, false);
}

export function NewMemberInvitationApiModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): NewMemberInvitationApiModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'email': json['Email'],
        'alternateLoginEmail': !exists(json, 'AlternateLoginEmail') ? undefined : json['AlternateLoginEmail'],
        'name': json['Name'],
        'phoneNumber': !exists(json, 'PhoneNumber') ? undefined : json['PhoneNumber'],
        'isApiAccessEnabled': !exists(json, 'IsApiAccessEnabled') ? undefined : json['IsApiAccessEnabled'],
        'teams': !exists(json, 'Teams') ? undefined : json['Teams'],
        'roleWebsiteGroupMappings': !exists(json, 'RoleWebsiteGroupMappings') ? undefined : ((json['RoleWebsiteGroupMappings'] as Array<any>).map(RoleWebsiteGroupMappingApiModelFromJSON)),
        'allowedWebsiteLimit': !exists(json, 'AllowedWebsiteLimit') ? undefined : json['AllowedWebsiteLimit'],
        'onlySsoLogin': !exists(json, 'OnlySsoLogin') ? undefined : json['OnlySsoLogin'],
    };
}

export function NewMemberInvitationApiModelToJSON(value?: NewMemberInvitationApiModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Email': value.email,
        'AlternateLoginEmail': value.alternateLoginEmail,
        'Name': value.name,
        'PhoneNumber': value.phoneNumber,
        'IsApiAccessEnabled': value.isApiAccessEnabled,
        'Teams': value.teams,
        'RoleWebsiteGroupMappings': value.roleWebsiteGroupMappings === undefined ? undefined : ((value.roleWebsiteGroupMappings as Array<any>).map(RoleWebsiteGroupMappingApiModelToJSON)),
        'AllowedWebsiteLimit': value.allowedWebsiteLimit,
        'OnlySsoLogin': value.onlySsoLogin,
    };
}

