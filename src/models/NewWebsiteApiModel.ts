/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Represents a model for creating a new website.
 * @export
 * @interface NewWebsiteApiModel
 */
export interface NewWebsiteApiModel {
    /**
     * Gets or sets the agent mode for the website.
     * @type {string}
     * @memberof NewWebsiteApiModel
     */
    agentMode?: NewWebsiteApiModelAgentModeEnum;
    /**
     * Gets or sets the root URL.
     * @type {string}
     * @memberof NewWebsiteApiModel
     */
    rootUrl: string;
    /**
     * Gets or sets the name of groups this website will belong to.
     * @type {Array<string>}
     * @memberof NewWebsiteApiModel
     */
    groups?: Array<string>;
    /**
     * Gets or sets the type of the subscription.
     * @type {string}
     * @memberof NewWebsiteApiModel
     */
    licenseType: NewWebsiteApiModelLicenseTypeEnum;
    /**
     * Gets or sets the website name.
     * @type {string}
     * @memberof NewWebsiteApiModel
     */
    name: string;
    /**
     * Gets or sets the website description.
     * @type {string}
     * @memberof NewWebsiteApiModel
     */
    description?: string;
    /**
     * Gets or sets the technical contact email.
     * @type {string}
     * @memberof NewWebsiteApiModel
     */
    technicalContactEmail?: string;
    /**
     * Gets or sets the tags
     * @type {Array<string>}
     * @memberof NewWebsiteApiModel
     */
    tags?: Array<string>;
}


/**
 * @export
 */
export const NewWebsiteApiModelAgentModeEnum = {
    Cloud: 'Cloud',
    Internal: 'Internal'
} as const;
export type NewWebsiteApiModelAgentModeEnum = typeof NewWebsiteApiModelAgentModeEnum[keyof typeof NewWebsiteApiModelAgentModeEnum];

/**
 * @export
 */
export const NewWebsiteApiModelLicenseTypeEnum = {
    Subscription: 'Subscription',
    Credit: 'Credit'
} as const;
export type NewWebsiteApiModelLicenseTypeEnum = typeof NewWebsiteApiModelLicenseTypeEnum[keyof typeof NewWebsiteApiModelLicenseTypeEnum];


/**
 * Check if a given object implements the NewWebsiteApiModel interface.
 */
export function instanceOfNewWebsiteApiModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "rootUrl" in value;
    isInstance = isInstance && "licenseType" in value;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function NewWebsiteApiModelFromJSON(json: any): NewWebsiteApiModel {
    return NewWebsiteApiModelFromJSONTyped(json, false);
}

export function NewWebsiteApiModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): NewWebsiteApiModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'agentMode': !exists(json, 'AgentMode') ? undefined : json['AgentMode'],
        'rootUrl': json['RootUrl'],
        'groups': !exists(json, 'Groups') ? undefined : json['Groups'],
        'licenseType': json['LicenseType'],
        'name': json['Name'],
        'description': !exists(json, 'Description') ? undefined : json['Description'],
        'technicalContactEmail': !exists(json, 'TechnicalContactEmail') ? undefined : json['TechnicalContactEmail'],
        'tags': !exists(json, 'Tags') ? undefined : json['Tags'],
    };
}

export function NewWebsiteApiModelToJSON(value?: NewWebsiteApiModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'AgentMode': value.agentMode,
        'RootUrl': value.rootUrl,
        'Groups': value.groups,
        'LicenseType': value.licenseType,
        'Name': value.name,
        'Description': value.description,
        'TechnicalContactEmail': value.technicalContactEmail,
        'Tags': value.tags,
    };
}

