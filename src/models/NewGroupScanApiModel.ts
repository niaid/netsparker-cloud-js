/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ScanTimeWindowModel } from './ScanTimeWindowModel';
import {
    ScanTimeWindowModelFromJSON,
    ScanTimeWindowModelFromJSONTyped,
    ScanTimeWindowModelToJSON,
} from './ScanTimeWindowModel';

/**
 * Contains properties that required to start group scan.
 * @export
 * @interface NewGroupScanApiModel
 */
export interface NewGroupScanApiModel {
    /**
     * Gets or sets the scan policy identifier.
     * Default: Default Security Checks.
     * @type {string}
     * @memberof NewGroupScanApiModel
     */
    policyId?: string;
    /**
     * Gets or sets the report policy identifier.
     * @type {string}
     * @memberof NewGroupScanApiModel
     */
    reportPolicyId?: string;
    /**
     * Gets or sets the type of the authentication profile option.
     * @type {string}
     * @memberof NewGroupScanApiModel
     */
    authenticationProfileOption?: NewGroupScanApiModelAuthenticationProfileOptionEnum;
    /**
     * Gets or sets the type of the authentication profile identifier.
     * @type {string}
     * @memberof NewGroupScanApiModel
     */
    authenticationProfileId?: string;
    /**
     * 
     * @type {ScanTimeWindowModel}
     * @memberof NewGroupScanApiModel
     */
    timeWindow?: ScanTimeWindowModel;
    /**
     * Gets or sets the website group name.
     * @type {string}
     * @memberof NewGroupScanApiModel
     */
    websiteGroupName: string;
    /**
     * Gets or sets the tags
     * @type {Array<string>}
     * @memberof NewGroupScanApiModel
     */
    tags?: Array<string>;
}


/**
 * @export
 */
export const NewGroupScanApiModelAuthenticationProfileOptionEnum = {
    DontUse: 'DontUse',
    UseMatchedProfile: 'UseMatchedProfile',
    SelectedProfile: 'SelectedProfile'
} as const;
export type NewGroupScanApiModelAuthenticationProfileOptionEnum = typeof NewGroupScanApiModelAuthenticationProfileOptionEnum[keyof typeof NewGroupScanApiModelAuthenticationProfileOptionEnum];


/**
 * Check if a given object implements the NewGroupScanApiModel interface.
 */
export function instanceOfNewGroupScanApiModel(value: object): boolean {
    if (!('websiteGroupName' in value)) return false;
    return true;
}

export function NewGroupScanApiModelFromJSON(json: any): NewGroupScanApiModel {
    return NewGroupScanApiModelFromJSONTyped(json, false);
}

export function NewGroupScanApiModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): NewGroupScanApiModel {
    if (json == null) {
        return json;
    }
    return {
        
        'policyId': json['PolicyId'] == null ? undefined : json['PolicyId'],
        'reportPolicyId': json['ReportPolicyId'] == null ? undefined : json['ReportPolicyId'],
        'authenticationProfileOption': json['AuthenticationProfileOption'] == null ? undefined : json['AuthenticationProfileOption'],
        'authenticationProfileId': json['AuthenticationProfileId'] == null ? undefined : json['AuthenticationProfileId'],
        'timeWindow': json['TimeWindow'] == null ? undefined : ScanTimeWindowModelFromJSON(json['TimeWindow']),
        'websiteGroupName': json['WebsiteGroupName'],
        'tags': json['Tags'] == null ? undefined : json['Tags'],
    };
}

export function NewGroupScanApiModelToJSON(value?: NewGroupScanApiModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'PolicyId': value['policyId'],
        'ReportPolicyId': value['reportPolicyId'],
        'AuthenticationProfileOption': value['authenticationProfileOption'],
        'AuthenticationProfileId': value['authenticationProfileId'],
        'TimeWindow': ScanTimeWindowModelToJSON(value['timeWindow']),
        'WebsiteGroupName': value['websiteGroupName'],
        'Tags': value['tags'],
    };
}

