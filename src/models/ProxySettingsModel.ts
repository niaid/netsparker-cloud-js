/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Represents a model for carrying out authentication proxy settings.
 * @export
 * @interface ProxySettingsModel
 */
export interface ProxySettingsModel {
    /**
     * 
     * @type {Array<string>}
     * @memberof ProxySettingsModel
     */
    proxyByPassList?: Array<string>;
    /**
     * Gets or sets a value indicating whether custom proxy is enable .
     * @type {boolean}
     * @memberof ProxySettingsModel
     */
    enableCustomProxy?: boolean;
    /**
     * Gets or sets the proxy address.
     * @type {string}
     * @memberof ProxySettingsModel
     */
    proxyAddress?: string;
    /**
     * Gets or sets a value indicating whether the proxy requires authentication.
     * @type {boolean}
     * @memberof ProxySettingsModel
     */
    proxyAuthenticationRequired?: boolean;
    /**
     * Gets or sets the proxy domain.
     * @type {string}
     * @memberof ProxySettingsModel
     */
    proxyDomain?: string;
    /**
     * Gets or sets the proxy password.
     * @type {string}
     * @memberof ProxySettingsModel
     */
    proxyPassword?: string;
    /**
     * Gets or sets the proxy port.
     * @type {number}
     * @memberof ProxySettingsModel
     */
    proxyPort?: number;
    /**
     * Gets or sets the name of the proxy user.
     * @type {string}
     * @memberof ProxySettingsModel
     */
    proxyUsername?: string;
    /**
     * Gets or sets a value that indicates whether to bypass the proxy server for local addresses.
     * @type {boolean}
     * @memberof ProxySettingsModel
     */
    proxyByPassOnLocal?: boolean;
    /**
     * Gets or sets the proxy bypass text.
     * @type {string}
     * @memberof ProxySettingsModel
     */
    proxyByPassText?: string;
    /**
     * Gets or sets an value for proxy external communication
     * @type {boolean}
     * @memberof ProxySettingsModel
     */
    usePolicyProxyForExternalCommunication?: boolean;
}

/**
 * Check if a given object implements the ProxySettingsModel interface.
 */
export function instanceOfProxySettingsModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ProxySettingsModelFromJSON(json: any): ProxySettingsModel {
    return ProxySettingsModelFromJSONTyped(json, false);
}

export function ProxySettingsModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProxySettingsModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'proxyByPassList': !exists(json, 'ProxyByPassList') ? undefined : json['ProxyByPassList'],
        'enableCustomProxy': !exists(json, 'EnableCustomProxy') ? undefined : json['EnableCustomProxy'],
        'proxyAddress': !exists(json, 'ProxyAddress') ? undefined : json['ProxyAddress'],
        'proxyAuthenticationRequired': !exists(json, 'ProxyAuthenticationRequired') ? undefined : json['ProxyAuthenticationRequired'],
        'proxyDomain': !exists(json, 'ProxyDomain') ? undefined : json['ProxyDomain'],
        'proxyPassword': !exists(json, 'ProxyPassword') ? undefined : json['ProxyPassword'],
        'proxyPort': !exists(json, 'ProxyPort') ? undefined : json['ProxyPort'],
        'proxyUsername': !exists(json, 'ProxyUsername') ? undefined : json['ProxyUsername'],
        'proxyByPassOnLocal': !exists(json, 'ProxyByPassOnLocal') ? undefined : json['ProxyByPassOnLocal'],
        'proxyByPassText': !exists(json, 'ProxyByPassText') ? undefined : json['ProxyByPassText'],
        'usePolicyProxyForExternalCommunication': !exists(json, 'UsePolicyProxyForExternalCommunication') ? undefined : json['UsePolicyProxyForExternalCommunication'],
    };
}

export function ProxySettingsModelToJSON(value?: ProxySettingsModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ProxyByPassList': value.proxyByPassList,
        'EnableCustomProxy': value.enableCustomProxy,
        'ProxyAddress': value.proxyAddress,
        'ProxyAuthenticationRequired': value.proxyAuthenticationRequired,
        'ProxyDomain': value.proxyDomain,
        'ProxyPassword': value.proxyPassword,
        'ProxyPort': value.proxyPort,
        'ProxyUsername': value.proxyUsername,
        'ProxyByPassOnLocal': value.proxyByPassOnLocal,
        'ProxyByPassText': value.proxyByPassText,
        'UsePolicyProxyForExternalCommunication': value.usePolicyProxyForExternalCommunication,
    };
}

