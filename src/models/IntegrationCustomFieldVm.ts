/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CachedFile } from './CachedFile';
import {
    CachedFileFromJSON,
    CachedFileFromJSONTyped,
    CachedFileToJSON,
} from './CachedFile';

/**
 * 
 * @export
 * @interface IntegrationCustomFieldVm
 */
export interface IntegrationCustomFieldVm {
    /**
     * 
     * @type {CachedFile}
     * @memberof IntegrationCustomFieldVm
     */
    file?: CachedFile;
    /**
     * 
     * @type {string}
     * @memberof IntegrationCustomFieldVm
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof IntegrationCustomFieldVm
     */
    value?: string;
    /**
     * 
     * @type {string}
     * @memberof IntegrationCustomFieldVm
     */
    inputType?: IntegrationCustomFieldVmInputTypeEnum;
}


/**
 * @export
 */
export const IntegrationCustomFieldVmInputTypeEnum = {
    Text: 'Text',
    Password: 'Password',
    Textarea: 'Textarea',
    FileUpload: 'FileUpload',
    Complex: 'Complex'
} as const;
export type IntegrationCustomFieldVmInputTypeEnum = typeof IntegrationCustomFieldVmInputTypeEnum[keyof typeof IntegrationCustomFieldVmInputTypeEnum];


/**
 * Check if a given object implements the IntegrationCustomFieldVm interface.
 */
export function instanceOfIntegrationCustomFieldVm(value: object): boolean {
    if (!('name' in value)) return false;
    return true;
}

export function IntegrationCustomFieldVmFromJSON(json: any): IntegrationCustomFieldVm {
    return IntegrationCustomFieldVmFromJSONTyped(json, false);
}

export function IntegrationCustomFieldVmFromJSONTyped(json: any, ignoreDiscriminator: boolean): IntegrationCustomFieldVm {
    if (json == null) {
        return json;
    }
    return {
        
        'file': json['File'] == null ? undefined : CachedFileFromJSON(json['File']),
        'name': json['Name'],
        'value': json['Value'] == null ? undefined : json['Value'],
        'inputType': json['InputType'] == null ? undefined : json['InputType'],
    };
}

export function IntegrationCustomFieldVmToJSON(value?: IntegrationCustomFieldVm | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'File': CachedFileToJSON(value['file']),
        'Name': value['name'],
        'Value': value['value'],
        'InputType': value['inputType'],
    };
}

