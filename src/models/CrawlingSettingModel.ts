/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Represents a model for carrying out crawling settings.
 * @export
 * @interface CrawlingSettingModel
 */
export interface CrawlingSettingModel {
    /**
     * Gets or sets a value indicating whether parameter based navigation is enabled.
     * @type {boolean}
     * @memberof CrawlingSettingModel
     */
    enableParameterBasedNavigation?: boolean;
    /**
     * Gets or sets whether REST Web Service parser is enabled.
     * @type {boolean}
     * @memberof CrawlingSettingModel
     */
    enableRestWebServiceParser?: boolean;
    /**
     * Gets or sets whether SOAP Web Service parser is enabled.
     * @type {boolean}
     * @memberof CrawlingSettingModel
     */
    enableSoapWebServiceParser?: boolean;
    /**
     * Gets or sets a value indicating whether text parser is enabled.
     * @type {boolean}
     * @memberof CrawlingSettingModel
     */
    enableTextParser?: boolean;
    /**
     * Gets or sets a value indicating whether "fallback to get" is enabled
     * @type {boolean}
     * @memberof CrawlingSettingModel
     */
    fallbackToGet?: boolean;
    /**
     * Gets or sets a value indicating whether "fallback to get" is enabled
     * @type {boolean}
     * @memberof CrawlingSettingModel
     */
    enableFragmentParsing?: boolean;
    /**
     * Gets or sets a value indicating whether "parse javascript" is enabled
     * @type {boolean}
     * @memberof CrawlingSettingModel
     */
    enableJavascriptParsing?: boolean;
    /**
     * Gets or sets the file extensions that will be used in File Extensions RegEx.
     * @type {string}
     * @memberof CrawlingSettingModel
     */
    fileExtensions?: string;
    /**
     * Gets or sets the maximum crawler URL count.
     * @type {number}
     * @memberof CrawlingSettingModel
     */
    maximumCrawlerUrlCount?: number;
    /**
     * Gets or sets the maximum signature.
     * @type {number}
     * @memberof CrawlingSettingModel
     */
    maximumSignature?: number;
    /**
     * Gets or sets the page visit limit for links containing navigation parameter.
     * @type {number}
     * @memberof CrawlingSettingModel
     */
    navigationParameterPageVisitLimit?: number;
    /**
     * Gets or sets the regular expression pattern for navigation parameter.
     * @type {string}
     * @memberof CrawlingSettingModel
     */
    navigationParameterRegexPattern?: string;
    /**
     * Gets or sets the page visit limit.
     * @type {number}
     * @memberof CrawlingSettingModel
     */
    pageVisitLimit?: number;
    /**
     * Gets or sets the page visit limit.
     * @type {number}
     * @memberof CrawlingSettingModel
     */
    maximumUrlRewriteSignature?: number;
    /**
     * Gets or sets a value indicating whether the crawler should wait resource finder.
     * @type {boolean}
     * @memberof CrawlingSettingModel
     */
    waitResourceFinder?: boolean;
    /**
     * Specifies whether all related links should be crawled when a new link is found.
     * @type {boolean}
     * @memberof CrawlingSettingModel
     */
    addRelatedLinks?: boolean;
    /**
     * If enabled, only query string parameters will be recognized as navigation parameters.
     * @type {boolean}
     * @memberof CrawlingSettingModel
     */
    enableQueryBasedParameterBasedNavigation?: boolean;
}

/**
 * Check if a given object implements the CrawlingSettingModel interface.
 */
export function instanceOfCrawlingSettingModel(value: object): boolean {
    return true;
}

export function CrawlingSettingModelFromJSON(json: any): CrawlingSettingModel {
    return CrawlingSettingModelFromJSONTyped(json, false);
}

export function CrawlingSettingModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): CrawlingSettingModel {
    if (json == null) {
        return json;
    }
    return {
        
        'enableParameterBasedNavigation': json['EnableParameterBasedNavigation'] == null ? undefined : json['EnableParameterBasedNavigation'],
        'enableRestWebServiceParser': json['EnableRestWebServiceParser'] == null ? undefined : json['EnableRestWebServiceParser'],
        'enableSoapWebServiceParser': json['EnableSoapWebServiceParser'] == null ? undefined : json['EnableSoapWebServiceParser'],
        'enableTextParser': json['EnableTextParser'] == null ? undefined : json['EnableTextParser'],
        'fallbackToGet': json['FallbackToGet'] == null ? undefined : json['FallbackToGet'],
        'enableFragmentParsing': json['EnableFragmentParsing'] == null ? undefined : json['EnableFragmentParsing'],
        'enableJavascriptParsing': json['EnableJavascriptParsing'] == null ? undefined : json['EnableJavascriptParsing'],
        'fileExtensions': json['FileExtensions'] == null ? undefined : json['FileExtensions'],
        'maximumCrawlerUrlCount': json['MaximumCrawlerUrlCount'] == null ? undefined : json['MaximumCrawlerUrlCount'],
        'maximumSignature': json['MaximumSignature'] == null ? undefined : json['MaximumSignature'],
        'navigationParameterPageVisitLimit': json['NavigationParameterPageVisitLimit'] == null ? undefined : json['NavigationParameterPageVisitLimit'],
        'navigationParameterRegexPattern': json['NavigationParameterRegexPattern'] == null ? undefined : json['NavigationParameterRegexPattern'],
        'pageVisitLimit': json['PageVisitLimit'] == null ? undefined : json['PageVisitLimit'],
        'maximumUrlRewriteSignature': json['MaximumUrlRewriteSignature'] == null ? undefined : json['MaximumUrlRewriteSignature'],
        'waitResourceFinder': json['WaitResourceFinder'] == null ? undefined : json['WaitResourceFinder'],
        'addRelatedLinks': json['AddRelatedLinks'] == null ? undefined : json['AddRelatedLinks'],
        'enableQueryBasedParameterBasedNavigation': json['EnableQueryBasedParameterBasedNavigation'] == null ? undefined : json['EnableQueryBasedParameterBasedNavigation'],
    };
}

export function CrawlingSettingModelToJSON(value?: CrawlingSettingModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'EnableParameterBasedNavigation': value['enableParameterBasedNavigation'],
        'EnableRestWebServiceParser': value['enableRestWebServiceParser'],
        'EnableSoapWebServiceParser': value['enableSoapWebServiceParser'],
        'EnableTextParser': value['enableTextParser'],
        'FallbackToGet': value['fallbackToGet'],
        'EnableFragmentParsing': value['enableFragmentParsing'],
        'EnableJavascriptParsing': value['enableJavascriptParsing'],
        'FileExtensions': value['fileExtensions'],
        'MaximumCrawlerUrlCount': value['maximumCrawlerUrlCount'],
        'MaximumSignature': value['maximumSignature'],
        'NavigationParameterPageVisitLimit': value['navigationParameterPageVisitLimit'],
        'NavigationParameterRegexPattern': value['navigationParameterRegexPattern'],
        'PageVisitLimit': value['pageVisitLimit'],
        'MaximumUrlRewriteSignature': value['maximumUrlRewriteSignature'],
        'WaitResourceFinder': value['waitResourceFinder'],
        'AddRelatedLinks': value['addRelatedLinks'],
        'EnableQueryBasedParameterBasedNavigation': value['enableQueryBasedParameterBasedNavigation'],
    };
}

