/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RoleWebsiteGroupMappingApiModel } from './RoleWebsiteGroupMappingApiModel';
import {
    RoleWebsiteGroupMappingApiModelFromJSON,
    RoleWebsiteGroupMappingApiModelFromJSONTyped,
    RoleWebsiteGroupMappingApiModelToJSON,
} from './RoleWebsiteGroupMappingApiModel';

/**
 * Represents a model for carrying out user data.
 * @export
 * @interface UpdateMemberApiModel
 */
export interface UpdateMemberApiModel {
    /**
     * Gets or sets the foreign key reference to the related User instance.
     * @type {string}
     * @memberof UpdateMemberApiModel
     */
    id: string;
    /**
     * Gets or sets the display name of the user.
     * @type {string}
     * @memberof UpdateMemberApiModel
     */
    name: string;
    /**
     * Gets or sets the email.
     * @type {string}
     * @memberof UpdateMemberApiModel
     */
    email: string;
    /**
     * Gets or sets the password.
     * @type {string}
     * @memberof UpdateMemberApiModel
     */
    password?: string;
    /**
     * Gets or sets the confirmation password.
     * @type {string}
     * @memberof UpdateMemberApiModel
     */
    confirmPassword?: string;
    /**
     * Gets or sets a value indicating whether the Password will be generated automatically by system. If AutoGeneratePassword is true you should leave Password field blank.
     * @type {boolean}
     * @memberof UpdateMemberApiModel
     */
    autoGeneratePassword?: boolean;
    /**
     * Gets or sets the phone number.
     * @type {string}
     * @memberof UpdateMemberApiModel
     */
    phoneNumber?: string;
    /**
     * Gets or sets a value indicating whether this user is enforced for SSO.
     * @type {boolean}
     * @memberof UpdateMemberApiModel
     */
    onlySsoLogin?: boolean;
    /**
     * Gets or sets the alternative login email.
     * @type {string}
     * @memberof UpdateMemberApiModel
     */
    alternateLoginEmail?: string;
    /**
     * Gets or sets a value indicating whether the notification will send after user is created.
     * @type {boolean}
     * @memberof UpdateMemberApiModel
     */
    sendNotification?: boolean;
    /**
     * Gets or sets the user's time zone.
     * You can check out following endpoint to see all of time zones. Api endpoint : /api/1.0/teams/gettimezones. Default :
     * GMT Standard Time.
     * @type {string}
     * @memberof UpdateMemberApiModel
     */
    timezoneId: string;
    /**
     * Gets or sets user date format that defines the culturally appropriate format of displaying dates and times.
     * You can use these values ; dd/MM/yyyy and MM/dd/yyyy. Default : dd/MM/yyyy.
     * @type {string}
     * @memberof UpdateMemberApiModel
     */
    dateTimeFormat: string;
    /**
     * Gets or sets a value indicating whether api access is enabled for user.
     * @type {boolean}
     * @memberof UpdateMemberApiModel
     */
    isApiAccessEnabled?: boolean;
    /**
     * Gets or sets the allowed site limit.
     * @type {number}
     * @memberof UpdateMemberApiModel
     */
    allowedWebsiteLimit?: number;
    /**
     * Gets or sets the state of the user.
     * @type {string}
     * @memberof UpdateMemberApiModel
     */
    state: UpdateMemberApiModelStateEnum;
    /**
     * Selected users
     * @type {Array<string>}
     * @memberof UpdateMemberApiModel
     */
    teams?: Array<string>;
    /**
     * Selected Role Website Groups Mappings
     * @type {Array<RoleWebsiteGroupMappingApiModel>}
     * @memberof UpdateMemberApiModel
     */
    roleWebsiteGroupMappings?: Array<RoleWebsiteGroupMappingApiModel>;
}

/**
* @export
* @enum {string}
*/
export enum UpdateMemberApiModelStateEnum {
    Enabled = 'Enabled',
    Disabled = 'Disabled'
}


/**
 * Check if a given object implements the UpdateMemberApiModel interface.
 */
export function instanceOfUpdateMemberApiModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "timezoneId" in value;
    isInstance = isInstance && "dateTimeFormat" in value;
    isInstance = isInstance && "state" in value;

    return isInstance;
}

export function UpdateMemberApiModelFromJSON(json: any): UpdateMemberApiModel {
    return UpdateMemberApiModelFromJSONTyped(json, false);
}

export function UpdateMemberApiModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateMemberApiModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['Id'],
        'name': json['Name'],
        'email': json['Email'],
        'password': !exists(json, 'Password') ? undefined : json['Password'],
        'confirmPassword': !exists(json, 'ConfirmPassword') ? undefined : json['ConfirmPassword'],
        'autoGeneratePassword': !exists(json, 'AutoGeneratePassword') ? undefined : json['AutoGeneratePassword'],
        'phoneNumber': !exists(json, 'PhoneNumber') ? undefined : json['PhoneNumber'],
        'onlySsoLogin': !exists(json, 'OnlySsoLogin') ? undefined : json['OnlySsoLogin'],
        'alternateLoginEmail': !exists(json, 'AlternateLoginEmail') ? undefined : json['AlternateLoginEmail'],
        'sendNotification': !exists(json, 'SendNotification') ? undefined : json['SendNotification'],
        'timezoneId': json['TimezoneId'],
        'dateTimeFormat': json['DateTimeFormat'],
        'isApiAccessEnabled': !exists(json, 'IsApiAccessEnabled') ? undefined : json['IsApiAccessEnabled'],
        'allowedWebsiteLimit': !exists(json, 'AllowedWebsiteLimit') ? undefined : json['AllowedWebsiteLimit'],
        'state': json['State'],
        'teams': !exists(json, 'Teams') ? undefined : json['Teams'],
        'roleWebsiteGroupMappings': !exists(json, 'RoleWebsiteGroupMappings') ? undefined : ((json['RoleWebsiteGroupMappings'] as Array<any>).map(RoleWebsiteGroupMappingApiModelFromJSON)),
    };
}

export function UpdateMemberApiModelToJSON(value?: UpdateMemberApiModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Id': value.id,
        'Name': value.name,
        'Email': value.email,
        'Password': value.password,
        'ConfirmPassword': value.confirmPassword,
        'AutoGeneratePassword': value.autoGeneratePassword,
        'PhoneNumber': value.phoneNumber,
        'OnlySsoLogin': value.onlySsoLogin,
        'AlternateLoginEmail': value.alternateLoginEmail,
        'SendNotification': value.sendNotification,
        'TimezoneId': value.timezoneId,
        'DateTimeFormat': value.dateTimeFormat,
        'IsApiAccessEnabled': value.isApiAccessEnabled,
        'AllowedWebsiteLimit': value.allowedWebsiteLimit,
        'State': value.state,
        'Teams': value.teams,
        'RoleWebsiteGroupMappings': value.roleWebsiteGroupMappings === undefined ? undefined : ((value.roleWebsiteGroupMappings as Array<any>).map(RoleWebsiteGroupMappingApiModelToJSON)),
    };
}

