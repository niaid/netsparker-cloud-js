/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { IntegrationWizardResultModel } from './IntegrationWizardResultModel';
import {
    IntegrationWizardResultModelFromJSON,
    IntegrationWizardResultModelFromJSONTyped,
    IntegrationWizardResultModelToJSON,
} from './IntegrationWizardResultModel';
import type { IntegrationCustomFieldVm } from './IntegrationCustomFieldVm';
import {
    IntegrationCustomFieldVmFromJSON,
    IntegrationCustomFieldVmFromJSONTyped,
    IntegrationCustomFieldVmToJSON,
} from './IntegrationCustomFieldVm';

/**
 * The Bugzilla integration info
 * @export
 * @interface BugzillaIntegrationInfoModel
 */
export interface BugzillaIntegrationInfoModel {
    /**
     * The Bugzilla instance URL.
     * @type {string}
     * @memberof BugzillaIntegrationInfoModel
     */
    url: string;
    /**
     * API Key for authentication.
     * @type {string}
     * @memberof BugzillaIntegrationInfoModel
     */
    apiKey: string;
    /**
     * The product name.
     * @type {string}
     * @memberof BugzillaIntegrationInfoModel
     */
    product: string;
    /**
     * The name of a component.
     * @type {string}
     * @memberof BugzillaIntegrationInfoModel
     */
    component: string;
    /**
     * The product version that the issue was found in.
     * @type {string}
     * @memberof BugzillaIntegrationInfoModel
     */
    version: string;
    /**
     * What type of hardware the bug was experienced on.
     * @type {string}
     * @memberof BugzillaIntegrationInfoModel
     */
    platform: string;
    /**
     * The operating system the bug was discovered on.
     * @type {string}
     * @memberof BugzillaIntegrationInfoModel
     */
    operationSystem: string;
    /**
     * The status that this bug should start out as.
     * @type {string}
     * @memberof BugzillaIntegrationInfoModel
     */
    status?: string;
    /**
     * The priority of the bug.
     * @type {string}
     * @memberof BugzillaIntegrationInfoModel
     */
    priority?: string;
    /**
     * The user email adress to assign issues to.
     * @type {string}
     * @memberof BugzillaIntegrationInfoModel
     */
    assignedTo?: string;
    /**
     * The serverity of the bug.
     * @type {string}
     * @memberof BugzillaIntegrationInfoModel
     */
    severity?: string;
    /**
     * A valid target milestone for the product.
     * @type {string}
     * @memberof BugzillaIntegrationInfoModel
     */
    milestone?: string;
    /**
     * The days when incident is due from the time that issue is created on.
     * @type {number}
     * @memberof BugzillaIntegrationInfoModel
     */
    dueDays?: number;
    /**
     * 
     * @type {string}
     * @memberof BugzillaIntegrationInfoModel
     */
    readonly type?: BugzillaIntegrationInfoModelTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof BugzillaIntegrationInfoModel
     */
    readonly genericErrorMessage?: string;
    /**
     * 
     * @type {string}
     * @memberof BugzillaIntegrationInfoModel
     */
    readonly identifier?: string;
    /**
     * 
     * @type {string}
     * @memberof BugzillaIntegrationInfoModel
     */
    readonly testMessageBody?: string;
    /**
     * 
     * @type {string}
     * @memberof BugzillaIntegrationInfoModel
     */
    readonly testMessageTitle?: string;
    /**
     * 
     * @type {string}
     * @memberof BugzillaIntegrationInfoModel
     */
    readonly webhookUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof BugzillaIntegrationInfoModel
     */
    name?: string;
    /**
     * 
     * @type {number}
     * @memberof BugzillaIntegrationInfoModel
     */
    integrationVersion?: number;
    /**
     * 
     * @type {string}
     * @memberof BugzillaIntegrationInfoModel
     */
    accountID?: string;
    /**
     * 
     * @type {Array<IntegrationCustomFieldVm>}
     * @memberof BugzillaIntegrationInfoModel
     */
    customFields?: Array<IntegrationCustomFieldVm>;
    /**
     * 
     * @type {string}
     * @memberof BugzillaIntegrationInfoModel
     */
    templateType?: BugzillaIntegrationInfoModelTemplateTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof BugzillaIntegrationInfoModel
     */
    reopenStatus?: string;
    /**
     * 
     * @type {string}
     * @memberof BugzillaIntegrationInfoModel
     */
    resolvedStatus?: string;
    /**
     * 
     * @type {string}
     * @memberof BugzillaIntegrationInfoModel
     */
    titleFormat: string;
    /**
     * 
     * @type {IntegrationWizardResultModel}
     * @memberof BugzillaIntegrationInfoModel
     */
    integrationWizardResultModel?: IntegrationWizardResultModel;
    /**
     * 
     * @type {string}
     * @memberof BugzillaIntegrationInfoModel
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof BugzillaIntegrationInfoModel
     */
    state?: BugzillaIntegrationInfoModelStateEnum;
}


/**
 * @export
 */
export const BugzillaIntegrationInfoModelTypeEnum = {
    Jira: 'Jira',
    GitHub: 'GitHub',
    Tfs: 'TFS',
    FogBugz: 'FogBugz',
    ServiceNow: 'ServiceNow',
    Slack: 'Slack',
    GitLab: 'GitLab',
    Bitbucket: 'Bitbucket',
    Unfuddle: 'Unfuddle',
    Zapier: 'Zapier',
    AzureDevOps: 'AzureDevOps',
    Redmine: 'Redmine',
    Bugzilla: 'Bugzilla',
    Kafka: 'Kafka',
    PagerDuty: 'PagerDuty',
    MicrosoftTeams: 'MicrosoftTeams',
    Clubhouse: 'Clubhouse',
    Trello: 'Trello',
    Asana: 'Asana',
    Webhook: 'Webhook',
    Kenna: 'Kenna',
    Freshservice: 'Freshservice',
    YouTrack: 'YouTrack',
    NetsparkerEnterprise: 'NetsparkerEnterprise',
    Splunk: 'Splunk',
    Mattermost: 'Mattermost',
    Hashicorp: 'Hashicorp',
    PivotalTracker: 'PivotalTracker',
    CyberArk: 'CyberArk',
    DefectDojo: 'DefectDojo',
    JazzTeam: 'JazzTeam',
    AzureKeyVault: 'AzureKeyVault',
    ServiceNowVrm: 'ServiceNowVRM'
} as const;
export type BugzillaIntegrationInfoModelTypeEnum = typeof BugzillaIntegrationInfoModelTypeEnum[keyof typeof BugzillaIntegrationInfoModelTypeEnum];

/**
 * @export
 */
export const BugzillaIntegrationInfoModelTemplateTypeEnum = {
    Standard: 'Standard',
    Detailed: 'Detailed'
} as const;
export type BugzillaIntegrationInfoModelTemplateTypeEnum = typeof BugzillaIntegrationInfoModelTemplateTypeEnum[keyof typeof BugzillaIntegrationInfoModelTemplateTypeEnum];

/**
 * @export
 */
export const BugzillaIntegrationInfoModelStateEnum = {
    Active: 'Active',
    Suspended: 'Suspended'
} as const;
export type BugzillaIntegrationInfoModelStateEnum = typeof BugzillaIntegrationInfoModelStateEnum[keyof typeof BugzillaIntegrationInfoModelStateEnum];


/**
 * Check if a given object implements the BugzillaIntegrationInfoModel interface.
 */
export function instanceOfBugzillaIntegrationInfoModel(value: object): boolean {
    if (!('url' in value)) return false;
    if (!('apiKey' in value)) return false;
    if (!('product' in value)) return false;
    if (!('component' in value)) return false;
    if (!('version' in value)) return false;
    if (!('platform' in value)) return false;
    if (!('operationSystem' in value)) return false;
    if (!('titleFormat' in value)) return false;
    return true;
}

export function BugzillaIntegrationInfoModelFromJSON(json: any): BugzillaIntegrationInfoModel {
    return BugzillaIntegrationInfoModelFromJSONTyped(json, false);
}

export function BugzillaIntegrationInfoModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): BugzillaIntegrationInfoModel {
    if (json == null) {
        return json;
    }
    return {
        
        'url': json['Url'],
        'apiKey': json['ApiKey'],
        'product': json['Product'],
        'component': json['Component'],
        'version': json['Version'],
        'platform': json['Platform'],
        'operationSystem': json['OperationSystem'],
        'status': json['Status'] == null ? undefined : json['Status'],
        'priority': json['Priority'] == null ? undefined : json['Priority'],
        'assignedTo': json['AssignedTo'] == null ? undefined : json['AssignedTo'],
        'severity': json['Severity'] == null ? undefined : json['Severity'],
        'milestone': json['Milestone'] == null ? undefined : json['Milestone'],
        'dueDays': json['DueDays'] == null ? undefined : json['DueDays'],
        'type': json['Type'] == null ? undefined : json['Type'],
        'genericErrorMessage': json['GenericErrorMessage'] == null ? undefined : json['GenericErrorMessage'],
        'identifier': json['Identifier'] == null ? undefined : json['Identifier'],
        'testMessageBody': json['TestMessageBody'] == null ? undefined : json['TestMessageBody'],
        'testMessageTitle': json['TestMessageTitle'] == null ? undefined : json['TestMessageTitle'],
        'webhookUrl': json['WebhookUrl'] == null ? undefined : json['WebhookUrl'],
        'name': json['Name'] == null ? undefined : json['Name'],
        'integrationVersion': json['IntegrationVersion'] == null ? undefined : json['IntegrationVersion'],
        'accountID': json['AccountID'] == null ? undefined : json['AccountID'],
        'customFields': json['CustomFields'] == null ? undefined : ((json['CustomFields'] as Array<any>).map(IntegrationCustomFieldVmFromJSON)),
        'templateType': json['TemplateType'] == null ? undefined : json['TemplateType'],
        'reopenStatus': json['ReopenStatus'] == null ? undefined : json['ReopenStatus'],
        'resolvedStatus': json['ResolvedStatus'] == null ? undefined : json['ResolvedStatus'],
        'titleFormat': json['TitleFormat'],
        'integrationWizardResultModel': json['IntegrationWizardResultModel'] == null ? undefined : IntegrationWizardResultModelFromJSON(json['IntegrationWizardResultModel']),
        'id': json['Id'] == null ? undefined : json['Id'],
        'state': json['State'] == null ? undefined : json['State'],
    };
}

export function BugzillaIntegrationInfoModelToJSON(value?: Omit<BugzillaIntegrationInfoModel, 'Type'|'GenericErrorMessage'|'Identifier'|'TestMessageBody'|'TestMessageTitle'|'WebhookUrl'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'Url': value['url'],
        'ApiKey': value['apiKey'],
        'Product': value['product'],
        'Component': value['component'],
        'Version': value['version'],
        'Platform': value['platform'],
        'OperationSystem': value['operationSystem'],
        'Status': value['status'],
        'Priority': value['priority'],
        'AssignedTo': value['assignedTo'],
        'Severity': value['severity'],
        'Milestone': value['milestone'],
        'DueDays': value['dueDays'],
        'Name': value['name'],
        'IntegrationVersion': value['integrationVersion'],
        'AccountID': value['accountID'],
        'CustomFields': value['customFields'] == null ? undefined : ((value['customFields'] as Array<any>).map(IntegrationCustomFieldVmToJSON)),
        'TemplateType': value['templateType'],
        'ReopenStatus': value['reopenStatus'],
        'ResolvedStatus': value['resolvedStatus'],
        'TitleFormat': value['titleFormat'],
        'IntegrationWizardResultModel': IntegrationWizardResultModelToJSON(value['integrationWizardResultModel']),
        'Id': value['id'],
        'State': value['state'],
    };
}

