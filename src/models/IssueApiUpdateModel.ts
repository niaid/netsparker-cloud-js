/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Represents a class that carries vulnerability information.
 * @export
 * @interface IssueApiUpdateModel
 */
export interface IssueApiUpdateModel {
    /**
     * Gets or sets the identifier.
     * @type {string}
     * @memberof IssueApiUpdateModel
     */
    issueId?: string;
    /**
     * Gets or sets the state.
     * Possible state values are: FalsePositive, AcceptedRisk, FixedCantRetest, FixedUnconfirmed
     * @type {string}
     * @memberof IssueApiUpdateModel
     */
    state?: string;
    /**
     * Gets or sets the assignee identifier.
     * @type {string}
     * @memberof IssueApiUpdateModel
     */
    assigneeId?: string;
    /**
     * Gets or sets the note.
     * @type {string}
     * @memberof IssueApiUpdateModel
     */
    note?: string;
    /**
     * Gets or sets the tags
     * @type {Array<string>}
     * @memberof IssueApiUpdateModel
     */
    tags?: Array<string>;
}

/**
 * Check if a given object implements the IssueApiUpdateModel interface.
 */
export function instanceOfIssueApiUpdateModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function IssueApiUpdateModelFromJSON(json: any): IssueApiUpdateModel {
    return IssueApiUpdateModelFromJSONTyped(json, false);
}

export function IssueApiUpdateModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): IssueApiUpdateModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'issueId': !exists(json, 'IssueId') ? undefined : json['IssueId'],
        'state': !exists(json, 'State') ? undefined : json['State'],
        'assigneeId': !exists(json, 'AssigneeId') ? undefined : json['AssigneeId'],
        'note': !exists(json, 'Note') ? undefined : json['Note'],
        'tags': !exists(json, 'Tags') ? undefined : json['Tags'],
    };
}

export function IssueApiUpdateModelToJSON(value?: IssueApiUpdateModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'IssueId': value.issueId,
        'State': value.state,
        'AssigneeId': value.assigneeId,
        'Note': value.note,
        'Tags': value.tags,
    };
}

