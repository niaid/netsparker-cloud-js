/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AttackingSettingModel } from './AttackingSettingModel';
import {
    AttackingSettingModelFromJSON,
    AttackingSettingModelFromJSONTyped,
    AttackingSettingModelToJSON,
} from './AttackingSettingModel';
import type { AutoCompleteSettingModel } from './AutoCompleteSettingModel';
import {
    AutoCompleteSettingModelFromJSON,
    AutoCompleteSettingModelFromJSONTyped,
    AutoCompleteSettingModelToJSON,
} from './AutoCompleteSettingModel';
import type { BrowserSetting } from './BrowserSetting';
import {
    BrowserSettingFromJSON,
    BrowserSettingFromJSONTyped,
    BrowserSettingToJSON,
} from './BrowserSetting';
import type { BruteForceSettingModel } from './BruteForceSettingModel';
import {
    BruteForceSettingModelFromJSON,
    BruteForceSettingModelFromJSONTyped,
    BruteForceSettingModelToJSON,
} from './BruteForceSettingModel';
import type { CrawlingSettingModel } from './CrawlingSettingModel';
import {
    CrawlingSettingModelFromJSON,
    CrawlingSettingModelFromJSONTyped,
    CrawlingSettingModelToJSON,
} from './CrawlingSettingModel';
import type { CsrfSettingModel } from './CsrfSettingModel';
import {
    CsrfSettingModelFromJSON,
    CsrfSettingModelFromJSONTyped,
    CsrfSettingModelToJSON,
} from './CsrfSettingModel';
import type { Custom404SettingModel } from './Custom404SettingModel';
import {
    Custom404SettingModelFromJSON,
    Custom404SettingModelFromJSONTyped,
    Custom404SettingModelToJSON,
} from './Custom404SettingModel';
import type { CustomHttpHeaderSetting } from './CustomHttpHeaderSetting';
import {
    CustomHttpHeaderSettingFromJSON,
    CustomHttpHeaderSettingFromJSONTyped,
    CustomHttpHeaderSettingToJSON,
} from './CustomHttpHeaderSetting';
import type { EmailPatternSetting } from './EmailPatternSetting';
import {
    EmailPatternSettingFromJSON,
    EmailPatternSettingFromJSONTyped,
    EmailPatternSettingToJSON,
} from './EmailPatternSetting';
import type { ExtensionSettingModel } from './ExtensionSettingModel';
import {
    ExtensionSettingModelFromJSON,
    ExtensionSettingModelFromJSONTyped,
    ExtensionSettingModelToJSON,
} from './ExtensionSettingModel';
import type { FormValueSettingModel } from './FormValueSettingModel';
import {
    FormValueSettingModelFromJSON,
    FormValueSettingModelFromJSONTyped,
    FormValueSettingModelToJSON,
} from './FormValueSettingModel';
import type { HttpRequestSettingModel } from './HttpRequestSettingModel';
import {
    HttpRequestSettingModelFromJSON,
    HttpRequestSettingModelFromJSONTyped,
    HttpRequestSettingModelToJSON,
} from './HttpRequestSettingModel';
import type { IgnorePatternSettingModel } from './IgnorePatternSettingModel';
import {
    IgnorePatternSettingModelFromJSON,
    IgnorePatternSettingModelFromJSONTyped,
    IgnorePatternSettingModelToJSON,
} from './IgnorePatternSettingModel';
import type { JavaScriptSettingsModel } from './JavaScriptSettingsModel';
import {
    JavaScriptSettingsModelFromJSON,
    JavaScriptSettingsModelFromJSONTyped,
    JavaScriptSettingsModelToJSON,
} from './JavaScriptSettingsModel';
import type { ProxySettingsModel } from './ProxySettingsModel';
import {
    ProxySettingsModelFromJSON,
    ProxySettingsModelFromJSONTyped,
    ProxySettingsModelToJSON,
} from './ProxySettingsModel';
import type { ScopeSettingModel } from './ScopeSettingModel';
import {
    ScopeSettingModelFromJSON,
    ScopeSettingModelFromJSONTyped,
    ScopeSettingModelToJSON,
} from './ScopeSettingModel';
import type { SecurityCheckGroupParentModel } from './SecurityCheckGroupParentModel';
import {
    SecurityCheckGroupParentModelFromJSON,
    SecurityCheckGroupParentModelFromJSONTyped,
    SecurityCheckGroupParentModelToJSON,
} from './SecurityCheckGroupParentModel';
import type { SensitiveKeywordSettingModel } from './SensitiveKeywordSettingModel';
import {
    SensitiveKeywordSettingModelFromJSON,
    SensitiveKeywordSettingModelFromJSONTyped,
    SensitiveKeywordSettingModelToJSON,
} from './SensitiveKeywordSettingModel';
import type { SslTlsSettingModel } from './SslTlsSettingModel';
import {
    SslTlsSettingModelFromJSON,
    SslTlsSettingModelFromJSONTyped,
    SslTlsSettingModelToJSON,
} from './SslTlsSettingModel';
import type { WebStorageSetting } from './WebStorageSetting';
import {
    WebStorageSettingFromJSON,
    WebStorageSettingFromJSONTyped,
    WebStorageSettingToJSON,
} from './WebStorageSetting';

/**
 * Represents a model for carrying out new scan policy settings.
 * @export
 * @interface NewScanPolicySettingModel
 */
export interface NewScanPolicySettingModel {
    /**
     * Gets the desktop identifier.
     * @type {string}
     * @memberof NewScanPolicySettingModel
     */
    desktopId?: string;
    /**
     * 
     * @type {AttackingSettingModel}
     * @memberof NewScanPolicySettingModel
     */
    attackingSettings: AttackingSettingModel;
    /**
     * Gets or sets the auto complete settings.
     * @type {Array<AutoCompleteSettingModel>}
     * @memberof NewScanPolicySettingModel
     */
    autoCompleteSettings?: Array<AutoCompleteSettingModel>;
    /**
     * 
     * @type {BruteForceSettingModel}
     * @memberof NewScanPolicySettingModel
     */
    bruteForceSettings: BruteForceSettingModel;
    /**
     * 
     * @type {CrawlingSettingModel}
     * @memberof NewScanPolicySettingModel
     */
    crawlingSettings: CrawlingSettingModel;
    /**
     * 
     * @type {CsrfSettingModel}
     * @memberof NewScanPolicySettingModel
     */
    csrfSettings?: CsrfSettingModel;
    /**
     * 
     * @type {Custom404SettingModel}
     * @memberof NewScanPolicySettingModel
     */
    custom404Settings: Custom404SettingModel;
    /**
     * Gets or sets the custom HTTP header settings.
     * @type {Array<CustomHttpHeaderSetting>}
     * @memberof NewScanPolicySettingModel
     */
    customHttpHeaderSettings?: Array<CustomHttpHeaderSetting>;
    /**
     * Gets or sets the description.
     * @type {string}
     * @memberof NewScanPolicySettingModel
     */
    description?: string;
    /**
     * Gets or sets a value indicating whether knowledgebase is enabled.
     * @type {boolean}
     * @memberof NewScanPolicySettingModel
     */
    enableKnowledgebase?: boolean;
    /**
     * Gets or sets the form value settings.
     * @type {Array<FormValueSettingModel>}
     * @memberof NewScanPolicySettingModel
     */
    formValueSettings?: Array<FormValueSettingModel>;
    /**
     * 
     * @type {HttpRequestSettingModel}
     * @memberof NewScanPolicySettingModel
     */
    httpRequestSettings: HttpRequestSettingModel;
    /**
     * Gets or sets the ignored email patterns.
     * @type {Array<EmailPatternSetting>}
     * @memberof NewScanPolicySettingModel
     */
    ignoredEmailPatterns?: Array<EmailPatternSetting>;
    /**
     * Gets or sets the ignored parameter patterns.
     * @type {Array<IgnorePatternSettingModel>}
     * @memberof NewScanPolicySettingModel
     */
    ignorePatternSettings?: Array<IgnorePatternSettingModel>;
    /**
     * Gets or sets a value indicating whether this scan policy is shared.
     * If you set this value to true, you have to fill in the SelectedGroups value.
     * @type {boolean}
     * @memberof NewScanPolicySettingModel
     */
    isShared?: boolean;
    /**
     * 
     * @type {JavaScriptSettingsModel}
     * @memberof NewScanPolicySettingModel
     */
    javaScriptSettings: JavaScriptSettingsModel;
    /**
     * Gets or sets the name.
     * @type {string}
     * @memberof NewScanPolicySettingModel
     */
    name: string;
    /**
     * 
     * @type {ProxySettingsModel}
     * @memberof NewScanPolicySettingModel
     */
    proxySettings?: ProxySettingsModel;
    /**
     * 
     * @type {ScopeSettingModel}
     * @memberof NewScanPolicySettingModel
     */
    scopeSettings: ScopeSettingModel;
    /**
     * Gets or sets the engine settings.
     * @type {Array<SecurityCheckGroupParentModel>}
     * @memberof NewScanPolicySettingModel
     */
    securityCheckGroupParents?: Array<SecurityCheckGroupParentModel>;
    /**
     * Gets or sets the selected website groups.
     * @type {Array<string>}
     * @memberof NewScanPolicySettingModel
     */
    selectedGroups?: Array<string>;
    /**
     * Gets or sets the sensitive keyword settings.
     * @type {Array<SensitiveKeywordSettingModel>}
     * @memberof NewScanPolicySettingModel
     */
    sensitiveKeywordSettings?: Array<SensitiveKeywordSettingModel>;
    /**
     * 
     * @type {SslTlsSettingModel}
     * @memberof NewScanPolicySettingModel
     */
    sslTlsSettingModel: SslTlsSettingModel;
    /**
     * Gets or sets the Web Storage Settings
     * @type {Array<WebStorageSetting>}
     * @memberof NewScanPolicySettingModel
     */
    webStorageSettings?: Array<WebStorageSetting>;
    /**
     * Gets or sets the Extension Settings
     * @type {Array<ExtensionSettingModel>}
     * @memberof NewScanPolicySettingModel
     */
    extensionSettings?: Array<ExtensionSettingModel>;
    /**
     * Gets or sets the default browser parameters
     * @type {Array<BrowserSetting>}
     * @memberof NewScanPolicySettingModel
     */
    defaultBrowserParameters?: Array<BrowserSetting>;
    /**
     * Gets or sets the handful browser parameters
     * @type {Array<BrowserSetting>}
     * @memberof NewScanPolicySettingModel
     */
    headfulBrowserParameters?: Array<BrowserSetting>;
    /**
     * Gets or sets the resource finders.
     * @type {Array<string>}
     * @memberof NewScanPolicySettingModel
     */
    resourceFinders?: Array<string>;
    /**
     * Gets or sets the cloned scan polic setting identifier.
     * @type {string}
     * @memberof NewScanPolicySettingModel
     */
    clonedScanPolicySettingId?: string;
}

/**
 * Check if a given object implements the NewScanPolicySettingModel interface.
 */
export function instanceOfNewScanPolicySettingModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "attackingSettings" in value;
    isInstance = isInstance && "bruteForceSettings" in value;
    isInstance = isInstance && "crawlingSettings" in value;
    isInstance = isInstance && "custom404Settings" in value;
    isInstance = isInstance && "httpRequestSettings" in value;
    isInstance = isInstance && "javaScriptSettings" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "scopeSettings" in value;
    isInstance = isInstance && "sslTlsSettingModel" in value;

    return isInstance;
}

export function NewScanPolicySettingModelFromJSON(json: any): NewScanPolicySettingModel {
    return NewScanPolicySettingModelFromJSONTyped(json, false);
}

export function NewScanPolicySettingModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): NewScanPolicySettingModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'desktopId': !exists(json, 'DesktopId') ? undefined : json['DesktopId'],
        'attackingSettings': AttackingSettingModelFromJSON(json['AttackingSettings']),
        'autoCompleteSettings': !exists(json, 'AutoCompleteSettings') ? undefined : ((json['AutoCompleteSettings'] as Array<any>).map(AutoCompleteSettingModelFromJSON)),
        'bruteForceSettings': BruteForceSettingModelFromJSON(json['BruteForceSettings']),
        'crawlingSettings': CrawlingSettingModelFromJSON(json['CrawlingSettings']),
        'csrfSettings': !exists(json, 'CsrfSettings') ? undefined : CsrfSettingModelFromJSON(json['CsrfSettings']),
        'custom404Settings': Custom404SettingModelFromJSON(json['Custom404Settings']),
        'customHttpHeaderSettings': !exists(json, 'CustomHttpHeaderSettings') ? undefined : ((json['CustomHttpHeaderSettings'] as Array<any>).map(CustomHttpHeaderSettingFromJSON)),
        'description': !exists(json, 'Description') ? undefined : json['Description'],
        'enableKnowledgebase': !exists(json, 'EnableKnowledgebase') ? undefined : json['EnableKnowledgebase'],
        'formValueSettings': !exists(json, 'FormValueSettings') ? undefined : ((json['FormValueSettings'] as Array<any>).map(FormValueSettingModelFromJSON)),
        'httpRequestSettings': HttpRequestSettingModelFromJSON(json['HttpRequestSettings']),
        'ignoredEmailPatterns': !exists(json, 'IgnoredEmailPatterns') ? undefined : ((json['IgnoredEmailPatterns'] as Array<any>).map(EmailPatternSettingFromJSON)),
        'ignorePatternSettings': !exists(json, 'IgnorePatternSettings') ? undefined : ((json['IgnorePatternSettings'] as Array<any>).map(IgnorePatternSettingModelFromJSON)),
        'isShared': !exists(json, 'IsShared') ? undefined : json['IsShared'],
        'javaScriptSettings': JavaScriptSettingsModelFromJSON(json['JavaScriptSettings']),
        'name': json['Name'],
        'proxySettings': !exists(json, 'ProxySettings') ? undefined : ProxySettingsModelFromJSON(json['ProxySettings']),
        'scopeSettings': ScopeSettingModelFromJSON(json['ScopeSettings']),
        'securityCheckGroupParents': !exists(json, 'SecurityCheckGroupParents') ? undefined : ((json['SecurityCheckGroupParents'] as Array<any>).map(SecurityCheckGroupParentModelFromJSON)),
        'selectedGroups': !exists(json, 'SelectedGroups') ? undefined : json['SelectedGroups'],
        'sensitiveKeywordSettings': !exists(json, 'SensitiveKeywordSettings') ? undefined : ((json['SensitiveKeywordSettings'] as Array<any>).map(SensitiveKeywordSettingModelFromJSON)),
        'sslTlsSettingModel': SslTlsSettingModelFromJSON(json['SslTlsSettingModel']),
        'webStorageSettings': !exists(json, 'WebStorageSettings') ? undefined : ((json['WebStorageSettings'] as Array<any>).map(WebStorageSettingFromJSON)),
        'extensionSettings': !exists(json, 'ExtensionSettings') ? undefined : ((json['ExtensionSettings'] as Array<any>).map(ExtensionSettingModelFromJSON)),
        'defaultBrowserParameters': !exists(json, 'DefaultBrowserParameters') ? undefined : ((json['DefaultBrowserParameters'] as Array<any>).map(BrowserSettingFromJSON)),
        'headfulBrowserParameters': !exists(json, 'HeadfulBrowserParameters') ? undefined : ((json['HeadfulBrowserParameters'] as Array<any>).map(BrowserSettingFromJSON)),
        'resourceFinders': !exists(json, 'ResourceFinders') ? undefined : json['ResourceFinders'],
        'clonedScanPolicySettingId': !exists(json, 'ClonedScanPolicySettingId') ? undefined : json['ClonedScanPolicySettingId'],
    };
}

export function NewScanPolicySettingModelToJSON(value?: NewScanPolicySettingModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'DesktopId': value.desktopId,
        'AttackingSettings': AttackingSettingModelToJSON(value.attackingSettings),
        'AutoCompleteSettings': value.autoCompleteSettings === undefined ? undefined : ((value.autoCompleteSettings as Array<any>).map(AutoCompleteSettingModelToJSON)),
        'BruteForceSettings': BruteForceSettingModelToJSON(value.bruteForceSettings),
        'CrawlingSettings': CrawlingSettingModelToJSON(value.crawlingSettings),
        'CsrfSettings': CsrfSettingModelToJSON(value.csrfSettings),
        'Custom404Settings': Custom404SettingModelToJSON(value.custom404Settings),
        'CustomHttpHeaderSettings': value.customHttpHeaderSettings === undefined ? undefined : ((value.customHttpHeaderSettings as Array<any>).map(CustomHttpHeaderSettingToJSON)),
        'Description': value.description,
        'EnableKnowledgebase': value.enableKnowledgebase,
        'FormValueSettings': value.formValueSettings === undefined ? undefined : ((value.formValueSettings as Array<any>).map(FormValueSettingModelToJSON)),
        'HttpRequestSettings': HttpRequestSettingModelToJSON(value.httpRequestSettings),
        'IgnoredEmailPatterns': value.ignoredEmailPatterns === undefined ? undefined : ((value.ignoredEmailPatterns as Array<any>).map(EmailPatternSettingToJSON)),
        'IgnorePatternSettings': value.ignorePatternSettings === undefined ? undefined : ((value.ignorePatternSettings as Array<any>).map(IgnorePatternSettingModelToJSON)),
        'IsShared': value.isShared,
        'JavaScriptSettings': JavaScriptSettingsModelToJSON(value.javaScriptSettings),
        'Name': value.name,
        'ProxySettings': ProxySettingsModelToJSON(value.proxySettings),
        'ScopeSettings': ScopeSettingModelToJSON(value.scopeSettings),
        'SecurityCheckGroupParents': value.securityCheckGroupParents === undefined ? undefined : ((value.securityCheckGroupParents as Array<any>).map(SecurityCheckGroupParentModelToJSON)),
        'SelectedGroups': value.selectedGroups,
        'SensitiveKeywordSettings': value.sensitiveKeywordSettings === undefined ? undefined : ((value.sensitiveKeywordSettings as Array<any>).map(SensitiveKeywordSettingModelToJSON)),
        'SslTlsSettingModel': SslTlsSettingModelToJSON(value.sslTlsSettingModel),
        'WebStorageSettings': value.webStorageSettings === undefined ? undefined : ((value.webStorageSettings as Array<any>).map(WebStorageSettingToJSON)),
        'ExtensionSettings': value.extensionSettings === undefined ? undefined : ((value.extensionSettings as Array<any>).map(ExtensionSettingModelToJSON)),
        'DefaultBrowserParameters': value.defaultBrowserParameters === undefined ? undefined : ((value.defaultBrowserParameters as Array<any>).map(BrowserSettingToJSON)),
        'HeadfulBrowserParameters': value.headfulBrowserParameters === undefined ? undefined : ((value.headfulBrowserParameters as Array<any>).map(BrowserSettingToJSON)),
        'ResourceFinders': value.resourceFinders,
        'ClonedScanPolicySettingId': value.clonedScanPolicySettingId,
    };
}

