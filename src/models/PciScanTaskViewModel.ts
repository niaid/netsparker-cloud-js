/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Pci Scan Task view model
 * @export
 * @interface PciScanTaskViewModel
 */
export interface PciScanTaskViewModel {
    /**
     * Gets or sets the name
     * @type {string}
     * @memberof PciScanTaskViewModel
     */
    name?: string;
    /**
     * Gets or sets the progress for scan task
     * @type {number}
     * @memberof PciScanTaskViewModel
     */
    progress?: number;
    /**
     * Gets or sets the scan state
     * @type {string}
     * @memberof PciScanTaskViewModel
     */
    scanState?: PciScanTaskViewModelScanStateEnum;
    /**
     * Gets or sets the compliance status. This will be setted when pci scan task is done
     * @type {string}
     * @memberof PciScanTaskViewModel
     */
    complianceStatus?: PciScanTaskViewModelComplianceStatusEnum;
    /**
     * Gets or sets the end date
     * @type {Date}
     * @memberof PciScanTaskViewModel
     */
    endDate?: Date;
}

/**
* @export
* @enum {string}
*/
export enum PciScanTaskViewModelScanStateEnum {
    New = 'New',
    Running = 'Running',
    Stopped = 'Stopped',
    Deleted = 'Deleted',
    Done = 'Done'
}
/**
* @export
* @enum {string}
*/
export enum PciScanTaskViewModelComplianceStatusEnum {
    Scanning = 'Scanning',
    Passed = 'Passed',
    Failed = 'Failed'
}


/**
 * Check if a given object implements the PciScanTaskViewModel interface.
 */
export function instanceOfPciScanTaskViewModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PciScanTaskViewModelFromJSON(json: any): PciScanTaskViewModel {
    return PciScanTaskViewModelFromJSONTyped(json, false);
}

export function PciScanTaskViewModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): PciScanTaskViewModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'Name') ? undefined : json['Name'],
        'progress': !exists(json, 'Progress') ? undefined : json['Progress'],
        'scanState': !exists(json, 'ScanState') ? undefined : json['ScanState'],
        'complianceStatus': !exists(json, 'ComplianceStatus') ? undefined : json['ComplianceStatus'],
        'endDate': !exists(json, 'EndDate') ? undefined : (new Date(json['EndDate'])),
    };
}

export function PciScanTaskViewModelToJSON(value?: PciScanTaskViewModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Name': value.name,
        'Progress': value.progress,
        'ScanState': value.scanState,
        'ComplianceStatus': value.complianceStatus,
        'EndDate': value.endDate === undefined ? undefined : (value.endDate.toISOString()),
    };
}

