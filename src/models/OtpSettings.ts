/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Represents otp settings
 * @export
 * @interface OtpSettings
 */
export interface OtpSettings {
    /**
     * Gets or sets OtpType.
     * @type {string}
     * @memberof OtpSettings
     */
    otpType?: OtpSettingsOtpTypeEnum;
    /**
     * Gets or sets secret key.
     * @type {string}
     * @memberof OtpSettings
     */
    secretKey?: string;
    /**
     * Gets or sets digit.
     * @type {number}
     * @memberof OtpSettings
     */
    digit?: number;
    /**
     * Gets or sets period (seconds).
     * @type {number}
     * @memberof OtpSettings
     */
    period?: number;
    /**
     * Gets or sets hash algorithm.
     * @type {string}
     * @memberof OtpSettings
     */
    algorithm?: OtpSettingsAlgorithmEnum;
}


/**
 * @export
 */
export const OtpSettingsOtpTypeEnum = {
    Totp: 'Totp',
    Hotp: 'Hotp'
} as const;
export type OtpSettingsOtpTypeEnum = typeof OtpSettingsOtpTypeEnum[keyof typeof OtpSettingsOtpTypeEnum];

/**
 * @export
 */
export const OtpSettingsAlgorithmEnum = {
    Sha1: 'Sha1',
    Sha256: 'Sha256',
    Sha512: 'Sha512'
} as const;
export type OtpSettingsAlgorithmEnum = typeof OtpSettingsAlgorithmEnum[keyof typeof OtpSettingsAlgorithmEnum];


/**
 * Check if a given object implements the OtpSettings interface.
 */
export function instanceOfOtpSettings(value: object): boolean {
    return true;
}

export function OtpSettingsFromJSON(json: any): OtpSettings {
    return OtpSettingsFromJSONTyped(json, false);
}

export function OtpSettingsFromJSONTyped(json: any, ignoreDiscriminator: boolean): OtpSettings {
    if (json == null) {
        return json;
    }
    return {
        
        'otpType': json['OtpType'] == null ? undefined : json['OtpType'],
        'secretKey': json['SecretKey'] == null ? undefined : json['SecretKey'],
        'digit': json['Digit'] == null ? undefined : json['Digit'],
        'period': json['Period'] == null ? undefined : json['Period'],
        'algorithm': json['Algorithm'] == null ? undefined : json['Algorithm'],
    };
}

export function OtpSettingsToJSON(value?: OtpSettings | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'OtpType': value['otpType'],
        'SecretKey': value['secretKey'],
        'Digit': value['digit'],
        'Period': value['period'],
        'Algorithm': value['algorithm'],
    };
}

