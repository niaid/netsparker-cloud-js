/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Represents a model for carrying out ignored parameter patterns.
 * @export
 * @interface IgnorePatternSettingModel
 */
export interface IgnorePatternSettingModel {
    /**
     * Gets or sets the pattern name.
     * @type {string}
     * @memberof IgnorePatternSettingModel
     */
    name: string;
    /**
     * Gets or sets the type of the parameter.
     * @type {string}
     * @memberof IgnorePatternSettingModel
     */
    parameterType: IgnorePatternSettingModelParameterTypeEnum;
    /**
     * Gets or sets the RegEx pattern.
     * @type {string}
     * @memberof IgnorePatternSettingModel
     */
    pattern: string;
}


/**
 * @export
 */
export const IgnorePatternSettingModelParameterTypeEnum = {
    Post: 'POST',
    Get: 'GET',
    Cookie: 'COOKIE',
    Webstorage: 'WEBSTORAGE',
    All: 'ALL',
    Setcookie: 'SETCOOKIE'
} as const;
export type IgnorePatternSettingModelParameterTypeEnum = typeof IgnorePatternSettingModelParameterTypeEnum[keyof typeof IgnorePatternSettingModelParameterTypeEnum];


/**
 * Check if a given object implements the IgnorePatternSettingModel interface.
 */
export function instanceOfIgnorePatternSettingModel(value: object): boolean {
    if (!('name' in value)) return false;
    if (!('parameterType' in value)) return false;
    if (!('pattern' in value)) return false;
    return true;
}

export function IgnorePatternSettingModelFromJSON(json: any): IgnorePatternSettingModel {
    return IgnorePatternSettingModelFromJSONTyped(json, false);
}

export function IgnorePatternSettingModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): IgnorePatternSettingModel {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['Name'],
        'parameterType': json['ParameterType'],
        'pattern': json['Pattern'],
    };
}

export function IgnorePatternSettingModelToJSON(value?: IgnorePatternSettingModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'Name': value['name'],
        'ParameterType': value['parameterType'],
        'Pattern': value['pattern'],
    };
}

