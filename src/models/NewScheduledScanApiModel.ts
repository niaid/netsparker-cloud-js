/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AdditionalWebsiteModel } from './AdditionalWebsiteModel';
import {
    AdditionalWebsiteModelFromJSON,
    AdditionalWebsiteModelFromJSONTyped,
    AdditionalWebsiteModelToJSON,
} from './AdditionalWebsiteModel';
import type { ApiFileModel } from './ApiFileModel';
import {
    ApiFileModelFromJSON,
    ApiFileModelFromJSONTyped,
    ApiFileModelToJSON,
} from './ApiFileModel';
import type { BasicAuthenticationSettingModel } from './BasicAuthenticationSettingModel';
import {
    BasicAuthenticationSettingModelFromJSON,
    BasicAuthenticationSettingModelFromJSONTyped,
    BasicAuthenticationSettingModelToJSON,
} from './BasicAuthenticationSettingModel';
import type { BusinessLogicRecorderSettingModel } from './BusinessLogicRecorderSettingModel';
import {
    BusinessLogicRecorderSettingModelFromJSON,
    BusinessLogicRecorderSettingModelFromJSONTyped,
    BusinessLogicRecorderSettingModelToJSON,
} from './BusinessLogicRecorderSettingModel';
import type { ClientCertificateAuthenticationApiModel } from './ClientCertificateAuthenticationApiModel';
import {
    ClientCertificateAuthenticationApiModelFromJSON,
    ClientCertificateAuthenticationApiModelFromJSONTyped,
    ClientCertificateAuthenticationApiModelToJSON,
} from './ClientCertificateAuthenticationApiModel';
import type { ExcludedLinkModel } from './ExcludedLinkModel';
import {
    ExcludedLinkModelFromJSON,
    ExcludedLinkModelFromJSONTyped,
    ExcludedLinkModelToJSON,
} from './ExcludedLinkModel';
import type { ExcludedUsageTrackerModel } from './ExcludedUsageTrackerModel';
import {
    ExcludedUsageTrackerModelFromJSON,
    ExcludedUsageTrackerModelFromJSONTyped,
    ExcludedUsageTrackerModelToJSON,
} from './ExcludedUsageTrackerModel';
import type { FormAuthenticationSettingModel } from './FormAuthenticationSettingModel';
import {
    FormAuthenticationSettingModelFromJSON,
    FormAuthenticationSettingModelFromJSONTyped,
    FormAuthenticationSettingModelToJSON,
} from './FormAuthenticationSettingModel';
import type { HeaderAuthenticationModel } from './HeaderAuthenticationModel';
import {
    HeaderAuthenticationModelFromJSON,
    HeaderAuthenticationModelFromJSONTyped,
    HeaderAuthenticationModelToJSON,
} from './HeaderAuthenticationModel';
import type { OAuth2SettingApiModel } from './OAuth2SettingApiModel';
import {
    OAuth2SettingApiModelFromJSON,
    OAuth2SettingApiModelFromJSONTyped,
    OAuth2SettingApiModelToJSON,
} from './OAuth2SettingApiModel';
import type { PreRequestScriptSettingModel } from './PreRequestScriptSettingModel';
import {
    PreRequestScriptSettingModelFromJSON,
    PreRequestScriptSettingModelFromJSONTyped,
    PreRequestScriptSettingModelToJSON,
} from './PreRequestScriptSettingModel';
import type { ScanTimeWindowModel } from './ScanTimeWindowModel';
import {
    ScanTimeWindowModelFromJSON,
    ScanTimeWindowModelFromJSONTyped,
    ScanTimeWindowModelToJSON,
} from './ScanTimeWindowModel';
import type { ScheduledScanRecurrenceApiModel } from './ScheduledScanRecurrenceApiModel';
import {
    ScheduledScanRecurrenceApiModelFromJSON,
    ScheduledScanRecurrenceApiModelFromJSONTyped,
    ScheduledScanRecurrenceApiModelToJSON,
} from './ScheduledScanRecurrenceApiModel';
import type { SharkModel } from './SharkModel';
import {
    SharkModelFromJSON,
    SharkModelFromJSONTyped,
    SharkModelToJSON,
} from './SharkModel';
import type { UrlRewriteExcludedPathModel } from './UrlRewriteExcludedPathModel';
import {
    UrlRewriteExcludedPathModelFromJSON,
    UrlRewriteExcludedPathModelFromJSONTyped,
    UrlRewriteExcludedPathModelToJSON,
} from './UrlRewriteExcludedPathModel';
import type { UrlRewriteRuleModel } from './UrlRewriteRuleModel';
import {
    UrlRewriteRuleModelFromJSON,
    UrlRewriteRuleModelFromJSONTyped,
    UrlRewriteRuleModelToJSON,
} from './UrlRewriteRuleModel';

/**
 * Contains properties that required to start scheduled scan.
 * @export
 * @interface NewScheduledScanApiModel
 */
export interface NewScheduledScanApiModel {
    /**
     * Gets or sets the name.
     * @type {string}
     * @memberof NewScheduledScanApiModel
     */
    name: string;
    /**
     * Gets or sets the next execution time.
     * Date string must be in the same format as in the account settings.
     * @type {string}
     * @memberof NewScheduledScanApiModel
     */
    nextExecutionTime: string;
    /**
     * Gets or sets the run interval of scheduled scan.
     * @type {string}
     * @memberof NewScheduledScanApiModel
     */
    scheduleRunType: NewScheduledScanApiModelScheduleRunTypeEnum;
    /**
     * 
     * @type {ScheduledScanRecurrenceApiModel}
     * @memberof NewScheduledScanApiModel
     */
    customRecurrence?: ScheduledScanRecurrenceApiModel;
    /**
     * Gets or sets the target URI.
     * @type {string}
     * @memberof NewScheduledScanApiModel
     */
    targetUri?: string;
    /**
     * Gets or sets whether is target URL required.
     * @type {boolean}
     * @memberof NewScheduledScanApiModel
     */
    readonly isTargetUrlRequired?: boolean;
    /**
     * Gets or sets the type of the create.
     * @type {string}
     * @memberof NewScheduledScanApiModel
     */
    createType?: NewScheduledScanApiModelCreateTypeEnum;
    /**
     * Gets or sets the website group identifier. This property is required if CreateType is WebsiteGroup
     * @type {string}
     * @memberof NewScheduledScanApiModel
     */
    websiteGroupId?: string;
    /**
     * Gets or sets the additional websites to scan.
     * @type {Array<AdditionalWebsiteModel>}
     * @memberof NewScheduledScanApiModel
     */
    additionalWebsites?: Array<AdditionalWebsiteModel>;
    /**
     * 
     * @type {BasicAuthenticationSettingModel}
     * @memberof NewScheduledScanApiModel
     */
    basicAuthenticationApiModel?: BasicAuthenticationSettingModel;
    /**
     * 
     * @type {ClientCertificateAuthenticationApiModel}
     * @memberof NewScheduledScanApiModel
     */
    clientCertificateAuthenticationSetting?: ClientCertificateAuthenticationApiModel;
    /**
     * Gets or sets the cookies. Separate multiple cookies with semicolon. Cookie values must be URL encoded. You can use the
     * following format: Cookiename=Value
     * @type {string}
     * @memberof NewScheduledScanApiModel
     */
    cookies?: string;
    /**
     * Gets or sets a value indicating whether parallel attacker is enabled.
     * Default: true
     * @type {boolean}
     * @memberof NewScheduledScanApiModel
     */
    crawlAndAttack?: boolean;
    /**
     * Gets or sets a value indicating whether Heuristic URL Rewrite support is enabled together with custom URL Rewrite
     * support.
     * @type {boolean}
     * @memberof NewScheduledScanApiModel
     */
    enableHeuristicChecksInCustomUrlRewrite?: boolean;
    /**
     * Gets or sets the excluded links.
     * Default: "(log|sign)\\-?(out|off)", "exit", "endsession", "gtm\\.js"
     * @type {Array<ExcludedLinkModel>}
     * @memberof NewScheduledScanApiModel
     */
    excludedLinks?: Array<ExcludedLinkModel>;
    /**
     * Gets or sets the excluded usage trackers.
     * @type {Array<ExcludedUsageTrackerModel>}
     * @memberof NewScheduledScanApiModel
     */
    excludedUsageTrackers?: Array<ExcludedUsageTrackerModel>;
    /**
     * Gets or sets the disallowed http methods.
     * @type {Array<string>}
     * @memberof NewScheduledScanApiModel
     */
    disallowedHttpMethods?: Array<NewScheduledScanApiModelDisallowedHttpMethodsEnum>;
    /**
     * Gets or sets a value indicating whether links should be excluded/included.
     * Default: <see ref="bool.True" />
     * @type {boolean}
     * @memberof NewScheduledScanApiModel
     */
    excludeLinks?: boolean;
    /**
     * Specifies whether the authentication related pages like login, logout etc. should be excluded from the scan.
     * If form authentication is enabled, exclude authentication pages will be set as true. If you want to scan exclude authentication pages please set as false.
     * @type {boolean}
     * @memberof NewScheduledScanApiModel
     */
    excludeAuthenticationPages?: boolean;
    /**
     * Gets or sets a value indicating whether automatic crawling is enabled.
     * @type {boolean}
     * @memberof NewScheduledScanApiModel
     */
    findAndFollowNewLinks?: boolean;
    /**
     * 
     * @type {FormAuthenticationSettingModel}
     * @memberof NewScheduledScanApiModel
     */
    formAuthenticationSettingModel?: FormAuthenticationSettingModel;
    /**
     * 
     * @type {HeaderAuthenticationModel}
     * @memberof NewScheduledScanApiModel
     */
    headerAuthentication?: HeaderAuthenticationModel;
    /**
     * 
     * @type {SharkModel}
     * @memberof NewScheduledScanApiModel
     */
    sharkSetting?: SharkModel;
    /**
     * Gets or sets the type of the authentication profile option.
     * @type {string}
     * @memberof NewScheduledScanApiModel
     */
    authenticationProfileOption?: NewScheduledScanApiModelAuthenticationProfileOptionEnum;
    /**
     * Gets or sets the type of the authentication profile identifier.
     * @type {string}
     * @memberof NewScheduledScanApiModel
     */
    authenticationProfileId?: string;
    /**
     * Gets or sets the imported links.
     * @type {Array<string>}
     * @memberof NewScheduledScanApiModel
     */
    importedLinks?: Array<string>;
    /**
     * Gets or sets the imported files. If imported files have not contains any URL, the file not added to scan profile.
     * @type {Array<ApiFileModel>}
     * @memberof NewScheduledScanApiModel
     */
    importedFiles?: Array<ApiFileModel>;
    /**
     * Gets or sets a value indicating whether max scan duration is enabled.
     * This is only used for scheduled group scan and regular group scan.
     * @type {boolean}
     * @memberof NewScheduledScanApiModel
     */
    isMaxScanDurationEnabled?: boolean;
    /**
     * Gets or sets the root path maximum dynamic signatures for heuristic URL Rewrite detection.
     * Default: 60
     * @type {number}
     * @memberof NewScheduledScanApiModel
     */
    maxDynamicSignatures?: number;
    /**
     * Gets or sets the maximum duration of the scan in hours.
     * Default: 48 hours
     * @type {number}
     * @memberof NewScheduledScanApiModel
     */
    maxScanDuration?: number;
    /**
     * Gets or sets the scan policy identifier.
     * Default: Default Security Checks
     * @type {string}
     * @memberof NewScheduledScanApiModel
     */
    policyId?: string;
    /**
     * Gets or sets the report policy identifier.
     * Default: Default Report Policy
     * @type {string}
     * @memberof NewScheduledScanApiModel
     */
    reportPolicyId?: string;
    /**
     * Gets or sets the scan scope.
     * Default: {Invicti.Cloud.Core.Models.ScanTaskScope.EnteredPathAndBelow}
     * @type {string}
     * @memberof NewScheduledScanApiModel
     */
    scope?: NewScheduledScanApiModelScopeEnum;
    /**
     * Gets or sets the sub path maximum dynamic signatures for heuristic URL Rewrite detection.
     * Default: 30
     * @type {number}
     * @memberof NewScheduledScanApiModel
     */
    subPathMaxDynamicSignatures?: number;
    /**
     * 
     * @type {ScanTimeWindowModel}
     * @memberof NewScheduledScanApiModel
     */
    timeWindow?: ScanTimeWindowModel;
    /**
     * Gets or sets the extensions that will be analyzed for heuristic URL Rewrite detection.
     * Default: htm,html
     * @type {string}
     * @memberof NewScheduledScanApiModel
     */
    urlRewriteAnalyzableExtensions?: string;
    /**
     * Gets or sets the block separators for heuristic URL Rewrite detection.
     * Default: /_ $.,;|:
     * @type {string}
     * @memberof NewScheduledScanApiModel
     */
    urlRewriteBlockSeparators?: string;
    /**
     * Gets or sets the URL Rewrite mode.
     * Default: Heuristic
     * @type {string}
     * @memberof NewScheduledScanApiModel
     */
    urlRewriteMode?: NewScheduledScanApiModelUrlRewriteModeEnum;
    /**
     * Gets or sets the URL Rewrite rules.
     * @type {Array<UrlRewriteRuleModel>}
     * @memberof NewScheduledScanApiModel
     */
    urlRewriteRules?: Array<UrlRewriteRuleModel>;
    /**
     * 
     * @type {PreRequestScriptSettingModel}
     * @memberof NewScheduledScanApiModel
     */
    preRequestScriptSetting?: PreRequestScriptSettingModel;
    /**
     * Gets or sets a value indicating whether http and https protocols are differentiated.
     * @type {boolean}
     * @memberof NewScheduledScanApiModel
     */
    doNotDifferentiateProtocols?: boolean;
    /**
     * Gets or sets the URL rewrite excluded links.
     * @type {Array<UrlRewriteExcludedPathModel>}
     * @memberof NewScheduledScanApiModel
     */
    urlRewriteExcludedLinks?: Array<UrlRewriteExcludedPathModel>;
    /**
     * 
     * @type {OAuth2SettingApiModel}
     * @memberof NewScheduledScanApiModel
     */
    oAuth2SettingModel?: OAuth2SettingApiModel;
    /**
     * Defines whether a pci scan task going to be started.
     * @type {boolean}
     * @memberof NewScheduledScanApiModel
     */
    enablePciScanTask?: boolean;
    /**
     * 
     * @type {BusinessLogicRecorderSettingModel}
     * @memberof NewScheduledScanApiModel
     */
    businessLogicRecorderSetting?: BusinessLogicRecorderSettingModel;
    /**
     * Gets or sets the tags
     * @type {Array<string>}
     * @memberof NewScheduledScanApiModel
     */
    tags?: Array<string>;
    /**
     * Gets or sets the Comments
     * @type {string}
     * @memberof NewScheduledScanApiModel
     */
    comments?: string;
}

/**
* @export
* @enum {string}
*/
export enum NewScheduledScanApiModelScheduleRunTypeEnum {
    Once = 'Once',
    Daily = 'Daily',
    Weekly = 'Weekly',
    Monthly = 'Monthly',
    Quarterly = 'Quarterly',
    Biannually = 'Biannually',
    Yearly = 'Yearly',
    Custom = 'Custom'
}
/**
* @export
* @enum {string}
*/
export enum NewScheduledScanApiModelCreateTypeEnum {
    Website = 'Website',
    WebsiteGroup = 'WebsiteGroup'
}
/**
* @export
* @enum {string}
*/
export enum NewScheduledScanApiModelDisallowedHttpMethodsEnum {
    Get = 'GET',
    Post = 'POST',
    Connect = 'CONNECT',
    Head = 'HEAD',
    Trace = 'TRACE',
    Debug = 'DEBUG',
    Track = 'TRACK',
    Put = 'PUT',
    Options = 'OPTIONS',
    Delete = 'DELETE',
    Link = 'LINK',
    Unlink = 'UNLINK',
    Patch = 'PATCH'
}
/**
* @export
* @enum {string}
*/
export enum NewScheduledScanApiModelAuthenticationProfileOptionEnum {
    DontUse = 'DontUse',
    UseMatchedProfile = 'UseMatchedProfile',
    SelectedProfile = 'SelectedProfile'
}
/**
* @export
* @enum {string}
*/
export enum NewScheduledScanApiModelScopeEnum {
    EnteredPathAndBelow = 'EnteredPathAndBelow',
    OnlyEnteredUrl = 'OnlyEnteredUrl',
    WholeDomain = 'WholeDomain'
}
/**
* @export
* @enum {string}
*/
export enum NewScheduledScanApiModelUrlRewriteModeEnum {
    None = 'None',
    Heuristic = 'Heuristic',
    Custom = 'Custom'
}


/**
 * Check if a given object implements the NewScheduledScanApiModel interface.
 */
export function instanceOfNewScheduledScanApiModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "nextExecutionTime" in value;
    isInstance = isInstance && "scheduleRunType" in value;

    return isInstance;
}

export function NewScheduledScanApiModelFromJSON(json: any): NewScheduledScanApiModel {
    return NewScheduledScanApiModelFromJSONTyped(json, false);
}

export function NewScheduledScanApiModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): NewScheduledScanApiModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['Name'],
        'nextExecutionTime': json['NextExecutionTime'],
        'scheduleRunType': json['ScheduleRunType'],
        'customRecurrence': !exists(json, 'CustomRecurrence') ? undefined : ScheduledScanRecurrenceApiModelFromJSON(json['CustomRecurrence']),
        'targetUri': !exists(json, 'TargetUri') ? undefined : json['TargetUri'],
        'isTargetUrlRequired': !exists(json, 'IsTargetUrlRequired') ? undefined : json['IsTargetUrlRequired'],
        'createType': !exists(json, 'CreateType') ? undefined : json['CreateType'],
        'websiteGroupId': !exists(json, 'WebsiteGroupId') ? undefined : json['WebsiteGroupId'],
        'additionalWebsites': !exists(json, 'AdditionalWebsites') ? undefined : ((json['AdditionalWebsites'] as Array<any>).map(AdditionalWebsiteModelFromJSON)),
        'basicAuthenticationApiModel': !exists(json, 'BasicAuthenticationApiModel') ? undefined : BasicAuthenticationSettingModelFromJSON(json['BasicAuthenticationApiModel']),
        'clientCertificateAuthenticationSetting': !exists(json, 'ClientCertificateAuthenticationSetting') ? undefined : ClientCertificateAuthenticationApiModelFromJSON(json['ClientCertificateAuthenticationSetting']),
        'cookies': !exists(json, 'Cookies') ? undefined : json['Cookies'],
        'crawlAndAttack': !exists(json, 'CrawlAndAttack') ? undefined : json['CrawlAndAttack'],
        'enableHeuristicChecksInCustomUrlRewrite': !exists(json, 'EnableHeuristicChecksInCustomUrlRewrite') ? undefined : json['EnableHeuristicChecksInCustomUrlRewrite'],
        'excludedLinks': !exists(json, 'ExcludedLinks') ? undefined : ((json['ExcludedLinks'] as Array<any>).map(ExcludedLinkModelFromJSON)),
        'excludedUsageTrackers': !exists(json, 'ExcludedUsageTrackers') ? undefined : ((json['ExcludedUsageTrackers'] as Array<any>).map(ExcludedUsageTrackerModelFromJSON)),
        'disallowedHttpMethods': !exists(json, 'DisallowedHttpMethods') ? undefined : json['DisallowedHttpMethods'],
        'excludeLinks': !exists(json, 'ExcludeLinks') ? undefined : json['ExcludeLinks'],
        'excludeAuthenticationPages': !exists(json, 'ExcludeAuthenticationPages') ? undefined : json['ExcludeAuthenticationPages'],
        'findAndFollowNewLinks': !exists(json, 'FindAndFollowNewLinks') ? undefined : json['FindAndFollowNewLinks'],
        'formAuthenticationSettingModel': !exists(json, 'FormAuthenticationSettingModel') ? undefined : FormAuthenticationSettingModelFromJSON(json['FormAuthenticationSettingModel']),
        'headerAuthentication': !exists(json, 'HeaderAuthentication') ? undefined : HeaderAuthenticationModelFromJSON(json['HeaderAuthentication']),
        'sharkSetting': !exists(json, 'SharkSetting') ? undefined : SharkModelFromJSON(json['SharkSetting']),
        'authenticationProfileOption': !exists(json, 'AuthenticationProfileOption') ? undefined : json['AuthenticationProfileOption'],
        'authenticationProfileId': !exists(json, 'AuthenticationProfileId') ? undefined : json['AuthenticationProfileId'],
        'importedLinks': !exists(json, 'ImportedLinks') ? undefined : json['ImportedLinks'],
        'importedFiles': !exists(json, 'ImportedFiles') ? undefined : ((json['ImportedFiles'] as Array<any>).map(ApiFileModelFromJSON)),
        'isMaxScanDurationEnabled': !exists(json, 'IsMaxScanDurationEnabled') ? undefined : json['IsMaxScanDurationEnabled'],
        'maxDynamicSignatures': !exists(json, 'MaxDynamicSignatures') ? undefined : json['MaxDynamicSignatures'],
        'maxScanDuration': !exists(json, 'MaxScanDuration') ? undefined : json['MaxScanDuration'],
        'policyId': !exists(json, 'PolicyId') ? undefined : json['PolicyId'],
        'reportPolicyId': !exists(json, 'ReportPolicyId') ? undefined : json['ReportPolicyId'],
        'scope': !exists(json, 'Scope') ? undefined : json['Scope'],
        'subPathMaxDynamicSignatures': !exists(json, 'SubPathMaxDynamicSignatures') ? undefined : json['SubPathMaxDynamicSignatures'],
        'timeWindow': !exists(json, 'TimeWindow') ? undefined : ScanTimeWindowModelFromJSON(json['TimeWindow']),
        'urlRewriteAnalyzableExtensions': !exists(json, 'UrlRewriteAnalyzableExtensions') ? undefined : json['UrlRewriteAnalyzableExtensions'],
        'urlRewriteBlockSeparators': !exists(json, 'UrlRewriteBlockSeparators') ? undefined : json['UrlRewriteBlockSeparators'],
        'urlRewriteMode': !exists(json, 'UrlRewriteMode') ? undefined : json['UrlRewriteMode'],
        'urlRewriteRules': !exists(json, 'UrlRewriteRules') ? undefined : ((json['UrlRewriteRules'] as Array<any>).map(UrlRewriteRuleModelFromJSON)),
        'preRequestScriptSetting': !exists(json, 'PreRequestScriptSetting') ? undefined : PreRequestScriptSettingModelFromJSON(json['PreRequestScriptSetting']),
        'doNotDifferentiateProtocols': !exists(json, 'DoNotDifferentiateProtocols') ? undefined : json['DoNotDifferentiateProtocols'],
        'urlRewriteExcludedLinks': !exists(json, 'UrlRewriteExcludedLinks') ? undefined : ((json['UrlRewriteExcludedLinks'] as Array<any>).map(UrlRewriteExcludedPathModelFromJSON)),
        'oAuth2SettingModel': !exists(json, 'OAuth2SettingModel') ? undefined : OAuth2SettingApiModelFromJSON(json['OAuth2SettingModel']),
        'enablePciScanTask': !exists(json, 'EnablePciScanTask') ? undefined : json['EnablePciScanTask'],
        'businessLogicRecorderSetting': !exists(json, 'BusinessLogicRecorderSetting') ? undefined : BusinessLogicRecorderSettingModelFromJSON(json['BusinessLogicRecorderSetting']),
        'tags': !exists(json, 'Tags') ? undefined : json['Tags'],
        'comments': !exists(json, 'Comments') ? undefined : json['Comments'],
    };
}

export function NewScheduledScanApiModelToJSON(value?: NewScheduledScanApiModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Name': value.name,
        'NextExecutionTime': value.nextExecutionTime,
        'ScheduleRunType': value.scheduleRunType,
        'CustomRecurrence': ScheduledScanRecurrenceApiModelToJSON(value.customRecurrence),
        'TargetUri': value.targetUri,
        'CreateType': value.createType,
        'WebsiteGroupId': value.websiteGroupId,
        'AdditionalWebsites': value.additionalWebsites === undefined ? undefined : ((value.additionalWebsites as Array<any>).map(AdditionalWebsiteModelToJSON)),
        'BasicAuthenticationApiModel': BasicAuthenticationSettingModelToJSON(value.basicAuthenticationApiModel),
        'ClientCertificateAuthenticationSetting': ClientCertificateAuthenticationApiModelToJSON(value.clientCertificateAuthenticationSetting),
        'Cookies': value.cookies,
        'CrawlAndAttack': value.crawlAndAttack,
        'EnableHeuristicChecksInCustomUrlRewrite': value.enableHeuristicChecksInCustomUrlRewrite,
        'ExcludedLinks': value.excludedLinks === undefined ? undefined : ((value.excludedLinks as Array<any>).map(ExcludedLinkModelToJSON)),
        'ExcludedUsageTrackers': value.excludedUsageTrackers === undefined ? undefined : ((value.excludedUsageTrackers as Array<any>).map(ExcludedUsageTrackerModelToJSON)),
        'DisallowedHttpMethods': value.disallowedHttpMethods,
        'ExcludeLinks': value.excludeLinks,
        'ExcludeAuthenticationPages': value.excludeAuthenticationPages,
        'FindAndFollowNewLinks': value.findAndFollowNewLinks,
        'FormAuthenticationSettingModel': FormAuthenticationSettingModelToJSON(value.formAuthenticationSettingModel),
        'HeaderAuthentication': HeaderAuthenticationModelToJSON(value.headerAuthentication),
        'SharkSetting': SharkModelToJSON(value.sharkSetting),
        'AuthenticationProfileOption': value.authenticationProfileOption,
        'AuthenticationProfileId': value.authenticationProfileId,
        'ImportedLinks': value.importedLinks,
        'ImportedFiles': value.importedFiles === undefined ? undefined : ((value.importedFiles as Array<any>).map(ApiFileModelToJSON)),
        'IsMaxScanDurationEnabled': value.isMaxScanDurationEnabled,
        'MaxDynamicSignatures': value.maxDynamicSignatures,
        'MaxScanDuration': value.maxScanDuration,
        'PolicyId': value.policyId,
        'ReportPolicyId': value.reportPolicyId,
        'Scope': value.scope,
        'SubPathMaxDynamicSignatures': value.subPathMaxDynamicSignatures,
        'TimeWindow': ScanTimeWindowModelToJSON(value.timeWindow),
        'UrlRewriteAnalyzableExtensions': value.urlRewriteAnalyzableExtensions,
        'UrlRewriteBlockSeparators': value.urlRewriteBlockSeparators,
        'UrlRewriteMode': value.urlRewriteMode,
        'UrlRewriteRules': value.urlRewriteRules === undefined ? undefined : ((value.urlRewriteRules as Array<any>).map(UrlRewriteRuleModelToJSON)),
        'PreRequestScriptSetting': PreRequestScriptSettingModelToJSON(value.preRequestScriptSetting),
        'DoNotDifferentiateProtocols': value.doNotDifferentiateProtocols,
        'UrlRewriteExcludedLinks': value.urlRewriteExcludedLinks === undefined ? undefined : ((value.urlRewriteExcludedLinks as Array<any>).map(UrlRewriteExcludedPathModelToJSON)),
        'OAuth2SettingModel': OAuth2SettingApiModelToJSON(value.oAuth2SettingModel),
        'EnablePciScanTask': value.enablePciScanTask,
        'BusinessLogicRecorderSetting': BusinessLogicRecorderSettingModelToJSON(value.businessLogicRecorderSetting),
        'Tags': value.tags,
        'Comments': value.comments,
    };
}

