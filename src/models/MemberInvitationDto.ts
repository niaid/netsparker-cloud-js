/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ReducedTeamDto } from './ReducedTeamDto';
import {
    ReducedTeamDtoFromJSON,
    ReducedTeamDtoFromJSONTyped,
    ReducedTeamDtoToJSON,
} from './ReducedTeamDto';
import type { RoleWebsiteGroupMappingDto } from './RoleWebsiteGroupMappingDto';
import {
    RoleWebsiteGroupMappingDtoFromJSON,
    RoleWebsiteGroupMappingDtoFromJSONTyped,
    RoleWebsiteGroupMappingDtoToJSON,
} from './RoleWebsiteGroupMappingDto';

/**
 * 
 * @export
 * @interface MemberInvitationDto
 */
export interface MemberInvitationDto {
    /**
     * 
     * @type {string}
     * @memberof MemberInvitationDto
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof MemberInvitationDto
     */
    accountId?: string;
    /**
     * 
     * @type {string}
     * @memberof MemberInvitationDto
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof MemberInvitationDto
     */
    email?: string;
    /**
     * 
     * @type {boolean}
     * @memberof MemberInvitationDto
     */
    isApiAccessEnabled?: boolean;
    /**
     * 
     * @type {string}
     * @memberof MemberInvitationDto
     */
    phoneNumber?: string;
    /**
     * 
     * @type {number}
     * @memberof MemberInvitationDto
     */
    allowedWebsiteLimit?: number;
    /**
     * 
     * @type {string}
     * @memberof MemberInvitationDto
     */
    alternateLoginEmail?: string;
    /**
     * 
     * @type {boolean}
     * @memberof MemberInvitationDto
     */
    inUse?: boolean;
    /**
     * 
     * @type {Array<ReducedTeamDto>}
     * @memberof MemberInvitationDto
     */
    teams?: Array<ReducedTeamDto>;
    /**
     * 
     * @type {Array<RoleWebsiteGroupMappingDto>}
     * @memberof MemberInvitationDto
     */
    roleWebsiteGroupMappings?: Array<RoleWebsiteGroupMappingDto>;
    /**
     * 
     * @type {boolean}
     * @memberof MemberInvitationDto
     */
    isAlternateLoginEmail?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof MemberInvitationDto
     */
    onlySsoLogin?: boolean;
}

/**
 * Check if a given object implements the MemberInvitationDto interface.
 */
export function instanceOfMemberInvitationDto(value: object): boolean {
    return true;
}

export function MemberInvitationDtoFromJSON(json: any): MemberInvitationDto {
    return MemberInvitationDtoFromJSONTyped(json, false);
}

export function MemberInvitationDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): MemberInvitationDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['Id'] == null ? undefined : json['Id'],
        'accountId': json['AccountId'] == null ? undefined : json['AccountId'],
        'name': json['Name'] == null ? undefined : json['Name'],
        'email': json['Email'] == null ? undefined : json['Email'],
        'isApiAccessEnabled': json['IsApiAccessEnabled'] == null ? undefined : json['IsApiAccessEnabled'],
        'phoneNumber': json['PhoneNumber'] == null ? undefined : json['PhoneNumber'],
        'allowedWebsiteLimit': json['AllowedWebsiteLimit'] == null ? undefined : json['AllowedWebsiteLimit'],
        'alternateLoginEmail': json['AlternateLoginEmail'] == null ? undefined : json['AlternateLoginEmail'],
        'inUse': json['InUse'] == null ? undefined : json['InUse'],
        'teams': json['Teams'] == null ? undefined : ((json['Teams'] as Array<any>).map(ReducedTeamDtoFromJSON)),
        'roleWebsiteGroupMappings': json['RoleWebsiteGroupMappings'] == null ? undefined : ((json['RoleWebsiteGroupMappings'] as Array<any>).map(RoleWebsiteGroupMappingDtoFromJSON)),
        'isAlternateLoginEmail': json['IsAlternateLoginEmail'] == null ? undefined : json['IsAlternateLoginEmail'],
        'onlySsoLogin': json['OnlySsoLogin'] == null ? undefined : json['OnlySsoLogin'],
    };
}

export function MemberInvitationDtoToJSON(value?: MemberInvitationDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'Id': value['id'],
        'AccountId': value['accountId'],
        'Name': value['name'],
        'Email': value['email'],
        'IsApiAccessEnabled': value['isApiAccessEnabled'],
        'PhoneNumber': value['phoneNumber'],
        'AllowedWebsiteLimit': value['allowedWebsiteLimit'],
        'AlternateLoginEmail': value['alternateLoginEmail'],
        'InUse': value['inUse'],
        'Teams': value['teams'] == null ? undefined : ((value['teams'] as Array<any>).map(ReducedTeamDtoToJSON)),
        'RoleWebsiteGroupMappings': value['roleWebsiteGroupMappings'] == null ? undefined : ((value['roleWebsiteGroupMappings'] as Array<any>).map(RoleWebsiteGroupMappingDtoToJSON)),
        'IsAlternateLoginEmail': value['isAlternateLoginEmail'],
        'OnlySsoLogin': value['onlySsoLogin'],
    };
}

