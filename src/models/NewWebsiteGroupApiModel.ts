/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Represents a model for creating a new website group.
 * @export
 * @interface NewWebsiteGroupApiModel
 */
export interface NewWebsiteGroupApiModel {
    /**
     * Gets or sets the website group name.
     * @type {string}
     * @memberof NewWebsiteGroupApiModel
     */
    name: string;
    /**
     * Gets or sets the website group description.
     * @type {string}
     * @memberof NewWebsiteGroupApiModel
     */
    description?: string;
    /**
     * Tags
     * @type {Array<string>}
     * @memberof NewWebsiteGroupApiModel
     */
    tags?: Array<string>;
}

/**
 * Check if a given object implements the NewWebsiteGroupApiModel interface.
 */
export function instanceOfNewWebsiteGroupApiModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function NewWebsiteGroupApiModelFromJSON(json: any): NewWebsiteGroupApiModel {
    return NewWebsiteGroupApiModelFromJSONTyped(json, false);
}

export function NewWebsiteGroupApiModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): NewWebsiteGroupApiModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['Name'],
        'description': !exists(json, 'Description') ? undefined : json['Description'],
        'tags': !exists(json, 'Tags') ? undefined : json['Tags'],
    };
}

export function NewWebsiteGroupApiModelToJSON(value?: NewWebsiteGroupApiModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Name': value.name,
        'Description': value.description,
        'Tags': value.tags,
    };
}

