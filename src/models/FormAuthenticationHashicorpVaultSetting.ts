/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FormAuthenticationHashicorpVaultSecretSetting } from './FormAuthenticationHashicorpVaultSecretSetting';
import {
    FormAuthenticationHashicorpVaultSecretSettingFromJSON,
    FormAuthenticationHashicorpVaultSecretSettingFromJSONTyped,
    FormAuthenticationHashicorpVaultSecretSettingToJSON,
} from './FormAuthenticationHashicorpVaultSecretSetting';

/**
 * Represents HashiCorp authentication setting for agent auth-verifier.
 * @export
 * @interface FormAuthenticationHashicorpVaultSetting
 */
export interface FormAuthenticationHashicorpVaultSetting {
    /**
     * Gets or sets the connection Id.
     * @type {string}
     * @memberof FormAuthenticationHashicorpVaultSetting
     */
    id?: string;
    /**
     * 
     * @type {FormAuthenticationHashicorpVaultSecretSetting}
     * @memberof FormAuthenticationHashicorpVaultSetting
     */
    secretSetting?: FormAuthenticationHashicorpVaultSecretSetting;
    /**
     * Gets or sets the token.
     * @type {string}
     * @memberof FormAuthenticationHashicorpVaultSetting
     */
    token?: string;
    /**
     * Gets or sets the URL.
     * @type {string}
     * @memberof FormAuthenticationHashicorpVaultSetting
     */
    url?: string;
    /**
     * Gets or sets the website agent mode.
     * @type {string}
     * @memberof FormAuthenticationHashicorpVaultSetting
     */
    agentMode?: FormAuthenticationHashicorpVaultSettingAgentModeEnum;
    /**
     * Gets or sets the encryption of credentials
     * @type {boolean}
     * @memberof FormAuthenticationHashicorpVaultSetting
     */
    encrypted?: boolean;
    /**
     * Gets or sets the hashicorp auth type.
     * @type {string}
     * @memberof FormAuthenticationHashicorpVaultSetting
     */
    authType?: FormAuthenticationHashicorpVaultSettingAuthTypeEnum;
    /**
     * Gets or sets the certificate for hashicorp tls auth.
     * @type {string}
     * @memberof FormAuthenticationHashicorpVaultSetting
     */
    certificateFileBytes?: string;
    /**
     * Gets or sets the certificate file password for certificate.
     * @type {string}
     * @memberof FormAuthenticationHashicorpVaultSetting
     */
    certificateFilePassword?: string;
    /**
     * Gets or sets the path for certificate.
     * @type {string}
     * @memberof FormAuthenticationHashicorpVaultSetting
     */
    path?: string;
    /**
     * Gets or sets the path for certificate.
     * @type {string}
     * @memberof FormAuthenticationHashicorpVaultSetting
     */
    namespace?: string;
}


/**
 * @export
 */
export const FormAuthenticationHashicorpVaultSettingAgentModeEnum = {
    Cloud: 'Cloud',
    Internal: 'Internal'
} as const;
export type FormAuthenticationHashicorpVaultSettingAgentModeEnum = typeof FormAuthenticationHashicorpVaultSettingAgentModeEnum[keyof typeof FormAuthenticationHashicorpVaultSettingAgentModeEnum];

/**
 * @export
 */
export const FormAuthenticationHashicorpVaultSettingAuthTypeEnum = {
    Token: 'Token',
    TlsCert: 'TLSCert'
} as const;
export type FormAuthenticationHashicorpVaultSettingAuthTypeEnum = typeof FormAuthenticationHashicorpVaultSettingAuthTypeEnum[keyof typeof FormAuthenticationHashicorpVaultSettingAuthTypeEnum];


/**
 * Check if a given object implements the FormAuthenticationHashicorpVaultSetting interface.
 */
export function instanceOfFormAuthenticationHashicorpVaultSetting(value: object): boolean {
    return true;
}

export function FormAuthenticationHashicorpVaultSettingFromJSON(json: any): FormAuthenticationHashicorpVaultSetting {
    return FormAuthenticationHashicorpVaultSettingFromJSONTyped(json, false);
}

export function FormAuthenticationHashicorpVaultSettingFromJSONTyped(json: any, ignoreDiscriminator: boolean): FormAuthenticationHashicorpVaultSetting {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['Id'] == null ? undefined : json['Id'],
        'secretSetting': json['SecretSetting'] == null ? undefined : FormAuthenticationHashicorpVaultSecretSettingFromJSON(json['SecretSetting']),
        'token': json['Token'] == null ? undefined : json['Token'],
        'url': json['Url'] == null ? undefined : json['Url'],
        'agentMode': json['AgentMode'] == null ? undefined : json['AgentMode'],
        'encrypted': json['Encrypted'] == null ? undefined : json['Encrypted'],
        'authType': json['AuthType'] == null ? undefined : json['AuthType'],
        'certificateFileBytes': json['CertificateFileBytes'] == null ? undefined : json['CertificateFileBytes'],
        'certificateFilePassword': json['CertificateFilePassword'] == null ? undefined : json['CertificateFilePassword'],
        'path': json['Path'] == null ? undefined : json['Path'],
        'namespace': json['Namespace'] == null ? undefined : json['Namespace'],
    };
}

export function FormAuthenticationHashicorpVaultSettingToJSON(value?: FormAuthenticationHashicorpVaultSetting | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'Id': value['id'],
        'SecretSetting': FormAuthenticationHashicorpVaultSecretSettingToJSON(value['secretSetting']),
        'Token': value['token'],
        'Url': value['url'],
        'AgentMode': value['agentMode'],
        'Encrypted': value['encrypted'],
        'AuthType': value['authType'],
        'CertificateFileBytes': value['certificateFileBytes'],
        'CertificateFilePassword': value['certificateFilePassword'],
        'Path': value['path'],
        'Namespace': value['namespace'],
    };
}

