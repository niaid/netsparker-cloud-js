/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { IssueSummaryListModel } from './IssueSummaryListModel';
import {
    IssueSummaryListModelFromJSON,
    IssueSummaryListModelFromJSONTyped,
    IssueSummaryListModelToJSON,
} from './IssueSummaryListModel';

/**
 * 
 * @export
 * @interface IssueSummaryApiModel
 */
export interface IssueSummaryApiModel {
    /**
     * Gets or sets TargetUri
     * @type {string}
     * @memberof IssueSummaryApiModel
     */
    targetUri?: string;
    /**
     * Gets or sets Website Name
     * @type {string}
     * @memberof IssueSummaryApiModel
     */
    websiteName?: string;
    /**
     * Gets or sets WebsiteId
     * @type {string}
     * @memberof IssueSummaryApiModel
     */
    websiteId?: string;
    /**
     * Gets Last Successful Scan Date with user time zone.
     * @type {string}
     * @memberof IssueSummaryApiModel
     */
    readonly lastSuccessfulScanDate?: string;
    /**
     * Gets or sets Scan Group Id
     * @type {string}
     * @memberof IssueSummaryApiModel
     */
    scanGroupId?: string;
    /**
     * Gets or sets Scan Profile Name
     * @type {string}
     * @memberof IssueSummaryApiModel
     */
    scanProfileName?: string;
    /**
     * Gets or sets Scan Profile Tags
     * @type {Array<string>}
     * @memberof IssueSummaryApiModel
     */
    scanProfileTags?: Array<string>;
    /**
     * Gets or sets ScanTask Id
     * @type {string}
     * @memberof IssueSummaryApiModel
     */
    scanTaskId?: string;
    /**
     * Gets or sets Issue Summary Lists
     * @type {Array<IssueSummaryListModel>}
     * @memberof IssueSummaryApiModel
     */
    issueSummaryLists?: Array<IssueSummaryListModel>;
}

/**
 * Check if a given object implements the IssueSummaryApiModel interface.
 */
export function instanceOfIssueSummaryApiModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function IssueSummaryApiModelFromJSON(json: any): IssueSummaryApiModel {
    return IssueSummaryApiModelFromJSONTyped(json, false);
}

export function IssueSummaryApiModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): IssueSummaryApiModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'targetUri': !exists(json, 'TargetUri') ? undefined : json['TargetUri'],
        'websiteName': !exists(json, 'WebsiteName') ? undefined : json['WebsiteName'],
        'websiteId': !exists(json, 'WebsiteId') ? undefined : json['WebsiteId'],
        'lastSuccessfulScanDate': !exists(json, 'LastSuccessfulScanDate') ? undefined : json['LastSuccessfulScanDate'],
        'scanGroupId': !exists(json, 'ScanGroupId') ? undefined : json['ScanGroupId'],
        'scanProfileName': !exists(json, 'ScanProfileName') ? undefined : json['ScanProfileName'],
        'scanProfileTags': !exists(json, 'ScanProfileTags') ? undefined : json['ScanProfileTags'],
        'scanTaskId': !exists(json, 'ScanTaskId') ? undefined : json['ScanTaskId'],
        'issueSummaryLists': !exists(json, 'IssueSummaryLists') ? undefined : ((json['IssueSummaryLists'] as Array<any>).map(IssueSummaryListModelFromJSON)),
    };
}

export function IssueSummaryApiModelToJSON(value?: IssueSummaryApiModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'TargetUri': value.targetUri,
        'WebsiteName': value.websiteName,
        'WebsiteId': value.websiteId,
        'ScanGroupId': value.scanGroupId,
        'ScanProfileName': value.scanProfileName,
        'ScanProfileTags': value.scanProfileTags,
        'ScanTaskId': value.scanTaskId,
        'IssueSummaryLists': value.issueSummaryLists === undefined ? undefined : ((value.issueSummaryLists as Array<any>).map(IssueSummaryListModelToJSON)),
    };
}

