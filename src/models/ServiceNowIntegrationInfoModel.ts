/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ServiceNowIncidentFieldPairValue } from './ServiceNowIncidentFieldPairValue';
import {
    ServiceNowIncidentFieldPairValueFromJSON,
    ServiceNowIncidentFieldPairValueFromJSONTyped,
    ServiceNowIncidentFieldPairValueToJSON,
} from './ServiceNowIncidentFieldPairValue';
import type { ServiceNowIncidentMapping } from './ServiceNowIncidentMapping';
import {
    ServiceNowIncidentMappingFromJSON,
    ServiceNowIncidentMappingFromJSONTyped,
    ServiceNowIncidentMappingToJSON,
} from './ServiceNowIncidentMapping';
import type { ServiceNowIntegrationInfoModelFieldMappingsDictionary } from './ServiceNowIntegrationInfoModelFieldMappingsDictionary';
import {
    ServiceNowIntegrationInfoModelFieldMappingsDictionaryFromJSON,
    ServiceNowIntegrationInfoModelFieldMappingsDictionaryFromJSONTyped,
    ServiceNowIntegrationInfoModelFieldMappingsDictionaryToJSON,
} from './ServiceNowIntegrationInfoModelFieldMappingsDictionary';
import type { IntegrationWizardResultModel } from './IntegrationWizardResultModel';
import {
    IntegrationWizardResultModelFromJSON,
    IntegrationWizardResultModelFromJSONTyped,
    IntegrationWizardResultModelToJSON,
} from './IntegrationWizardResultModel';
import type { IntegrationCustomFieldVm } from './IntegrationCustomFieldVm';
import {
    IntegrationCustomFieldVmFromJSON,
    IntegrationCustomFieldVmFromJSONTyped,
    IntegrationCustomFieldVmToJSON,
} from './IntegrationCustomFieldVm';

/**
 * The ServiceNow integration info
 * @export
 * @interface ServiceNowIntegrationInfoModel
 */
export interface ServiceNowIntegrationInfoModel {
    /**
     * Gets or sets the assigned to ID.
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    assignedToId?: string;
    /**
     * Gets or sets the caller ID.
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    callerId?: string;
    /**
     * Gets or sets the category to assign cases to.
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    serviceNowCategoryTypes?: ServiceNowIntegrationInfoModelServiceNowCategoryTypesEnum;
    /**
     * Gets or sets the category to assign cases to.
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    categoryTypes?: string;
    /**
     * Gets or sets the type of the issue.
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    readonly reopenStatus?: string;
    /**
     * Gets or sets the category types
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    serviceNowReopenCategoryType?: ServiceNowIntegrationInfoModelServiceNowReopenCategoryTypeEnum;
    /**
     * Gets or sets the category types
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    serviceNowOnHoldReasonType?: ServiceNowIntegrationInfoModelServiceNowOnHoldReasonTypeEnum;
    /**
     * if this option selected , after retesting change the status of fixed vulnerabilities to Closed..
     * @type {boolean}
     * @memberof ServiceNowIntegrationInfoModel
     */
    closeTheFixedVulnerabilities?: boolean;
    /**
     * Gets or sets the category to assign cases to.
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    category?: string;
    /**
     * Gets or sets the due date.
     * @type {number}
     * @memberof ServiceNowIntegrationInfoModel
     */
    dueDays?: number;
    /**
     * The severity of the incident.
     * @type {number}
     * @memberof ServiceNowIntegrationInfoModel
     */
    severity?: number;
    /**
     * Gets or sets the ServiceNow password for the user.
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    password: string;
    /**
     * Gets or sets the type of the issue. Need to be overriden for webhooks supported integrations
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    readonly resolvedStatus?: string;
    /**
     * Gets or sets the ServiceNow resolved type of the issue.
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    resolvedStatusServiceNow?: ServiceNowIntegrationInfoModelResolvedStatusServiceNowEnum;
    /**
     * Gets or sets the URL.
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    url: string;
    /**
     * Gets FogBugz web hook URL.
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    readonly webhookUrl?: string;
    /**
     * Gets or sets the username.
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    username: string;
    /**
     * 
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    templateType?: ServiceNowIntegrationInfoModelTemplateTypeEnum;
    /**
     * 
     * @type {ServiceNowIntegrationInfoModelFieldMappingsDictionary}
     * @memberof ServiceNowIntegrationInfoModel
     */
    fieldMappingsDictionary?: ServiceNowIntegrationInfoModelFieldMappingsDictionary;
    /**
     * Returns ServiceNow incident field pairs.
     * @type {{ [key: string]: ServiceNowIncidentFieldPairValue; }}
     * @memberof ServiceNowIntegrationInfoModel
     */
    incidentFieldPairs?: { [key: string]: ServiceNowIncidentFieldPairValue; };
    /**
     * Returns whether servicenow integration is created with improved version .
     * @type {boolean}
     * @memberof ServiceNowIntegrationInfoModel
     */
    isImprovedVersion?: boolean;
    /**
     * Returns ServiceNow incident field mappings.
     * @type {Array<ServiceNowIncidentMapping>}
     * @memberof ServiceNowIntegrationInfoModel
     */
    fieldMappings?: Array<ServiceNowIncidentMapping>;
    /**
     * 
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    readonly type?: ServiceNowIntegrationInfoModelTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    readonly genericErrorMessage?: string;
    /**
     * 
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    readonly identifier?: string;
    /**
     * 
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    readonly testMessageBody?: string;
    /**
     * 
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    readonly testMessageTitle?: string;
    /**
     * 
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    name?: string;
    /**
     * 
     * @type {number}
     * @memberof ServiceNowIntegrationInfoModel
     */
    integrationVersion?: number;
    /**
     * 
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    accountID?: string;
    /**
     * 
     * @type {Array<IntegrationCustomFieldVm>}
     * @memberof ServiceNowIntegrationInfoModel
     */
    customFields?: Array<IntegrationCustomFieldVm>;
    /**
     * 
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    titleFormat: string;
    /**
     * 
     * @type {IntegrationWizardResultModel}
     * @memberof ServiceNowIntegrationInfoModel
     */
    integrationWizardResultModel?: IntegrationWizardResultModel;
    /**
     * 
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    state?: ServiceNowIntegrationInfoModelStateEnum;
}


/**
 * @export
 */
export const ServiceNowIntegrationInfoModelServiceNowCategoryTypesEnum = {
    Inquiry: 'Inquiry',
    Software: 'Software',
    Hardware: 'Hardware',
    Network: 'Network',
    Database: 'Database'
} as const;
export type ServiceNowIntegrationInfoModelServiceNowCategoryTypesEnum = typeof ServiceNowIntegrationInfoModelServiceNowCategoryTypesEnum[keyof typeof ServiceNowIntegrationInfoModelServiceNowCategoryTypesEnum];

/**
 * @export
 */
export const ServiceNowIntegrationInfoModelServiceNowReopenCategoryTypeEnum = {
    New: 'New',
    InProgress: 'In_Progress',
    OnHold: 'On_Hold'
} as const;
export type ServiceNowIntegrationInfoModelServiceNowReopenCategoryTypeEnum = typeof ServiceNowIntegrationInfoModelServiceNowReopenCategoryTypeEnum[keyof typeof ServiceNowIntegrationInfoModelServiceNowReopenCategoryTypeEnum];

/**
 * @export
 */
export const ServiceNowIntegrationInfoModelServiceNowOnHoldReasonTypeEnum = {
    AwaitingCaller: 'AwaitingCaller',
    AwaitingChange: 'AwaitingChange',
    AwaitingProblem: 'AwaitingProblem',
    AwaitingVendor: 'AwaitingVendor'
} as const;
export type ServiceNowIntegrationInfoModelServiceNowOnHoldReasonTypeEnum = typeof ServiceNowIntegrationInfoModelServiceNowOnHoldReasonTypeEnum[keyof typeof ServiceNowIntegrationInfoModelServiceNowOnHoldReasonTypeEnum];

/**
 * @export
 */
export const ServiceNowIntegrationInfoModelResolvedStatusServiceNowEnum = {
    Resolved: 'Resolved',
    Closed: 'Closed'
} as const;
export type ServiceNowIntegrationInfoModelResolvedStatusServiceNowEnum = typeof ServiceNowIntegrationInfoModelResolvedStatusServiceNowEnum[keyof typeof ServiceNowIntegrationInfoModelResolvedStatusServiceNowEnum];

/**
 * @export
 */
export const ServiceNowIntegrationInfoModelTemplateTypeEnum = {
    Standard: 'Standard',
    Detailed: 'Detailed'
} as const;
export type ServiceNowIntegrationInfoModelTemplateTypeEnum = typeof ServiceNowIntegrationInfoModelTemplateTypeEnum[keyof typeof ServiceNowIntegrationInfoModelTemplateTypeEnum];

/**
 * @export
 */
export const ServiceNowIntegrationInfoModelTypeEnum = {
    Jira: 'Jira',
    GitHub: 'GitHub',
    Tfs: 'TFS',
    FogBugz: 'FogBugz',
    ServiceNow: 'ServiceNow',
    Slack: 'Slack',
    GitLab: 'GitLab',
    Bitbucket: 'Bitbucket',
    Unfuddle: 'Unfuddle',
    Zapier: 'Zapier',
    AzureDevOps: 'AzureDevOps',
    Redmine: 'Redmine',
    Bugzilla: 'Bugzilla',
    Kafka: 'Kafka',
    PagerDuty: 'PagerDuty',
    MicrosoftTeams: 'MicrosoftTeams',
    Clubhouse: 'Clubhouse',
    Trello: 'Trello',
    Asana: 'Asana',
    Webhook: 'Webhook',
    Kenna: 'Kenna',
    Freshservice: 'Freshservice',
    YouTrack: 'YouTrack',
    NetsparkerEnterprise: 'NetsparkerEnterprise',
    Splunk: 'Splunk',
    Mattermost: 'Mattermost',
    Hashicorp: 'Hashicorp',
    PivotalTracker: 'PivotalTracker',
    CyberArk: 'CyberArk',
    DefectDojo: 'DefectDojo',
    JazzTeam: 'JazzTeam',
    AzureKeyVault: 'AzureKeyVault',
    ServiceNowVrm: 'ServiceNowVRM'
} as const;
export type ServiceNowIntegrationInfoModelTypeEnum = typeof ServiceNowIntegrationInfoModelTypeEnum[keyof typeof ServiceNowIntegrationInfoModelTypeEnum];

/**
 * @export
 */
export const ServiceNowIntegrationInfoModelStateEnum = {
    Active: 'Active',
    Suspended: 'Suspended'
} as const;
export type ServiceNowIntegrationInfoModelStateEnum = typeof ServiceNowIntegrationInfoModelStateEnum[keyof typeof ServiceNowIntegrationInfoModelStateEnum];


/**
 * Check if a given object implements the ServiceNowIntegrationInfoModel interface.
 */
export function instanceOfServiceNowIntegrationInfoModel(value: object): boolean {
    if (!('password' in value)) return false;
    if (!('url' in value)) return false;
    if (!('username' in value)) return false;
    if (!('titleFormat' in value)) return false;
    return true;
}

export function ServiceNowIntegrationInfoModelFromJSON(json: any): ServiceNowIntegrationInfoModel {
    return ServiceNowIntegrationInfoModelFromJSONTyped(json, false);
}

export function ServiceNowIntegrationInfoModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServiceNowIntegrationInfoModel {
    if (json == null) {
        return json;
    }
    return {
        
        'assignedToId': json['AssignedToId'] == null ? undefined : json['AssignedToId'],
        'callerId': json['CallerId'] == null ? undefined : json['CallerId'],
        'serviceNowCategoryTypes': json['ServiceNowCategoryTypes'] == null ? undefined : json['ServiceNowCategoryTypes'],
        'categoryTypes': json['CategoryTypes'] == null ? undefined : json['CategoryTypes'],
        'reopenStatus': json['ReopenStatus'] == null ? undefined : json['ReopenStatus'],
        'serviceNowReopenCategoryType': json['ServiceNowReopenCategoryType'] == null ? undefined : json['ServiceNowReopenCategoryType'],
        'serviceNowOnHoldReasonType': json['ServiceNowOnHoldReasonType'] == null ? undefined : json['ServiceNowOnHoldReasonType'],
        'closeTheFixedVulnerabilities': json['CloseTheFixedVulnerabilities'] == null ? undefined : json['CloseTheFixedVulnerabilities'],
        'category': json['Category'] == null ? undefined : json['Category'],
        'dueDays': json['DueDays'] == null ? undefined : json['DueDays'],
        'severity': json['Severity'] == null ? undefined : json['Severity'],
        'password': json['Password'],
        'resolvedStatus': json['ResolvedStatus'] == null ? undefined : json['ResolvedStatus'],
        'resolvedStatusServiceNow': json['ResolvedStatusServiceNow'] == null ? undefined : json['ResolvedStatusServiceNow'],
        'url': json['Url'],
        'webhookUrl': json['WebhookUrl'] == null ? undefined : json['WebhookUrl'],
        'username': json['Username'],
        'templateType': json['TemplateType'] == null ? undefined : json['TemplateType'],
        'fieldMappingsDictionary': json['FieldMappingsDictionary'] == null ? undefined : ServiceNowIntegrationInfoModelFieldMappingsDictionaryFromJSON(json['FieldMappingsDictionary']),
        'incidentFieldPairs': json['IncidentFieldPairs'] == null ? undefined : (mapValues(json['IncidentFieldPairs'], ServiceNowIncidentFieldPairValueFromJSON)),
        'isImprovedVersion': json['IsImprovedVersion'] == null ? undefined : json['IsImprovedVersion'],
        'fieldMappings': json['FieldMappings'] == null ? undefined : ((json['FieldMappings'] as Array<any>).map(ServiceNowIncidentMappingFromJSON)),
        'type': json['Type'] == null ? undefined : json['Type'],
        'genericErrorMessage': json['GenericErrorMessage'] == null ? undefined : json['GenericErrorMessage'],
        'identifier': json['Identifier'] == null ? undefined : json['Identifier'],
        'testMessageBody': json['TestMessageBody'] == null ? undefined : json['TestMessageBody'],
        'testMessageTitle': json['TestMessageTitle'] == null ? undefined : json['TestMessageTitle'],
        'name': json['Name'] == null ? undefined : json['Name'],
        'integrationVersion': json['IntegrationVersion'] == null ? undefined : json['IntegrationVersion'],
        'accountID': json['AccountID'] == null ? undefined : json['AccountID'],
        'customFields': json['CustomFields'] == null ? undefined : ((json['CustomFields'] as Array<any>).map(IntegrationCustomFieldVmFromJSON)),
        'titleFormat': json['TitleFormat'],
        'integrationWizardResultModel': json['IntegrationWizardResultModel'] == null ? undefined : IntegrationWizardResultModelFromJSON(json['IntegrationWizardResultModel']),
        'id': json['Id'] == null ? undefined : json['Id'],
        'state': json['State'] == null ? undefined : json['State'],
    };
}

export function ServiceNowIntegrationInfoModelToJSON(value?: Omit<ServiceNowIntegrationInfoModel, 'ReopenStatus'|'ResolvedStatus'|'WebhookUrl'|'Type'|'GenericErrorMessage'|'Identifier'|'TestMessageBody'|'TestMessageTitle'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'AssignedToId': value['assignedToId'],
        'CallerId': value['callerId'],
        'ServiceNowCategoryTypes': value['serviceNowCategoryTypes'],
        'CategoryTypes': value['categoryTypes'],
        'ServiceNowReopenCategoryType': value['serviceNowReopenCategoryType'],
        'ServiceNowOnHoldReasonType': value['serviceNowOnHoldReasonType'],
        'CloseTheFixedVulnerabilities': value['closeTheFixedVulnerabilities'],
        'Category': value['category'],
        'DueDays': value['dueDays'],
        'Severity': value['severity'],
        'Password': value['password'],
        'ResolvedStatusServiceNow': value['resolvedStatusServiceNow'],
        'Url': value['url'],
        'Username': value['username'],
        'TemplateType': value['templateType'],
        'FieldMappingsDictionary': ServiceNowIntegrationInfoModelFieldMappingsDictionaryToJSON(value['fieldMappingsDictionary']),
        'IncidentFieldPairs': value['incidentFieldPairs'] == null ? undefined : (mapValues(value['incidentFieldPairs'], ServiceNowIncidentFieldPairValueToJSON)),
        'IsImprovedVersion': value['isImprovedVersion'],
        'FieldMappings': value['fieldMappings'] == null ? undefined : ((value['fieldMappings'] as Array<any>).map(ServiceNowIncidentMappingToJSON)),
        'Name': value['name'],
        'IntegrationVersion': value['integrationVersion'],
        'AccountID': value['accountID'],
        'CustomFields': value['customFields'] == null ? undefined : ((value['customFields'] as Array<any>).map(IntegrationCustomFieldVmToJSON)),
        'TitleFormat': value['titleFormat'],
        'IntegrationWizardResultModel': IntegrationWizardResultModelToJSON(value['integrationWizardResultModel']),
        'Id': value['id'],
        'State': value['state'],
    };
}

