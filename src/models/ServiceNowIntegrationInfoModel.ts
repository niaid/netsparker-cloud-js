/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { IntegrationCustomFieldVm } from './IntegrationCustomFieldVm';
import {
    IntegrationCustomFieldVmFromJSON,
    IntegrationCustomFieldVmFromJSONTyped,
    IntegrationCustomFieldVmToJSON,
} from './IntegrationCustomFieldVm';
import type { IntegrationWizardResultModel } from './IntegrationWizardResultModel';
import {
    IntegrationWizardResultModelFromJSON,
    IntegrationWizardResultModelFromJSONTyped,
    IntegrationWizardResultModelToJSON,
} from './IntegrationWizardResultModel';
import type { ServiceNowIncidentFieldPairValue } from './ServiceNowIncidentFieldPairValue';
import {
    ServiceNowIncidentFieldPairValueFromJSON,
    ServiceNowIncidentFieldPairValueFromJSONTyped,
    ServiceNowIncidentFieldPairValueToJSON,
} from './ServiceNowIncidentFieldPairValue';
import type { ServiceNowIncidentMapping } from './ServiceNowIncidentMapping';
import {
    ServiceNowIncidentMappingFromJSON,
    ServiceNowIncidentMappingFromJSONTyped,
    ServiceNowIncidentMappingToJSON,
} from './ServiceNowIncidentMapping';
import type { ServiceNowIntegrationInfoModelFieldMappingsDictionary } from './ServiceNowIntegrationInfoModelFieldMappingsDictionary';
import {
    ServiceNowIntegrationInfoModelFieldMappingsDictionaryFromJSON,
    ServiceNowIntegrationInfoModelFieldMappingsDictionaryFromJSONTyped,
    ServiceNowIntegrationInfoModelFieldMappingsDictionaryToJSON,
} from './ServiceNowIntegrationInfoModelFieldMappingsDictionary';

/**
 * The ServiceNow integration info
 * @export
 * @interface ServiceNowIntegrationInfoModel
 */
export interface ServiceNowIntegrationInfoModel {
    /**
     * Gets or sets the assigned to ID.
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    assignedToId?: string;
    /**
     * Gets or sets the caller ID.
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    callerId?: string;
    /**
     * Gets or sets the category to assign cases to.
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    serviceNowCategoryTypes?: ServiceNowIntegrationInfoModelServiceNowCategoryTypesEnum;
    /**
     * Gets or sets the category to assign cases to.
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    categoryTypes?: string;
    /**
     * Gets or sets the type of the issue.
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    readonly reopenStatus?: string;
    /**
     * Gets or sets the category types
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    serviceNowReopenCategoryType?: ServiceNowIntegrationInfoModelServiceNowReopenCategoryTypeEnum;
    /**
     * Gets or sets the category types
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    serviceNowOnHoldReasonType?: ServiceNowIntegrationInfoModelServiceNowOnHoldReasonTypeEnum;
    /**
     * if this option selected , after retesting change the status of fixed vulnerabilities to Closed..
     * @type {boolean}
     * @memberof ServiceNowIntegrationInfoModel
     */
    closeTheFixedVulnerabilities?: boolean;
    /**
     * Gets or sets the category to assign cases to.
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    category?: string;
    /**
     * Gets or sets the due date.
     * @type {number}
     * @memberof ServiceNowIntegrationInfoModel
     */
    dueDays?: number;
    /**
     * The severity of the incident.
     * @type {number}
     * @memberof ServiceNowIntegrationInfoModel
     */
    severity?: number;
    /**
     * Gets or sets the ServiceNow password for the user.
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    password: string;
    /**
     * Gets or sets the type of the issue. Need to be overriden for webhooks supported integrations
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    readonly resolvedStatus?: string;
    /**
     * Gets or sets the ServiceNow resolved type of the issue.
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    resolvedStatusServiceNow?: ServiceNowIntegrationInfoModelResolvedStatusServiceNowEnum;
    /**
     * Gets or sets the URL.
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    url: string;
    /**
     * Gets FogBugz web hook URL.
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    readonly webhookUrl?: string;
    /**
     * Gets or sets the username.
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    username: string;
    /**
     * 
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    templateType?: ServiceNowIntegrationInfoModelTemplateTypeEnum;
    /**
     * 
     * @type {ServiceNowIntegrationInfoModelFieldMappingsDictionary}
     * @memberof ServiceNowIntegrationInfoModel
     */
    fieldMappingsDictionary?: ServiceNowIntegrationInfoModelFieldMappingsDictionary;
    /**
     * Returns ServiceNow incident field pairs.
     * @type {{ [key: string]: ServiceNowIncidentFieldPairValue; }}
     * @memberof ServiceNowIntegrationInfoModel
     */
    incidentFieldPairs?: { [key: string]: ServiceNowIncidentFieldPairValue; };
    /**
     * Returns whether servicenow integration is created with improved version .
     * @type {boolean}
     * @memberof ServiceNowIntegrationInfoModel
     */
    isImprovedVersion?: boolean;
    /**
     * Returns ServiceNow incident field mappings.
     * @type {Array<ServiceNowIncidentMapping>}
     * @memberof ServiceNowIntegrationInfoModel
     */
    fieldMappings?: Array<ServiceNowIncidentMapping>;
    /**
     * 
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    readonly type?: ServiceNowIntegrationInfoModelTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    readonly genericErrorMessage?: string;
    /**
     * 
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    readonly identifier?: string;
    /**
     * 
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    readonly testMessageBody?: string;
    /**
     * 
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    readonly testMessageTitle?: string;
    /**
     * 
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    name?: string;
    /**
     * 
     * @type {number}
     * @memberof ServiceNowIntegrationInfoModel
     */
    integrationVersion?: number;
    /**
     * 
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    accountID?: string;
    /**
     * 
     * @type {Array<IntegrationCustomFieldVm>}
     * @memberof ServiceNowIntegrationInfoModel
     */
    customFields?: Array<IntegrationCustomFieldVm>;
    /**
     * 
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    titleFormat: string;
    /**
     * 
     * @type {IntegrationWizardResultModel}
     * @memberof ServiceNowIntegrationInfoModel
     */
    integrationWizardResultModel?: IntegrationWizardResultModel;
}

/**
* @export
* @enum {string}
*/
export enum ServiceNowIntegrationInfoModelServiceNowCategoryTypesEnum {
    Inquiry = 'Inquiry',
    Software = 'Software',
    Hardware = 'Hardware',
    Network = 'Network',
    Database = 'Database'
}
/**
* @export
* @enum {string}
*/
export enum ServiceNowIntegrationInfoModelServiceNowReopenCategoryTypeEnum {
    New = 'New',
    InProgress = 'In_Progress',
    OnHold = 'On_Hold'
}
/**
* @export
* @enum {string}
*/
export enum ServiceNowIntegrationInfoModelServiceNowOnHoldReasonTypeEnum {
    AwaitingCaller = 'AwaitingCaller',
    AwaitingChange = 'AwaitingChange',
    AwaitingProblem = 'AwaitingProblem',
    AwaitingVendor = 'AwaitingVendor'
}
/**
* @export
* @enum {string}
*/
export enum ServiceNowIntegrationInfoModelResolvedStatusServiceNowEnum {
    Resolved = 'Resolved',
    Closed = 'Closed'
}
/**
* @export
* @enum {string}
*/
export enum ServiceNowIntegrationInfoModelTemplateTypeEnum {
    Standard = 'Standard',
    Detailed = 'Detailed'
}
/**
* @export
* @enum {string}
*/
export enum ServiceNowIntegrationInfoModelTypeEnum {
    NetsparkerEnterprise = 'NetsparkerEnterprise',
    Webhook = 'Webhook',
    Zapier = 'Zapier',
    Slack = 'Slack',
    Mattermost = 'Mattermost',
    MicrosoftTeams = 'MicrosoftTeams',
    AzureDevOps = 'AzureDevOps',
    Bitbucket = 'Bitbucket',
    Bugzilla = 'Bugzilla',
    Clubhouse = 'Clubhouse',
    DefectDojo = 'DefectDojo',
    PivotalTracker = 'PivotalTracker',
    Jira = 'Jira',
    FogBugz = 'FogBugz',
    GitHub = 'GitHub',
    PagerDuty = 'PagerDuty',
    Kafka = 'Kafka',
    Kenna = 'Kenna',
    Redmine = 'Redmine',
    ServiceNow = 'ServiceNow',
    Tfs = 'TFS',
    Unfuddle = 'Unfuddle',
    YouTrack = 'YouTrack',
    Freshservice = 'Freshservice',
    Splunk = 'Splunk',
    JazzTeam = 'JazzTeam',
    ServiceNowVrm = 'ServiceNowVRM',
    Asana = 'Asana',
    Trello = 'Trello',
    Hashicorp = 'Hashicorp',
    CyberArk = 'CyberArk',
    AzureKeyVault = 'AzureKeyVault',
    GitLab = 'GitLab'
}


/**
 * Check if a given object implements the ServiceNowIntegrationInfoModel interface.
 */
export function instanceOfServiceNowIntegrationInfoModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "password" in value;
    isInstance = isInstance && "url" in value;
    isInstance = isInstance && "username" in value;
    isInstance = isInstance && "titleFormat" in value;

    return isInstance;
}

export function ServiceNowIntegrationInfoModelFromJSON(json: any): ServiceNowIntegrationInfoModel {
    return ServiceNowIntegrationInfoModelFromJSONTyped(json, false);
}

export function ServiceNowIntegrationInfoModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServiceNowIntegrationInfoModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'assignedToId': !exists(json, 'AssignedToId') ? undefined : json['AssignedToId'],
        'callerId': !exists(json, 'CallerId') ? undefined : json['CallerId'],
        'serviceNowCategoryTypes': !exists(json, 'ServiceNowCategoryTypes') ? undefined : json['ServiceNowCategoryTypes'],
        'categoryTypes': !exists(json, 'CategoryTypes') ? undefined : json['CategoryTypes'],
        'reopenStatus': !exists(json, 'ReopenStatus') ? undefined : json['ReopenStatus'],
        'serviceNowReopenCategoryType': !exists(json, 'ServiceNowReopenCategoryType') ? undefined : json['ServiceNowReopenCategoryType'],
        'serviceNowOnHoldReasonType': !exists(json, 'ServiceNowOnHoldReasonType') ? undefined : json['ServiceNowOnHoldReasonType'],
        'closeTheFixedVulnerabilities': !exists(json, 'CloseTheFixedVulnerabilities') ? undefined : json['CloseTheFixedVulnerabilities'],
        'category': !exists(json, 'Category') ? undefined : json['Category'],
        'dueDays': !exists(json, 'DueDays') ? undefined : json['DueDays'],
        'severity': !exists(json, 'Severity') ? undefined : json['Severity'],
        'password': json['Password'],
        'resolvedStatus': !exists(json, 'ResolvedStatus') ? undefined : json['ResolvedStatus'],
        'resolvedStatusServiceNow': !exists(json, 'ResolvedStatusServiceNow') ? undefined : json['ResolvedStatusServiceNow'],
        'url': json['Url'],
        'webhookUrl': !exists(json, 'WebhookUrl') ? undefined : json['WebhookUrl'],
        'username': json['Username'],
        'templateType': !exists(json, 'TemplateType') ? undefined : json['TemplateType'],
        'fieldMappingsDictionary': !exists(json, 'FieldMappingsDictionary') ? undefined : ServiceNowIntegrationInfoModelFieldMappingsDictionaryFromJSON(json['FieldMappingsDictionary']),
        'incidentFieldPairs': !exists(json, 'IncidentFieldPairs') ? undefined : (mapValues(json['IncidentFieldPairs'], ServiceNowIncidentFieldPairValueFromJSON)),
        'isImprovedVersion': !exists(json, 'IsImprovedVersion') ? undefined : json['IsImprovedVersion'],
        'fieldMappings': !exists(json, 'FieldMappings') ? undefined : ((json['FieldMappings'] as Array<any>).map(ServiceNowIncidentMappingFromJSON)),
        'type': !exists(json, 'Type') ? undefined : json['Type'],
        'genericErrorMessage': !exists(json, 'GenericErrorMessage') ? undefined : json['GenericErrorMessage'],
        'identifier': !exists(json, 'Identifier') ? undefined : json['Identifier'],
        'testMessageBody': !exists(json, 'TestMessageBody') ? undefined : json['TestMessageBody'],
        'testMessageTitle': !exists(json, 'TestMessageTitle') ? undefined : json['TestMessageTitle'],
        'name': !exists(json, 'Name') ? undefined : json['Name'],
        'integrationVersion': !exists(json, 'IntegrationVersion') ? undefined : json['IntegrationVersion'],
        'accountID': !exists(json, 'AccountID') ? undefined : json['AccountID'],
        'customFields': !exists(json, 'CustomFields') ? undefined : ((json['CustomFields'] as Array<any>).map(IntegrationCustomFieldVmFromJSON)),
        'titleFormat': json['TitleFormat'],
        'integrationWizardResultModel': !exists(json, 'IntegrationWizardResultModel') ? undefined : IntegrationWizardResultModelFromJSON(json['IntegrationWizardResultModel']),
    };
}

export function ServiceNowIntegrationInfoModelToJSON(value?: ServiceNowIntegrationInfoModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'AssignedToId': value.assignedToId,
        'CallerId': value.callerId,
        'ServiceNowCategoryTypes': value.serviceNowCategoryTypes,
        'CategoryTypes': value.categoryTypes,
        'ServiceNowReopenCategoryType': value.serviceNowReopenCategoryType,
        'ServiceNowOnHoldReasonType': value.serviceNowOnHoldReasonType,
        'CloseTheFixedVulnerabilities': value.closeTheFixedVulnerabilities,
        'Category': value.category,
        'DueDays': value.dueDays,
        'Severity': value.severity,
        'Password': value.password,
        'ResolvedStatusServiceNow': value.resolvedStatusServiceNow,
        'Url': value.url,
        'Username': value.username,
        'TemplateType': value.templateType,
        'FieldMappingsDictionary': ServiceNowIntegrationInfoModelFieldMappingsDictionaryToJSON(value.fieldMappingsDictionary),
        'IncidentFieldPairs': value.incidentFieldPairs === undefined ? undefined : (mapValues(value.incidentFieldPairs, ServiceNowIncidentFieldPairValueToJSON)),
        'IsImprovedVersion': value.isImprovedVersion,
        'FieldMappings': value.fieldMappings === undefined ? undefined : ((value.fieldMappings as Array<any>).map(ServiceNowIncidentMappingToJSON)),
        'Name': value.name,
        'IntegrationVersion': value.integrationVersion,
        'AccountID': value.accountID,
        'CustomFields': value.customFields === undefined ? undefined : ((value.customFields as Array<any>).map(IntegrationCustomFieldVmToJSON)),
        'TitleFormat': value.titleFormat,
        'IntegrationWizardResultModel': IntegrationWizardResultModelToJSON(value.integrationWizardResultModel),
    };
}

