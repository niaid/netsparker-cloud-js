/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Provides the settings for Cross-site Request Forgery checks.
 * @export
 * @interface CsrfSettingModel
 */
export interface CsrfSettingModel {
    /**
     * A list of values which is used to check a form contains captcha against CSRF.
     * @type {string}
     * @memberof CsrfSettingModel
     */
    captchaIndicators?: string;
    /**
     * A list of values to indicate login forms whose submit inputs' name or value contains one of these.
     * @type {string}
     * @memberof CsrfSettingModel
     */
    loginFormValues?: string;
    /**
     * A list of values to indicate non-CSRF forms whose name or action contains one of these.
     * @type {string}
     * @memberof CsrfSettingModel
     */
    nonFormValues?: string;
    /**
     * A list of values to indicate non-CSRF forms in which input's name or value contains one of these.
     * @type {string}
     * @memberof CsrfSettingModel
     */
    nonInputValues?: string;
    /**
     * A list of values to indicate username inputs whose name includes one of these.
     * @type {string}
     * @memberof CsrfSettingModel
     */
    userNameInputs?: string;
    /**
     * Whether check Csrf engine will work only authenticated pages or not
     * @type {boolean}
     * @memberof CsrfSettingModel
     */
    authenticatedPagesCheck?: boolean;
}

/**
 * Check if a given object implements the CsrfSettingModel interface.
 */
export function instanceOfCsrfSettingModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CsrfSettingModelFromJSON(json: any): CsrfSettingModel {
    return CsrfSettingModelFromJSONTyped(json, false);
}

export function CsrfSettingModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): CsrfSettingModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'captchaIndicators': !exists(json, 'CaptchaIndicators') ? undefined : json['CaptchaIndicators'],
        'loginFormValues': !exists(json, 'LoginFormValues') ? undefined : json['LoginFormValues'],
        'nonFormValues': !exists(json, 'NonFormValues') ? undefined : json['NonFormValues'],
        'nonInputValues': !exists(json, 'NonInputValues') ? undefined : json['NonInputValues'],
        'userNameInputs': !exists(json, 'UserNameInputs') ? undefined : json['UserNameInputs'],
        'authenticatedPagesCheck': !exists(json, 'AuthenticatedPagesCheck') ? undefined : json['AuthenticatedPagesCheck'],
    };
}

export function CsrfSettingModelToJSON(value?: CsrfSettingModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'CaptchaIndicators': value.captchaIndicators,
        'LoginFormValues': value.loginFormValues,
        'NonFormValues': value.nonFormValues,
        'NonInputValues': value.nonInputValues,
        'UserNameInputs': value.userNameInputs,
        'AuthenticatedPagesCheck': value.authenticatedPagesCheck,
    };
}

