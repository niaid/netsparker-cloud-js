/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PermissionApiModel } from './PermissionApiModel';
import {
    PermissionApiModelFromJSON,
    PermissionApiModelFromJSONTyped,
    PermissionApiModelToJSON,
} from './PermissionApiModel';

/**
 * 
 * @export
 * @interface RoleApiViewModel
 */
export interface RoleApiViewModel {
    /**
     * Id
     * @type {string}
     * @memberof RoleApiViewModel
     */
    id?: string;
    /**
     * Role Name field
     * @type {string}
     * @memberof RoleApiViewModel
     */
    name?: string;
    /**
     * Selected permissions for role
     * @type {Array<PermissionApiModel>}
     * @memberof RoleApiViewModel
     */
    permissions?: Array<PermissionApiModel>;
}

/**
 * Check if a given object implements the RoleApiViewModel interface.
 */
export function instanceOfRoleApiViewModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RoleApiViewModelFromJSON(json: any): RoleApiViewModel {
    return RoleApiViewModelFromJSONTyped(json, false);
}

export function RoleApiViewModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoleApiViewModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'Id') ? undefined : json['Id'],
        'name': !exists(json, 'Name') ? undefined : json['Name'],
        'permissions': !exists(json, 'Permissions') ? undefined : ((json['Permissions'] as Array<any>).map(PermissionApiModelFromJSON)),
    };
}

export function RoleApiViewModelToJSON(value?: RoleApiViewModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Id': value.id,
        'Name': value.name,
        'Permissions': value.permissions === undefined ? undefined : ((value.permissions as Array<any>).map(PermissionApiModelToJSON)),
    };
}

