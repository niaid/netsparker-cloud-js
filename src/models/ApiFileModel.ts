/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Represents a model for file.
 * @export
 * @interface ApiFileModel
 */
export interface ApiFileModel {
    /**
     * Gets or sets the content in Base64 format.
     * @type {string}
     * @memberof ApiFileModel
     */
    content?: string;
    /**
     * Gets or sets the name of the file.
     * @type {string}
     * @memberof ApiFileModel
     */
    fileName?: string;
    /**
     * Gets or sets the type of the importer.
     * @type {string}
     * @memberof ApiFileModel
     */
    importerType?: ApiFileModelImporterTypeEnum;
    /**
     * Gets or sets the URL of the definition file.
     * @type {string}
     * @memberof ApiFileModel
     */
    uRL?: string;
    /**
     * Gets or sets the location of the web service. (This is required if the service is hosted on a different address specified with the "URL")
     * @type {string}
     * @memberof ApiFileModel
     */
    apiURL?: string;
    /**
     * Gets or sets the type.
     * @type {string}
     * @memberof ApiFileModel
     */
    type?: ApiFileModelTypeEnum;
}


/**
 * @export
 */
export const ApiFileModelImporterTypeEnum = {
    None: 'None',
    Fiddler: 'Fiddler',
    Burp: 'Burp',
    Swagger: 'Swagger',
    OwaspZap: 'OwaspZap',
    AspNet: 'AspNet',
    HttpArchive: 'HttpArchive',
    Wadl: 'Wadl',
    Wsdl: 'Wsdl',
    Postman: 'Postman',
    Netsparker: 'Netsparker',
    HttpRequestImporter: 'HttpRequestImporter',
    LinkImporter: 'LinkImporter',
    CsvImporter: 'CsvImporter',
    Iodocs: 'Iodocs',
    WordPress: 'WordPress',
    Raml: 'Raml',
    GraphQl: 'GraphQl',
    AcxXml: 'AcxXml'
} as const;
export type ApiFileModelImporterTypeEnum = typeof ApiFileModelImporterTypeEnum[keyof typeof ApiFileModelImporterTypeEnum];

/**
 * @export
 */
export const ApiFileModelTypeEnum = {
    LinkImportFile: 'LinkImportFile',
    LinkImportUrl: 'LinkImportUrl',
    LinkImportEnterLink: 'LinkImportEnterLink'
} as const;
export type ApiFileModelTypeEnum = typeof ApiFileModelTypeEnum[keyof typeof ApiFileModelTypeEnum];


/**
 * Check if a given object implements the ApiFileModel interface.
 */
export function instanceOfApiFileModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ApiFileModelFromJSON(json: any): ApiFileModel {
    return ApiFileModelFromJSONTyped(json, false);
}

export function ApiFileModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiFileModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'content': !exists(json, 'Content') ? undefined : json['Content'],
        'fileName': !exists(json, 'FileName') ? undefined : json['FileName'],
        'importerType': !exists(json, 'ImporterType') ? undefined : json['ImporterType'],
        'uRL': !exists(json, 'URL') ? undefined : json['URL'],
        'apiURL': !exists(json, 'ApiURL') ? undefined : json['ApiURL'],
        'type': !exists(json, 'Type') ? undefined : json['Type'],
    };
}

export function ApiFileModelToJSON(value?: ApiFileModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Content': value.content,
        'FileName': value.fileName,
        'ImporterType': value.importerType,
        'URL': value.uRL,
        'ApiURL': value.apiURL,
        'Type': value.type,
    };
}

