/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ReducedMemberApiViewModel } from './ReducedMemberApiViewModel';
import {
    ReducedMemberApiViewModelFromJSON,
    ReducedMemberApiViewModelFromJSONTyped,
    ReducedMemberApiViewModelToJSON,
} from './ReducedMemberApiViewModel';
import type { RoleWebsiteGroupMappingDto } from './RoleWebsiteGroupMappingDto';
import {
    RoleWebsiteGroupMappingDtoFromJSON,
    RoleWebsiteGroupMappingDtoFromJSONTyped,
    RoleWebsiteGroupMappingDtoToJSON,
} from './RoleWebsiteGroupMappingDto';

/**
 * 
 * @export
 * @interface TeamApiViewModel
 */
export interface TeamApiViewModel {
    /**
     * Id
     * @type {string}
     * @memberof TeamApiViewModel
     */
    id?: string;
    /**
     * Role Name field
     * @type {string}
     * @memberof TeamApiViewModel
     */
    name?: string;
    /**
     * Selected users
     * @type {Array<ReducedMemberApiViewModel>}
     * @memberof TeamApiViewModel
     */
    members?: Array<ReducedMemberApiViewModel>;
    /**
     * 
     * @type {Array<RoleWebsiteGroupMappingDto>}
     * @memberof TeamApiViewModel
     */
    roleWebsiteGroupMappings?: Array<RoleWebsiteGroupMappingDto>;
}

/**
 * Check if a given object implements the TeamApiViewModel interface.
 */
export function instanceOfTeamApiViewModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TeamApiViewModelFromJSON(json: any): TeamApiViewModel {
    return TeamApiViewModelFromJSONTyped(json, false);
}

export function TeamApiViewModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): TeamApiViewModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'Id') ? undefined : json['Id'],
        'name': !exists(json, 'Name') ? undefined : json['Name'],
        'members': !exists(json, 'Members') ? undefined : ((json['Members'] as Array<any>).map(ReducedMemberApiViewModelFromJSON)),
        'roleWebsiteGroupMappings': !exists(json, 'RoleWebsiteGroupMappings') ? undefined : ((json['RoleWebsiteGroupMappings'] as Array<any>).map(RoleWebsiteGroupMappingDtoFromJSON)),
    };
}

export function TeamApiViewModelToJSON(value?: TeamApiViewModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Id': value.id,
        'Name': value.name,
        'Members': value.members === undefined ? undefined : ((value.members as Array<any>).map(ReducedMemberApiViewModelToJSON)),
        'RoleWebsiteGroupMappings': value.roleWebsiteGroupMappings === undefined ? undefined : ((value.roleWebsiteGroupMappings as Array<any>).map(RoleWebsiteGroupMappingDtoToJSON)),
    };
}

