/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { IntegrationWizardResultModel } from './IntegrationWizardResultModel';
import {
    IntegrationWizardResultModelFromJSON,
    IntegrationWizardResultModelFromJSONTyped,
    IntegrationWizardResultModelToJSON,
} from './IntegrationWizardResultModel';
import type { IntegrationCustomFieldVm } from './IntegrationCustomFieldVm';
import {
    IntegrationCustomFieldVmFromJSON,
    IntegrationCustomFieldVmFromJSONTyped,
    IntegrationCustomFieldVmToJSON,
} from './IntegrationCustomFieldVm';

/**
 * The Microsoft Teams integration info
 * @export
 * @interface MicrosoftTeamsIntegrationInfoModel
 */
export interface MicrosoftTeamsIntegrationInfoModel {
    /**
     * Gets or sets the Webhook URL.
     * @type {string}
     * @memberof MicrosoftTeamsIntegrationInfoModel
     */
    webhookUrl: string;
    /**
     * Gets or sets the Color.
     * @type {string}
     * @memberof MicrosoftTeamsIntegrationInfoModel
     */
    color?: string;
    /**
     * 
     * @type {string}
     * @memberof MicrosoftTeamsIntegrationInfoModel
     */
    readonly type?: MicrosoftTeamsIntegrationInfoModelTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof MicrosoftTeamsIntegrationInfoModel
     */
    readonly genericErrorMessage?: string;
    /**
     * 
     * @type {string}
     * @memberof MicrosoftTeamsIntegrationInfoModel
     */
    readonly identifier?: string;
    /**
     * 
     * @type {string}
     * @memberof MicrosoftTeamsIntegrationInfoModel
     */
    readonly testMessageBody?: string;
    /**
     * 
     * @type {string}
     * @memberof MicrosoftTeamsIntegrationInfoModel
     */
    readonly testMessageTitle?: string;
    /**
     * 
     * @type {string}
     * @memberof MicrosoftTeamsIntegrationInfoModel
     */
    name?: string;
    /**
     * 
     * @type {number}
     * @memberof MicrosoftTeamsIntegrationInfoModel
     */
    integrationVersion?: number;
    /**
     * 
     * @type {string}
     * @memberof MicrosoftTeamsIntegrationInfoModel
     */
    accountID?: string;
    /**
     * 
     * @type {Array<IntegrationCustomFieldVm>}
     * @memberof MicrosoftTeamsIntegrationInfoModel
     */
    customFields?: Array<IntegrationCustomFieldVm>;
    /**
     * 
     * @type {string}
     * @memberof MicrosoftTeamsIntegrationInfoModel
     */
    templateType?: MicrosoftTeamsIntegrationInfoModelTemplateTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof MicrosoftTeamsIntegrationInfoModel
     */
    reopenStatus?: string;
    /**
     * 
     * @type {string}
     * @memberof MicrosoftTeamsIntegrationInfoModel
     */
    resolvedStatus?: string;
    /**
     * 
     * @type {string}
     * @memberof MicrosoftTeamsIntegrationInfoModel
     */
    titleFormat: string;
    /**
     * 
     * @type {IntegrationWizardResultModel}
     * @memberof MicrosoftTeamsIntegrationInfoModel
     */
    integrationWizardResultModel?: IntegrationWizardResultModel;
    /**
     * 
     * @type {string}
     * @memberof MicrosoftTeamsIntegrationInfoModel
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof MicrosoftTeamsIntegrationInfoModel
     */
    state?: MicrosoftTeamsIntegrationInfoModelStateEnum;
}


/**
 * @export
 */
export const MicrosoftTeamsIntegrationInfoModelTypeEnum = {
    Jira: 'Jira',
    GitHub: 'GitHub',
    Tfs: 'TFS',
    FogBugz: 'FogBugz',
    ServiceNow: 'ServiceNow',
    Slack: 'Slack',
    GitLab: 'GitLab',
    Bitbucket: 'Bitbucket',
    Unfuddle: 'Unfuddle',
    Zapier: 'Zapier',
    AzureDevOps: 'AzureDevOps',
    Redmine: 'Redmine',
    Bugzilla: 'Bugzilla',
    Kafka: 'Kafka',
    PagerDuty: 'PagerDuty',
    MicrosoftTeams: 'MicrosoftTeams',
    Clubhouse: 'Clubhouse',
    Trello: 'Trello',
    Asana: 'Asana',
    Webhook: 'Webhook',
    Kenna: 'Kenna',
    Freshservice: 'Freshservice',
    YouTrack: 'YouTrack',
    NetsparkerEnterprise: 'NetsparkerEnterprise',
    Splunk: 'Splunk',
    Mattermost: 'Mattermost',
    Hashicorp: 'Hashicorp',
    PivotalTracker: 'PivotalTracker',
    CyberArk: 'CyberArk',
    DefectDojo: 'DefectDojo',
    JazzTeam: 'JazzTeam',
    AzureKeyVault: 'AzureKeyVault',
    ServiceNowVrm: 'ServiceNowVRM'
} as const;
export type MicrosoftTeamsIntegrationInfoModelTypeEnum = typeof MicrosoftTeamsIntegrationInfoModelTypeEnum[keyof typeof MicrosoftTeamsIntegrationInfoModelTypeEnum];

/**
 * @export
 */
export const MicrosoftTeamsIntegrationInfoModelTemplateTypeEnum = {
    Standard: 'Standard',
    Detailed: 'Detailed'
} as const;
export type MicrosoftTeamsIntegrationInfoModelTemplateTypeEnum = typeof MicrosoftTeamsIntegrationInfoModelTemplateTypeEnum[keyof typeof MicrosoftTeamsIntegrationInfoModelTemplateTypeEnum];

/**
 * @export
 */
export const MicrosoftTeamsIntegrationInfoModelStateEnum = {
    Active: 'Active',
    Suspended: 'Suspended'
} as const;
export type MicrosoftTeamsIntegrationInfoModelStateEnum = typeof MicrosoftTeamsIntegrationInfoModelStateEnum[keyof typeof MicrosoftTeamsIntegrationInfoModelStateEnum];


/**
 * Check if a given object implements the MicrosoftTeamsIntegrationInfoModel interface.
 */
export function instanceOfMicrosoftTeamsIntegrationInfoModel(value: object): boolean {
    if (!('webhookUrl' in value)) return false;
    if (!('titleFormat' in value)) return false;
    return true;
}

export function MicrosoftTeamsIntegrationInfoModelFromJSON(json: any): MicrosoftTeamsIntegrationInfoModel {
    return MicrosoftTeamsIntegrationInfoModelFromJSONTyped(json, false);
}

export function MicrosoftTeamsIntegrationInfoModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): MicrosoftTeamsIntegrationInfoModel {
    if (json == null) {
        return json;
    }
    return {
        
        'webhookUrl': json['WebhookUrl'],
        'color': json['Color'] == null ? undefined : json['Color'],
        'type': json['Type'] == null ? undefined : json['Type'],
        'genericErrorMessage': json['GenericErrorMessage'] == null ? undefined : json['GenericErrorMessage'],
        'identifier': json['Identifier'] == null ? undefined : json['Identifier'],
        'testMessageBody': json['TestMessageBody'] == null ? undefined : json['TestMessageBody'],
        'testMessageTitle': json['TestMessageTitle'] == null ? undefined : json['TestMessageTitle'],
        'name': json['Name'] == null ? undefined : json['Name'],
        'integrationVersion': json['IntegrationVersion'] == null ? undefined : json['IntegrationVersion'],
        'accountID': json['AccountID'] == null ? undefined : json['AccountID'],
        'customFields': json['CustomFields'] == null ? undefined : ((json['CustomFields'] as Array<any>).map(IntegrationCustomFieldVmFromJSON)),
        'templateType': json['TemplateType'] == null ? undefined : json['TemplateType'],
        'reopenStatus': json['ReopenStatus'] == null ? undefined : json['ReopenStatus'],
        'resolvedStatus': json['ResolvedStatus'] == null ? undefined : json['ResolvedStatus'],
        'titleFormat': json['TitleFormat'],
        'integrationWizardResultModel': json['IntegrationWizardResultModel'] == null ? undefined : IntegrationWizardResultModelFromJSON(json['IntegrationWizardResultModel']),
        'id': json['Id'] == null ? undefined : json['Id'],
        'state': json['State'] == null ? undefined : json['State'],
    };
}

export function MicrosoftTeamsIntegrationInfoModelToJSON(value?: Omit<MicrosoftTeamsIntegrationInfoModel, 'Type'|'GenericErrorMessage'|'Identifier'|'TestMessageBody'|'TestMessageTitle'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'WebhookUrl': value['webhookUrl'],
        'Color': value['color'],
        'Name': value['name'],
        'IntegrationVersion': value['integrationVersion'],
        'AccountID': value['accountID'],
        'CustomFields': value['customFields'] == null ? undefined : ((value['customFields'] as Array<any>).map(IntegrationCustomFieldVmToJSON)),
        'TemplateType': value['templateType'],
        'ReopenStatus': value['reopenStatus'],
        'ResolvedStatus': value['resolvedStatus'],
        'TitleFormat': value['titleFormat'],
        'IntegrationWizardResultModel': IntegrationWizardResultModelToJSON(value['integrationWizardResultModel']),
        'Id': value['id'],
        'State': value['state'],
    };
}

