/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface NotificationIntegrationFilterApi
 */
export interface NotificationIntegrationFilterApi {
    /**
     * Gets or sets a value indicating whether this Scan Notification is confirmed.
     * @type {boolean}
     * @memberof NotificationIntegrationFilterApi
     */
    isConfirmed?: boolean;
    /**
     * Gets or sets the lowest severity. This property determines when this rule will be executed and is only used for Scan
     * Completion Notification
     * @type {string}
     * @memberof NotificationIntegrationFilterApi
     */
    severity?: NotificationIntegrationFilterApiSeverityEnum;
    /**
     * Gets or sets the state of filter. This property determines when this rule will be executed and is only used for Scan
     * Completion Notification
     * @type {string}
     * @memberof NotificationIntegrationFilterApi
     */
    state?: NotificationIntegrationFilterApiStateEnum;
    /**
     * Gets or sets a value indicating whether this Scan Notification is certainty.
     * @type {number}
     * @memberof NotificationIntegrationFilterApi
     */
    certainty?: number;
}


/**
 * @export
 */
export const NotificationIntegrationFilterApiSeverityEnum = {
    BestPractice: 'BestPractice',
    Information: 'Information',
    Low: 'Low',
    Medium: 'Medium',
    High: 'High',
    Critical: 'Critical'
} as const;
export type NotificationIntegrationFilterApiSeverityEnum = typeof NotificationIntegrationFilterApiSeverityEnum[keyof typeof NotificationIntegrationFilterApiSeverityEnum];

/**
 * @export
 */
export const NotificationIntegrationFilterApiStateEnum = {
    NotFound: 'NotFound',
    Fixed: 'Fixed',
    NotFixed: 'NotFixed',
    New: 'New',
    Revived: 'Revived'
} as const;
export type NotificationIntegrationFilterApiStateEnum = typeof NotificationIntegrationFilterApiStateEnum[keyof typeof NotificationIntegrationFilterApiStateEnum];


/**
 * Check if a given object implements the NotificationIntegrationFilterApi interface.
 */
export function instanceOfNotificationIntegrationFilterApi(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function NotificationIntegrationFilterApiFromJSON(json: any): NotificationIntegrationFilterApi {
    return NotificationIntegrationFilterApiFromJSONTyped(json, false);
}

export function NotificationIntegrationFilterApiFromJSONTyped(json: any, ignoreDiscriminator: boolean): NotificationIntegrationFilterApi {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'isConfirmed': !exists(json, 'IsConfirmed') ? undefined : json['IsConfirmed'],
        'severity': !exists(json, 'Severity') ? undefined : json['Severity'],
        'state': !exists(json, 'State') ? undefined : json['State'],
        'certainty': !exists(json, 'Certainty') ? undefined : json['Certainty'],
    };
}

export function NotificationIntegrationFilterApiToJSON(value?: NotificationIntegrationFilterApi | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'IsConfirmed': value.isConfirmed,
        'Severity': value.severity,
        'State': value.state,
        'Certainty': value.certainty,
    };
}

