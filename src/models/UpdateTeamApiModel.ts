/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RoleWebsiteGroupMappingApiModel } from './RoleWebsiteGroupMappingApiModel';
import {
    RoleWebsiteGroupMappingApiModelFromJSON,
    RoleWebsiteGroupMappingApiModelFromJSONTyped,
    RoleWebsiteGroupMappingApiModelToJSON,
} from './RoleWebsiteGroupMappingApiModel';

/**
 * 
 * @export
 * @interface UpdateTeamApiModel
 */
export interface UpdateTeamApiModel {
    /**
     * 
     * @type {Array<RoleWebsiteGroupMappingApiModel>}
     * @memberof UpdateTeamApiModel
     */
    roleWebsiteGroupMappings?: Array<RoleWebsiteGroupMappingApiModel>;
    /**
     * Id
     * @type {string}
     * @memberof UpdateTeamApiModel
     */
    id: string;
    /**
     * Role Name field
     * @type {string}
     * @memberof UpdateTeamApiModel
     */
    name: string;
    /**
     * users
     * @type {Array<string>}
     * @memberof UpdateTeamApiModel
     */
    members?: Array<string>;
}

/**
 * Check if a given object implements the UpdateTeamApiModel interface.
 */
export function instanceOfUpdateTeamApiModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function UpdateTeamApiModelFromJSON(json: any): UpdateTeamApiModel {
    return UpdateTeamApiModelFromJSONTyped(json, false);
}

export function UpdateTeamApiModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateTeamApiModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'roleWebsiteGroupMappings': !exists(json, 'RoleWebsiteGroupMappings') ? undefined : ((json['RoleWebsiteGroupMappings'] as Array<any>).map(RoleWebsiteGroupMappingApiModelFromJSON)),
        'id': json['Id'],
        'name': json['Name'],
        'members': !exists(json, 'Members') ? undefined : json['Members'],
    };
}

export function UpdateTeamApiModelToJSON(value?: UpdateTeamApiModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'RoleWebsiteGroupMappings': value.roleWebsiteGroupMappings === undefined ? undefined : ((value.roleWebsiteGroupMappings as Array<any>).map(RoleWebsiteGroupMappingApiModelToJSON)),
        'Id': value.id,
        'Name': value.name,
        'Members': value.members,
    };
}

