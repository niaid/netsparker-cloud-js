/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ReducedTeamDto } from './ReducedTeamDto';
import {
    ReducedTeamDtoFromJSON,
    ReducedTeamDtoFromJSONTyped,
    ReducedTeamDtoToJSON,
} from './ReducedTeamDto';
import type { RoleWebsiteGroupMappingDto } from './RoleWebsiteGroupMappingDto';
import {
    RoleWebsiteGroupMappingDtoFromJSON,
    RoleWebsiteGroupMappingDtoFromJSONTyped,
    RoleWebsiteGroupMappingDtoToJSON,
} from './RoleWebsiteGroupMappingDto';

/**
 * 
 * @export
 * @interface MemberApiViewModel
 */
export interface MemberApiViewModel {
    /**
     * Gets or sets the foreign key reference to the related User instance.
     * @type {string}
     * @memberof MemberApiViewModel
     */
    id?: string;
    /**
     * Gets or sets the account identifier.
     * @type {string}
     * @memberof MemberApiViewModel
     */
    accountId?: string;
    /**
     * Gets or sets the display name of the user.
     * @type {string}
     * @memberof MemberApiViewModel
     */
    name?: string;
    /**
     * Gets or sets the email.
     * @type {string}
     * @memberof MemberApiViewModel
     */
    email?: string;
    /**
     * Gets or sets a value indicating whether api access is enabled for user.
     * @type {boolean}
     * @memberof MemberApiViewModel
     */
    isApiAccessEnabled?: boolean;
    /**
     * Gets or sets the phone number.
     * @type {string}
     * @memberof MemberApiViewModel
     */
    phoneNumber?: string;
    /**
     * Gets or sets user date format that defines the culturally appropriate format of displaying dates and times.
     * You can use these values ; dd/MM/yyyy and MM/dd/yyyy. Default : dd/MM/yyyy.
     * @type {string}
     * @memberof MemberApiViewModel
     */
    dateTimeFormat?: string;
    /**
     * Gets or sets the user's time zone.
     * You can check out following endpoint to see all of time zones. Api endpoint : /api/1.0/teams/gettimezones. Default :
     * GMT Standard Time.
     * @type {string}
     * @memberof MemberApiViewModel
     */
    timezoneId?: string;
    /**
     * Gets or sets the state of the user.
     * @type {string}
     * @memberof MemberApiViewModel
     */
    state?: MemberApiViewModelStateEnum;
    /**
     * Gets or sets the allowed site limit.
     * @type {number}
     * @memberof MemberApiViewModel
     */
    allowedWebsiteLimit?: number;
    /**
     * Gets or sets a value indicating whether two factor authentication is enabled for this user.
     * @type {boolean}
     * @memberof MemberApiViewModel
     */
    isTwoFactorAuthenticationEnabled?: boolean;
    /**
     * Gets or sets the alternative login email.
     * @type {string}
     * @memberof MemberApiViewModel
     */
    alternateLoginEmail?: string;
    /**
     * User direct roles
     * @type {Array<RoleWebsiteGroupMappingDto>}
     * @memberof MemberApiViewModel
     */
    roleWebsiteGroupMappings?: Array<RoleWebsiteGroupMappingDto>;
    /**
     * User Teams
     * @type {Array<ReducedTeamDto>}
     * @memberof MemberApiViewModel
     */
    teams?: Array<ReducedTeamDto>;
    /**
     * Gets or sets a value indicating whether this user is enforced for SSO.
     * @type {boolean}
     * @memberof MemberApiViewModel
     */
    onlySsoLogin?: boolean;
    /**
     * Gets or sets the date which this entity was created at.
     * @type {Date}
     * @memberof MemberApiViewModel
     */
    createdAt?: Date;
    /**
     * Gets or sets the modification timestamp which is used for concurrency checking.
     * @type {Date}
     * @memberof MemberApiViewModel
     */
    lastLoginDate?: Date;
    /**
     * 
     * @type {number}
     * @memberof MemberApiViewModel
     */
    websiteCount?: number;
}


/**
 * @export
 */
export const MemberApiViewModelStateEnum = {
    Enabled: 'Enabled',
    Disabled: 'Disabled'
} as const;
export type MemberApiViewModelStateEnum = typeof MemberApiViewModelStateEnum[keyof typeof MemberApiViewModelStateEnum];


/**
 * Check if a given object implements the MemberApiViewModel interface.
 */
export function instanceOfMemberApiViewModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MemberApiViewModelFromJSON(json: any): MemberApiViewModel {
    return MemberApiViewModelFromJSONTyped(json, false);
}

export function MemberApiViewModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): MemberApiViewModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'Id') ? undefined : json['Id'],
        'accountId': !exists(json, 'AccountId') ? undefined : json['AccountId'],
        'name': !exists(json, 'Name') ? undefined : json['Name'],
        'email': !exists(json, 'Email') ? undefined : json['Email'],
        'isApiAccessEnabled': !exists(json, 'IsApiAccessEnabled') ? undefined : json['IsApiAccessEnabled'],
        'phoneNumber': !exists(json, 'PhoneNumber') ? undefined : json['PhoneNumber'],
        'dateTimeFormat': !exists(json, 'DateTimeFormat') ? undefined : json['DateTimeFormat'],
        'timezoneId': !exists(json, 'TimezoneId') ? undefined : json['TimezoneId'],
        'state': !exists(json, 'State') ? undefined : json['State'],
        'allowedWebsiteLimit': !exists(json, 'AllowedWebsiteLimit') ? undefined : json['AllowedWebsiteLimit'],
        'isTwoFactorAuthenticationEnabled': !exists(json, 'IsTwoFactorAuthenticationEnabled') ? undefined : json['IsTwoFactorAuthenticationEnabled'],
        'alternateLoginEmail': !exists(json, 'AlternateLoginEmail') ? undefined : json['AlternateLoginEmail'],
        'roleWebsiteGroupMappings': !exists(json, 'RoleWebsiteGroupMappings') ? undefined : ((json['RoleWebsiteGroupMappings'] as Array<any>).map(RoleWebsiteGroupMappingDtoFromJSON)),
        'teams': !exists(json, 'Teams') ? undefined : ((json['Teams'] as Array<any>).map(ReducedTeamDtoFromJSON)),
        'onlySsoLogin': !exists(json, 'OnlySsoLogin') ? undefined : json['OnlySsoLogin'],
        'createdAt': !exists(json, 'CreatedAt') ? undefined : (new Date(json['CreatedAt'])),
        'lastLoginDate': !exists(json, 'LastLoginDate') ? undefined : (new Date(json['LastLoginDate'])),
        'websiteCount': !exists(json, 'WebsiteCount') ? undefined : json['WebsiteCount'],
    };
}

export function MemberApiViewModelToJSON(value?: MemberApiViewModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Id': value.id,
        'AccountId': value.accountId,
        'Name': value.name,
        'Email': value.email,
        'IsApiAccessEnabled': value.isApiAccessEnabled,
        'PhoneNumber': value.phoneNumber,
        'DateTimeFormat': value.dateTimeFormat,
        'TimezoneId': value.timezoneId,
        'State': value.state,
        'AllowedWebsiteLimit': value.allowedWebsiteLimit,
        'IsTwoFactorAuthenticationEnabled': value.isTwoFactorAuthenticationEnabled,
        'AlternateLoginEmail': value.alternateLoginEmail,
        'RoleWebsiteGroupMappings': value.roleWebsiteGroupMappings === undefined ? undefined : ((value.roleWebsiteGroupMappings as Array<any>).map(RoleWebsiteGroupMappingDtoToJSON)),
        'Teams': value.teams === undefined ? undefined : ((value.teams as Array<any>).map(ReducedTeamDtoToJSON)),
        'OnlySsoLogin': value.onlySsoLogin,
        'CreatedAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'LastLoginDate': value.lastLoginDate === undefined ? undefined : (value.lastLoginDate.toISOString()),
        'WebsiteCount': value.websiteCount,
    };
}

