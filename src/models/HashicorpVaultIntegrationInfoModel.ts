/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CertificateInfoModel } from './CertificateInfoModel';
import {
    CertificateInfoModelFromJSON,
    CertificateInfoModelFromJSONTyped,
    CertificateInfoModelToJSON,
} from './CertificateInfoModel';
import type { IntegrationWizardResultModel } from './IntegrationWizardResultModel';
import {
    IntegrationWizardResultModelFromJSON,
    IntegrationWizardResultModelFromJSONTyped,
    IntegrationWizardResultModelToJSON,
} from './IntegrationWizardResultModel';
import type { IntegrationCustomFieldVm } from './IntegrationCustomFieldVm';
import {
    IntegrationCustomFieldVmFromJSON,
    IntegrationCustomFieldVmFromJSONTyped,
    IntegrationCustomFieldVmToJSON,
} from './IntegrationCustomFieldVm';

/**
 * The Vault integration info
 * @export
 * @interface HashicorpVaultIntegrationInfoModel
 */
export interface HashicorpVaultIntegrationInfoModel {
    /**
     * Token for authentication.
     * @type {string}
     * @memberof HashicorpVaultIntegrationInfoModel
     */
    token: string;
    /**
     * 
     * @type {string}
     * @memberof HashicorpVaultIntegrationInfoModel
     */
    agentMode?: HashicorpVaultIntegrationInfoModelAgentModeEnum;
    /**
     * 
     * @type {string}
     * @memberof HashicorpVaultIntegrationInfoModel
     */
    authType?: HashicorpVaultIntegrationInfoModelAuthTypeEnum;
    /**
     * The Vault instance URL.
     * @type {string}
     * @memberof HashicorpVaultIntegrationInfoModel
     */
    url: string;
    /**
     * 
     * @type {string}
     * @memberof HashicorpVaultIntegrationInfoModel
     */
    certificateFileEncrypted?: string;
    /**
     * Pfx File Password for authentication.
     * @type {string}
     * @memberof HashicorpVaultIntegrationInfoModel
     */
    certificateFilePassword?: string;
    /**
     * 
     * @type {string}
     * @memberof HashicorpVaultIntegrationInfoModel
     */
    path?: string;
    /**
     * 
     * @type {string}
     * @memberof HashicorpVaultIntegrationInfoModel
     */
    namespace?: string;
    /**
     * 
     * @type {CertificateInfoModel}
     * @memberof HashicorpVaultIntegrationInfoModel
     */
    certificateInfoModel?: CertificateInfoModel;
    /**
     * 
     * @type {boolean}
     * @memberof HashicorpVaultIntegrationInfoModel
     */
    hasCertificate?: boolean;
    /**
     * Gets or sets the date which this entity was updated at.
     * @type {Date}
     * @memberof HashicorpVaultIntegrationInfoModel
     */
    updatedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof HashicorpVaultIntegrationInfoModel
     */
    readonly type?: HashicorpVaultIntegrationInfoModelTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof HashicorpVaultIntegrationInfoModel
     */
    readonly genericErrorMessage?: string;
    /**
     * 
     * @type {string}
     * @memberof HashicorpVaultIntegrationInfoModel
     */
    readonly identifier?: string;
    /**
     * 
     * @type {string}
     * @memberof HashicorpVaultIntegrationInfoModel
     */
    readonly testMessageBody?: string;
    /**
     * 
     * @type {string}
     * @memberof HashicorpVaultIntegrationInfoModel
     */
    readonly testMessageTitle?: string;
    /**
     * 
     * @type {string}
     * @memberof HashicorpVaultIntegrationInfoModel
     */
    readonly webhookUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof HashicorpVaultIntegrationInfoModel
     */
    name?: string;
    /**
     * 
     * @type {number}
     * @memberof HashicorpVaultIntegrationInfoModel
     */
    integrationVersion?: number;
    /**
     * 
     * @type {string}
     * @memberof HashicorpVaultIntegrationInfoModel
     */
    accountID?: string;
    /**
     * 
     * @type {Array<IntegrationCustomFieldVm>}
     * @memberof HashicorpVaultIntegrationInfoModel
     */
    customFields?: Array<IntegrationCustomFieldVm>;
    /**
     * 
     * @type {string}
     * @memberof HashicorpVaultIntegrationInfoModel
     */
    templateType?: HashicorpVaultIntegrationInfoModelTemplateTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof HashicorpVaultIntegrationInfoModel
     */
    reopenStatus?: string;
    /**
     * 
     * @type {string}
     * @memberof HashicorpVaultIntegrationInfoModel
     */
    resolvedStatus?: string;
    /**
     * 
     * @type {string}
     * @memberof HashicorpVaultIntegrationInfoModel
     */
    titleFormat: string;
    /**
     * 
     * @type {IntegrationWizardResultModel}
     * @memberof HashicorpVaultIntegrationInfoModel
     */
    integrationWizardResultModel?: IntegrationWizardResultModel;
    /**
     * 
     * @type {string}
     * @memberof HashicorpVaultIntegrationInfoModel
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof HashicorpVaultIntegrationInfoModel
     */
    state?: HashicorpVaultIntegrationInfoModelStateEnum;
}


/**
 * @export
 */
export const HashicorpVaultIntegrationInfoModelAgentModeEnum = {
    Cloud: 'Cloud',
    Internal: 'Internal'
} as const;
export type HashicorpVaultIntegrationInfoModelAgentModeEnum = typeof HashicorpVaultIntegrationInfoModelAgentModeEnum[keyof typeof HashicorpVaultIntegrationInfoModelAgentModeEnum];

/**
 * @export
 */
export const HashicorpVaultIntegrationInfoModelAuthTypeEnum = {
    Token: 'Token',
    TlsCert: 'TLSCert'
} as const;
export type HashicorpVaultIntegrationInfoModelAuthTypeEnum = typeof HashicorpVaultIntegrationInfoModelAuthTypeEnum[keyof typeof HashicorpVaultIntegrationInfoModelAuthTypeEnum];

/**
 * @export
 */
export const HashicorpVaultIntegrationInfoModelTypeEnum = {
    Jira: 'Jira',
    GitHub: 'GitHub',
    Tfs: 'TFS',
    FogBugz: 'FogBugz',
    ServiceNow: 'ServiceNow',
    Slack: 'Slack',
    GitLab: 'GitLab',
    Bitbucket: 'Bitbucket',
    Unfuddle: 'Unfuddle',
    Zapier: 'Zapier',
    AzureDevOps: 'AzureDevOps',
    Redmine: 'Redmine',
    Bugzilla: 'Bugzilla',
    Kafka: 'Kafka',
    PagerDuty: 'PagerDuty',
    MicrosoftTeams: 'MicrosoftTeams',
    Clubhouse: 'Clubhouse',
    Trello: 'Trello',
    Asana: 'Asana',
    Webhook: 'Webhook',
    Kenna: 'Kenna',
    Freshservice: 'Freshservice',
    YouTrack: 'YouTrack',
    NetsparkerEnterprise: 'NetsparkerEnterprise',
    Splunk: 'Splunk',
    Mattermost: 'Mattermost',
    Hashicorp: 'Hashicorp',
    PivotalTracker: 'PivotalTracker',
    CyberArk: 'CyberArk',
    DefectDojo: 'DefectDojo',
    JazzTeam: 'JazzTeam',
    AzureKeyVault: 'AzureKeyVault',
    ServiceNowVrm: 'ServiceNowVRM'
} as const;
export type HashicorpVaultIntegrationInfoModelTypeEnum = typeof HashicorpVaultIntegrationInfoModelTypeEnum[keyof typeof HashicorpVaultIntegrationInfoModelTypeEnum];

/**
 * @export
 */
export const HashicorpVaultIntegrationInfoModelTemplateTypeEnum = {
    Standard: 'Standard',
    Detailed: 'Detailed'
} as const;
export type HashicorpVaultIntegrationInfoModelTemplateTypeEnum = typeof HashicorpVaultIntegrationInfoModelTemplateTypeEnum[keyof typeof HashicorpVaultIntegrationInfoModelTemplateTypeEnum];

/**
 * @export
 */
export const HashicorpVaultIntegrationInfoModelStateEnum = {
    Active: 'Active',
    Suspended: 'Suspended'
} as const;
export type HashicorpVaultIntegrationInfoModelStateEnum = typeof HashicorpVaultIntegrationInfoModelStateEnum[keyof typeof HashicorpVaultIntegrationInfoModelStateEnum];


/**
 * Check if a given object implements the HashicorpVaultIntegrationInfoModel interface.
 */
export function instanceOfHashicorpVaultIntegrationInfoModel(value: object): boolean {
    if (!('token' in value)) return false;
    if (!('url' in value)) return false;
    if (!('titleFormat' in value)) return false;
    return true;
}

export function HashicorpVaultIntegrationInfoModelFromJSON(json: any): HashicorpVaultIntegrationInfoModel {
    return HashicorpVaultIntegrationInfoModelFromJSONTyped(json, false);
}

export function HashicorpVaultIntegrationInfoModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): HashicorpVaultIntegrationInfoModel {
    if (json == null) {
        return json;
    }
    return {
        
        'token': json['Token'],
        'agentMode': json['AgentMode'] == null ? undefined : json['AgentMode'],
        'authType': json['AuthType'] == null ? undefined : json['AuthType'],
        'url': json['Url'],
        'certificateFileEncrypted': json['CertificateFileEncrypted'] == null ? undefined : json['CertificateFileEncrypted'],
        'certificateFilePassword': json['CertificateFilePassword'] == null ? undefined : json['CertificateFilePassword'],
        'path': json['Path'] == null ? undefined : json['Path'],
        'namespace': json['Namespace'] == null ? undefined : json['Namespace'],
        'certificateInfoModel': json['CertificateInfoModel'] == null ? undefined : CertificateInfoModelFromJSON(json['CertificateInfoModel']),
        'hasCertificate': json['HasCertificate'] == null ? undefined : json['HasCertificate'],
        'updatedAt': json['UpdatedAt'] == null ? undefined : (new Date(json['UpdatedAt'])),
        'type': json['Type'] == null ? undefined : json['Type'],
        'genericErrorMessage': json['GenericErrorMessage'] == null ? undefined : json['GenericErrorMessage'],
        'identifier': json['Identifier'] == null ? undefined : json['Identifier'],
        'testMessageBody': json['TestMessageBody'] == null ? undefined : json['TestMessageBody'],
        'testMessageTitle': json['TestMessageTitle'] == null ? undefined : json['TestMessageTitle'],
        'webhookUrl': json['WebhookUrl'] == null ? undefined : json['WebhookUrl'],
        'name': json['Name'] == null ? undefined : json['Name'],
        'integrationVersion': json['IntegrationVersion'] == null ? undefined : json['IntegrationVersion'],
        'accountID': json['AccountID'] == null ? undefined : json['AccountID'],
        'customFields': json['CustomFields'] == null ? undefined : ((json['CustomFields'] as Array<any>).map(IntegrationCustomFieldVmFromJSON)),
        'templateType': json['TemplateType'] == null ? undefined : json['TemplateType'],
        'reopenStatus': json['ReopenStatus'] == null ? undefined : json['ReopenStatus'],
        'resolvedStatus': json['ResolvedStatus'] == null ? undefined : json['ResolvedStatus'],
        'titleFormat': json['TitleFormat'],
        'integrationWizardResultModel': json['IntegrationWizardResultModel'] == null ? undefined : IntegrationWizardResultModelFromJSON(json['IntegrationWizardResultModel']),
        'id': json['Id'] == null ? undefined : json['Id'],
        'state': json['State'] == null ? undefined : json['State'],
    };
}

export function HashicorpVaultIntegrationInfoModelToJSON(value?: Omit<HashicorpVaultIntegrationInfoModel, 'Type'|'GenericErrorMessage'|'Identifier'|'TestMessageBody'|'TestMessageTitle'|'WebhookUrl'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'Token': value['token'],
        'AgentMode': value['agentMode'],
        'AuthType': value['authType'],
        'Url': value['url'],
        'CertificateFileEncrypted': value['certificateFileEncrypted'],
        'CertificateFilePassword': value['certificateFilePassword'],
        'Path': value['path'],
        'Namespace': value['namespace'],
        'CertificateInfoModel': CertificateInfoModelToJSON(value['certificateInfoModel']),
        'HasCertificate': value['hasCertificate'],
        'UpdatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
        'Name': value['name'],
        'IntegrationVersion': value['integrationVersion'],
        'AccountID': value['accountID'],
        'CustomFields': value['customFields'] == null ? undefined : ((value['customFields'] as Array<any>).map(IntegrationCustomFieldVmToJSON)),
        'TemplateType': value['templateType'],
        'ReopenStatus': value['reopenStatus'],
        'ResolvedStatus': value['resolvedStatus'],
        'TitleFormat': value['titleFormat'],
        'IntegrationWizardResultModel': IntegrationWizardResultModelToJSON(value['integrationWizardResultModel']),
        'Id': value['id'],
        'State': value['state'],
    };
}

