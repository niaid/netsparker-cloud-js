/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { NameValuePair } from './NameValuePair';
import {
    NameValuePairFromJSON,
    NameValuePairFromJSONTyped,
    NameValuePairToJSON,
} from './NameValuePair';

/**
 * Represents access token table model for oauth2.
 * @export
 * @interface AccessTokenTableModel
 */
export interface AccessTokenTableModel {
    /**
     * Gets or sets the table column names.
     * @type {Array<string>}
     * @memberof AccessTokenTableModel
     */
    fields?: Array<string>;
    /**
     * Gets or sets the access token table items.
     * @type {{ [key: string]: Array<NameValuePair>; }}
     * @memberof AccessTokenTableModel
     */
    items?: { [key: string]: Array<NameValuePair>; };
}

/**
 * Check if a given object implements the AccessTokenTableModel interface.
 */
export function instanceOfAccessTokenTableModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AccessTokenTableModelFromJSON(json: any): AccessTokenTableModel {
    return AccessTokenTableModelFromJSONTyped(json, false);
}

export function AccessTokenTableModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccessTokenTableModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'fields': !exists(json, 'Fields') ? undefined : json['Fields'],
        'items': !exists(json, 'Items') ? undefined : json['Items'],
    };
}

export function AccessTokenTableModelToJSON(value?: AccessTokenTableModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Fields': value.fields,
        'Items': value.items,
    };
}

