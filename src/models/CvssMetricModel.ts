/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CvssScoreValue } from './CvssScoreValue';
import {
    CvssScoreValueFromJSON,
    CvssScoreValueFromJSONTyped,
    CvssScoreValueToJSON,
} from './CvssScoreValue';

/**
 * Represents base model for a CVSS entity.
 * @export
 * @interface CvssMetricModel
 */
export interface CvssMetricModel {
    /**
     * 
     * @type {CvssScoreValue}
     * @memberof CvssMetricModel
     */
    score?: CvssScoreValue;
    /**
     * Gets or sets the metrics of a cvss
     * @type {{ [key: string]: string; }}
     * @memberof CvssMetricModel
     */
    metrics?: { [key: string]: string; };
}

/**
 * Check if a given object implements the CvssMetricModel interface.
 */
export function instanceOfCvssMetricModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CvssMetricModelFromJSON(json: any): CvssMetricModel {
    return CvssMetricModelFromJSONTyped(json, false);
}

export function CvssMetricModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): CvssMetricModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'score': !exists(json, 'Score') ? undefined : CvssScoreValueFromJSON(json['Score']),
        'metrics': !exists(json, 'Metrics') ? undefined : json['Metrics'],
    };
}

export function CvssMetricModelToJSON(value?: CvssMetricModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Score': CvssScoreValueToJSON(value.score),
        'Metrics': value.metrics,
    };
}

