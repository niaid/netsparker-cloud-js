/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FormAuthenticationPersona } from './FormAuthenticationPersona';
import {
    FormAuthenticationPersonaFromJSON,
    FormAuthenticationPersonaFromJSONTyped,
    FormAuthenticationPersonaToJSON,
} from './FormAuthenticationPersona';
import type { LogoutKeywordPatternModel } from './LogoutKeywordPatternModel';
import {
    LogoutKeywordPatternModelFromJSON,
    LogoutKeywordPatternModelFromJSONTyped,
    LogoutKeywordPatternModelToJSON,
} from './LogoutKeywordPatternModel';
import type { FormAuthenticationCustomScript } from './FormAuthenticationCustomScript';
import {
    FormAuthenticationCustomScriptFromJSON,
    FormAuthenticationCustomScriptFromJSONTyped,
    FormAuthenticationCustomScriptToJSON,
} from './FormAuthenticationCustomScript';
import type { ScanNotificationIntegrationViewModel } from './ScanNotificationIntegrationViewModel';
import {
    ScanNotificationIntegrationViewModelFromJSON,
    ScanNotificationIntegrationViewModelFromJSONTyped,
    ScanNotificationIntegrationViewModelToJSON,
} from './ScanNotificationIntegrationViewModel';
import type { AuthorizationTokenRule } from './AuthorizationTokenRule';
import {
    AuthorizationTokenRuleFromJSON,
    AuthorizationTokenRuleFromJSONTyped,
    AuthorizationTokenRuleToJSON,
} from './AuthorizationTokenRule';

/**
 * Represents a model for carrying out form authentication settings.
 * @export
 * @interface FormAuthenticationSettingModel
 */
export interface FormAuthenticationSettingModel {
    /**
     * Gets or sets the Secrets and Encryption Management integrations.
     * @type {{ [key: string]: ScanNotificationIntegrationViewModel; }}
     * @memberof FormAuthenticationSettingModel
     */
    integrations?: { [key: string]: ScanNotificationIntegrationViewModel; };
    /**
     * Gets or sets the custom scripts.
     * @type {Array<FormAuthenticationCustomScript>}
     * @memberof FormAuthenticationSettingModel
     */
    customScripts?: Array<FormAuthenticationCustomScript>;
    /**
     * 
     * @type {boolean}
     * @memberof FormAuthenticationSettingModel
     */
    interactiveLoginRequired?: boolean;
    /**
     * Gets or sets the personas validation property.
     * @type {boolean}
     * @memberof FormAuthenticationSettingModel
     */
    readonly defaultPersonaValidation?: boolean;
    /**
     * Gets or sets a value indicating whether to detect Bearer token authorization. Default: true
     * @type {boolean}
     * @memberof FormAuthenticationSettingModel
     */
    detectBearerToken?: boolean;
    /**
     * Gets or sets a value indicating whether to diagnostics logging enabled.
     * @type {boolean}
     * @memberof FormAuthenticationSettingModel
     */
    enableDiagnosticsLogging?: boolean;
    /**
     * Gets or sets whether logout detection is disabled.
     * @type {boolean}
     * @memberof FormAuthenticationSettingModel
     */
    disableLogoutDetection?: boolean;
    /**
     * Gets or sets a value indicating whether form authentication is enabled.
     * @type {boolean}
     * @memberof FormAuthenticationSettingModel
     */
    isEnabled?: boolean;
    /**
     * Gets a value indicating whether form authantication is not verified
     * @type {boolean}
     * @memberof FormAuthenticationSettingModel
     */
    readonly isNotVerified?: boolean;
    /**
     * Gets or sets the login form URL.
     * @type {string}
     * @memberof FormAuthenticationSettingModel
     */
    loginFormUrl?: string;
    /**
     * Gets or sets the login required URL.
     * @type {string}
     * @memberof FormAuthenticationSettingModel
     */
    loginRequiredUrl?: string;
    /**
     * Gets or sets the logout keyword patterns.
     * @type {Array<LogoutKeywordPatternModel>}
     * @memberof FormAuthenticationSettingModel
     */
    logoutKeywordPatterns?: Array<LogoutKeywordPatternModel>;
    /**
     * Gets or sets the JSON serialized logout keyword patterns.
     * @type {string}
     * @memberof FormAuthenticationSettingModel
     */
    logoutKeywordPatternsValue?: string;
    /**
     * Gets or sets the logout redirect pattern.
     * @type {string}
     * @memberof FormAuthenticationSettingModel
     */
    logoutRedirectPattern?: string;
    /**
     * Gets or sets a value indicating whether target URL should be overrided with authenticated page.
     * @type {boolean}
     * @memberof FormAuthenticationSettingModel
     */
    overrideTargetUrl?: boolean;
    /**
     * Gets or sets the form authentication personas.
     * @type {Array<FormAuthenticationPersona>}
     * @memberof FormAuthenticationSettingModel
     */
    personas?: Array<FormAuthenticationPersona>;
    /**
     * Gets or sets the personas validation property.
     * @type {boolean}
     * @memberof FormAuthenticationSettingModel
     */
    readonly personasValidation?: boolean;
    /**
     * Gets or sets the token mappers.
     * @type {Array<AuthorizationTokenRule>}
     * @memberof FormAuthenticationSettingModel
     */
    authorizationTokenRules?: Array<AuthorizationTokenRule>;
}

/**
 * Check if a given object implements the FormAuthenticationSettingModel interface.
 */
export function instanceOfFormAuthenticationSettingModel(value: object): boolean {
    return true;
}

export function FormAuthenticationSettingModelFromJSON(json: any): FormAuthenticationSettingModel {
    return FormAuthenticationSettingModelFromJSONTyped(json, false);
}

export function FormAuthenticationSettingModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): FormAuthenticationSettingModel {
    if (json == null) {
        return json;
    }
    return {
        
        'integrations': json['Integrations'] == null ? undefined : (mapValues(json['Integrations'], ScanNotificationIntegrationViewModelFromJSON)),
        'customScripts': json['CustomScripts'] == null ? undefined : ((json['CustomScripts'] as Array<any>).map(FormAuthenticationCustomScriptFromJSON)),
        'interactiveLoginRequired': json['InteractiveLoginRequired'] == null ? undefined : json['InteractiveLoginRequired'],
        'defaultPersonaValidation': json['DefaultPersonaValidation'] == null ? undefined : json['DefaultPersonaValidation'],
        'detectBearerToken': json['DetectBearerToken'] == null ? undefined : json['DetectBearerToken'],
        'enableDiagnosticsLogging': json['EnableDiagnosticsLogging'] == null ? undefined : json['EnableDiagnosticsLogging'],
        'disableLogoutDetection': json['DisableLogoutDetection'] == null ? undefined : json['DisableLogoutDetection'],
        'isEnabled': json['IsEnabled'] == null ? undefined : json['IsEnabled'],
        'isNotVerified': json['IsNotVerified'] == null ? undefined : json['IsNotVerified'],
        'loginFormUrl': json['LoginFormUrl'] == null ? undefined : json['LoginFormUrl'],
        'loginRequiredUrl': json['LoginRequiredUrl'] == null ? undefined : json['LoginRequiredUrl'],
        'logoutKeywordPatterns': json['LogoutKeywordPatterns'] == null ? undefined : ((json['LogoutKeywordPatterns'] as Array<any>).map(LogoutKeywordPatternModelFromJSON)),
        'logoutKeywordPatternsValue': json['LogoutKeywordPatternsValue'] == null ? undefined : json['LogoutKeywordPatternsValue'],
        'logoutRedirectPattern': json['LogoutRedirectPattern'] == null ? undefined : json['LogoutRedirectPattern'],
        'overrideTargetUrl': json['OverrideTargetUrl'] == null ? undefined : json['OverrideTargetUrl'],
        'personas': json['Personas'] == null ? undefined : ((json['Personas'] as Array<any>).map(FormAuthenticationPersonaFromJSON)),
        'personasValidation': json['PersonasValidation'] == null ? undefined : json['PersonasValidation'],
        'authorizationTokenRules': json['AuthorizationTokenRules'] == null ? undefined : ((json['AuthorizationTokenRules'] as Array<any>).map(AuthorizationTokenRuleFromJSON)),
    };
}

export function FormAuthenticationSettingModelToJSON(value?: Omit<FormAuthenticationSettingModel, 'DefaultPersonaValidation'|'IsNotVerified'|'PersonasValidation'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'Integrations': value['integrations'] == null ? undefined : (mapValues(value['integrations'], ScanNotificationIntegrationViewModelToJSON)),
        'CustomScripts': value['customScripts'] == null ? undefined : ((value['customScripts'] as Array<any>).map(FormAuthenticationCustomScriptToJSON)),
        'InteractiveLoginRequired': value['interactiveLoginRequired'],
        'DetectBearerToken': value['detectBearerToken'],
        'EnableDiagnosticsLogging': value['enableDiagnosticsLogging'],
        'DisableLogoutDetection': value['disableLogoutDetection'],
        'IsEnabled': value['isEnabled'],
        'LoginFormUrl': value['loginFormUrl'],
        'LoginRequiredUrl': value['loginRequiredUrl'],
        'LogoutKeywordPatterns': value['logoutKeywordPatterns'] == null ? undefined : ((value['logoutKeywordPatterns'] as Array<any>).map(LogoutKeywordPatternModelToJSON)),
        'LogoutKeywordPatternsValue': value['logoutKeywordPatternsValue'],
        'LogoutRedirectPattern': value['logoutRedirectPattern'],
        'OverrideTargetUrl': value['overrideTargetUrl'],
        'Personas': value['personas'] == null ? undefined : ((value['personas'] as Array<any>).map(FormAuthenticationPersonaToJSON)),
        'AuthorizationTokenRules': value['authorizationTokenRules'] == null ? undefined : ((value['authorizationTokenRules'] as Array<any>).map(AuthorizationTokenRuleToJSON)),
    };
}

