/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Represents a model for carrying out a new scan notification recipient data
 * @export
 * @interface NewScanNotificationRecipientApiModel
 */
export interface NewScanNotificationRecipientApiModel {
    /**
     * Gets or sets the emails of users who will be notified via Email.
     * @type {Array<string>}
     * @memberof NewScanNotificationRecipientApiModel
     */
    emails?: Array<string>;
    /**
     * Gets or sets users' emails who won't be notified
     * @type {Array<string>}
     * @memberof NewScanNotificationRecipientApiModel
     */
    excludedUsers?: Array<string>;
    /**
     * Integration is only used in "New Scan" and "Scan Completed" events.
     * For New Scan Event: Only Team Messaging integrations can be added. (Slack, MS Teams and Mattermost etc.)
     * For Scan Completed Event: Only Team Messaging and Issue Tracking integrations can be added.
     * @type {Array<string>}
     * @memberof NewScanNotificationRecipientApiModel
     */
    integrations?: Array<string>;
    /**
     * Gets or sets the phone numbers of users who will be notified via SMS.
     * @type {Array<string>}
     * @memberof NewScanNotificationRecipientApiModel
     */
    phoneNumbers?: Array<string>;
    /**
     * Gets or sets the emails of outsider recipients users who will be notified via Email
     * @type {Array<string>}
     * @memberof NewScanNotificationRecipientApiModel
     */
    outsiderRecipients?: Array<string>;
    /**
     * Gets or sets the specific recipients who will be notified via Email.
     * @type {Array<string>}
     * @memberof NewScanNotificationRecipientApiModel
     */
    specificEmailRecipients?: Array<NewScanNotificationRecipientApiModelSpecificEmailRecipientsEnum>;
    /**
     * Gets or sets the specific recipients who will be notified via SMS.
     * @type {Array<string>}
     * @memberof NewScanNotificationRecipientApiModel
     */
    specificSmsRecipients?: Array<NewScanNotificationRecipientApiModelSpecificSmsRecipientsEnum>;
}


/**
 * @export
 */
export const NewScanNotificationRecipientApiModelSpecificEmailRecipientsEnum = {
    None: 'None',
    WebsiteTechnicalContact: 'WebsiteTechnicalContact',
    PersonWhoStartedScan: 'PersonWhoStartedScan',
    AllAuthorized: 'AllAuthorized',
    AccountAdmins: 'AccountAdmins'
} as const;
export type NewScanNotificationRecipientApiModelSpecificEmailRecipientsEnum = typeof NewScanNotificationRecipientApiModelSpecificEmailRecipientsEnum[keyof typeof NewScanNotificationRecipientApiModelSpecificEmailRecipientsEnum];

/**
 * @export
 */
export const NewScanNotificationRecipientApiModelSpecificSmsRecipientsEnum = {
    None: 'None',
    WebsiteTechnicalContact: 'WebsiteTechnicalContact',
    PersonWhoStartedScan: 'PersonWhoStartedScan',
    AllAuthorized: 'AllAuthorized',
    AccountAdmins: 'AccountAdmins'
} as const;
export type NewScanNotificationRecipientApiModelSpecificSmsRecipientsEnum = typeof NewScanNotificationRecipientApiModelSpecificSmsRecipientsEnum[keyof typeof NewScanNotificationRecipientApiModelSpecificSmsRecipientsEnum];


/**
 * Check if a given object implements the NewScanNotificationRecipientApiModel interface.
 */
export function instanceOfNewScanNotificationRecipientApiModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function NewScanNotificationRecipientApiModelFromJSON(json: any): NewScanNotificationRecipientApiModel {
    return NewScanNotificationRecipientApiModelFromJSONTyped(json, false);
}

export function NewScanNotificationRecipientApiModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): NewScanNotificationRecipientApiModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'emails': !exists(json, 'Emails') ? undefined : json['Emails'],
        'excludedUsers': !exists(json, 'ExcludedUsers') ? undefined : json['ExcludedUsers'],
        'integrations': !exists(json, 'Integrations') ? undefined : json['Integrations'],
        'phoneNumbers': !exists(json, 'PhoneNumbers') ? undefined : json['PhoneNumbers'],
        'outsiderRecipients': !exists(json, 'OutsiderRecipients') ? undefined : json['OutsiderRecipients'],
        'specificEmailRecipients': !exists(json, 'SpecificEmailRecipients') ? undefined : json['SpecificEmailRecipients'],
        'specificSmsRecipients': !exists(json, 'SpecificSmsRecipients') ? undefined : json['SpecificSmsRecipients'],
    };
}

export function NewScanNotificationRecipientApiModelToJSON(value?: NewScanNotificationRecipientApiModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Emails': value.emails,
        'ExcludedUsers': value.excludedUsers,
        'Integrations': value.integrations,
        'PhoneNumbers': value.phoneNumbers,
        'OutsiderRecipients': value.outsiderRecipients,
        'SpecificEmailRecipients': value.specificEmailRecipients,
        'SpecificSmsRecipients': value.specificSmsRecipients,
    };
}

