/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * FormAuthenticationHashicorpVaultSetting
 * @export
 * @interface FormAuthenticationHashicorpVaultSecretSetting
 */
export interface FormAuthenticationHashicorpVaultSecretSetting {
    /**
     * Gets or sets the integration id.
     * @type {string}
     * @memberof FormAuthenticationHashicorpVaultSecretSetting
     */
    integrationId?: string;
    /**
     * Gets or sets the KV Secret engine version.
     * @type {string}
     * @memberof FormAuthenticationHashicorpVaultSecretSetting
     */
    version?: FormAuthenticationHashicorpVaultSecretSettingVersionEnum;
    /**
     * Gets or sets the secret engine.
     * @type {string}
     * @memberof FormAuthenticationHashicorpVaultSecretSetting
     */
    secretEngine?: string;
    /**
     * Gets or sets the secret.
     * @type {string}
     * @memberof FormAuthenticationHashicorpVaultSecretSetting
     */
    secret?: string;
    /**
     * Gets or sets the username is static or not.
     * @type {boolean}
     * @memberof FormAuthenticationHashicorpVaultSecretSetting
     */
    useStaticUsername?: boolean;
    /**
     * Gets or sets the static username.
     * @type {string}
     * @memberof FormAuthenticationHashicorpVaultSecretSetting
     */
    staticUsername?: string;
    /**
     * Gets or sets the username key.
     * @type {string}
     * @memberof FormAuthenticationHashicorpVaultSecretSetting
     */
    usernameKey?: string;
    /**
     * Gets or sets the password key.
     * @type {string}
     * @memberof FormAuthenticationHashicorpVaultSecretSetting
     */
    passwordKey?: string;
}


/**
 * @export
 */
export const FormAuthenticationHashicorpVaultSecretSettingVersionEnum = {
    V1: 'V1',
    V2: 'V2'
} as const;
export type FormAuthenticationHashicorpVaultSecretSettingVersionEnum = typeof FormAuthenticationHashicorpVaultSecretSettingVersionEnum[keyof typeof FormAuthenticationHashicorpVaultSecretSettingVersionEnum];


/**
 * Check if a given object implements the FormAuthenticationHashicorpVaultSecretSetting interface.
 */
export function instanceOfFormAuthenticationHashicorpVaultSecretSetting(value: object): boolean {
    return true;
}

export function FormAuthenticationHashicorpVaultSecretSettingFromJSON(json: any): FormAuthenticationHashicorpVaultSecretSetting {
    return FormAuthenticationHashicorpVaultSecretSettingFromJSONTyped(json, false);
}

export function FormAuthenticationHashicorpVaultSecretSettingFromJSONTyped(json: any, ignoreDiscriminator: boolean): FormAuthenticationHashicorpVaultSecretSetting {
    if (json == null) {
        return json;
    }
    return {
        
        'integrationId': json['IntegrationId'] == null ? undefined : json['IntegrationId'],
        'version': json['Version'] == null ? undefined : json['Version'],
        'secretEngine': json['SecretEngine'] == null ? undefined : json['SecretEngine'],
        'secret': json['Secret'] == null ? undefined : json['Secret'],
        'useStaticUsername': json['UseStaticUsername'] == null ? undefined : json['UseStaticUsername'],
        'staticUsername': json['StaticUsername'] == null ? undefined : json['StaticUsername'],
        'usernameKey': json['UsernameKey'] == null ? undefined : json['UsernameKey'],
        'passwordKey': json['PasswordKey'] == null ? undefined : json['PasswordKey'],
    };
}

export function FormAuthenticationHashicorpVaultSecretSettingToJSON(value?: FormAuthenticationHashicorpVaultSecretSetting | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'IntegrationId': value['integrationId'],
        'Version': value['version'],
        'SecretEngine': value['secretEngine'],
        'Secret': value['secret'],
        'UseStaticUsername': value['useStaticUsername'],
        'StaticUsername': value['staticUsername'],
        'UsernameKey': value['usernameKey'],
        'PasswordKey': value['passwordKey'],
    };
}

