/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ScanPolicyUserAgentModel } from './ScanPolicyUserAgentModel';
import {
    ScanPolicyUserAgentModelFromJSON,
    ScanPolicyUserAgentModelFromJSONTyped,
    ScanPolicyUserAgentModelToJSON,
} from './ScanPolicyUserAgentModel';

/**
 * Represents a model for carrying out HTTP request settings.
 * @export
 * @interface HttpRequestSettingModel
 */
export interface HttpRequestSettingModel {
    /**
     * Gets or sets the accept.
     * @type {string}
     * @memberof HttpRequestSettingModel
     */
    accept?: string;
    /**
     * Gets or sets the accept charset.
     * @type {string}
     * @memberof HttpRequestSettingModel
     */
    acceptCharset?: string;
    /**
     * Gets or sets the accept language.
     * @type {string}
     * @memberof HttpRequestSettingModel
     */
    acceptLanguage?: string;
    /**
     * Gets or sets a value indicating whether cookies are disabled.
     * @type {boolean}
     * @memberof HttpRequestSettingModel
     */
    enableCookies?: boolean;
    /**
     * Gets or sets a value indicating whether gzip and deflate is enabled.
     * @type {boolean}
     * @memberof HttpRequestSettingModel
     */
    enableGzipAndDeflate?: boolean;
    /**
     * Gets or sets a value indicating whether HTTP keep alive is enabled.
     * @type {boolean}
     * @memberof HttpRequestSettingModel
     */
    httpKeepAlive?: boolean;
    /**
     * Gets or sets a value indicating whether cookies are disabled.
     * @type {boolean}
     * @memberof HttpRequestSettingModel
     */
    logHttpRequests?: boolean;
    /**
     * Gets or sets the request count per unit time.
     * @type {number}
     * @memberof HttpRequestSettingModel
     */
    requestsPerSecond?: number;
    /**
     * Gets or sets the concurrent connection count.
     * @type {number}
     * @memberof HttpRequestSettingModel
     */
    concurrentConnectionCount?: number;
    /**
     * Gets or sets the request timeout in seconds.
     * @type {number}
     * @memberof HttpRequestSettingModel
     */
    requestTimeout?: number;
    /**
     * Gets or sets the connection timeout in seconds.
     * @type {number}
     * @memberof HttpRequestSettingModel
     */
    connectionTimeout?: number;
    /**
     * Gets the {Netsparker.Cloud.Infrastructure.Models.Policy.HttpRequestSettingModel.CustomUserAgent}. 's value
     * @type {string}
     * @memberof HttpRequestSettingModel
     */
    userAgent?: string;
    /**
     * Gets or sets the user agents.
     * @type {{ [key: string]: string; }}
     * @memberof HttpRequestSettingModel
     */
    userAgents?: { [key: string]: string; };
    /**
     * Gets or Sets custom user agents (not predefined)
     * @type {{ [key: string]: string; }}
     * @memberof HttpRequestSettingModel
     */
    customUserAgents?: { [key: string]: string; };
    /**
     * 
     * @type {ScanPolicyUserAgentModel}
     * @memberof HttpRequestSettingModel
     */
    customUserAgent?: ScanPolicyUserAgentModel;
    /**
     * Gets or sets a value indicating whether user agent forced.
     * @type {boolean}
     * @memberof HttpRequestSettingModel
     */
    forceUserAgent?: boolean;
    /**
     * Gets or sets Custom Http Authorization Header value
     * @type {string}
     * @memberof HttpRequestSettingModel
     */
    authorizationHeaderName?: string;
}

/**
 * Check if a given object implements the HttpRequestSettingModel interface.
 */
export function instanceOfHttpRequestSettingModel(value: object): boolean {
    return true;
}

export function HttpRequestSettingModelFromJSON(json: any): HttpRequestSettingModel {
    return HttpRequestSettingModelFromJSONTyped(json, false);
}

export function HttpRequestSettingModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): HttpRequestSettingModel {
    if (json == null) {
        return json;
    }
    return {
        
        'accept': json['Accept'] == null ? undefined : json['Accept'],
        'acceptCharset': json['AcceptCharset'] == null ? undefined : json['AcceptCharset'],
        'acceptLanguage': json['AcceptLanguage'] == null ? undefined : json['AcceptLanguage'],
        'enableCookies': json['EnableCookies'] == null ? undefined : json['EnableCookies'],
        'enableGzipAndDeflate': json['EnableGzipAndDeflate'] == null ? undefined : json['EnableGzipAndDeflate'],
        'httpKeepAlive': json['HttpKeepAlive'] == null ? undefined : json['HttpKeepAlive'],
        'logHttpRequests': json['LogHttpRequests'] == null ? undefined : json['LogHttpRequests'],
        'requestsPerSecond': json['RequestsPerSecond'] == null ? undefined : json['RequestsPerSecond'],
        'concurrentConnectionCount': json['ConcurrentConnectionCount'] == null ? undefined : json['ConcurrentConnectionCount'],
        'requestTimeout': json['RequestTimeout'] == null ? undefined : json['RequestTimeout'],
        'connectionTimeout': json['ConnectionTimeout'] == null ? undefined : json['ConnectionTimeout'],
        'userAgent': json['UserAgent'] == null ? undefined : json['UserAgent'],
        'userAgents': json['UserAgents'] == null ? undefined : json['UserAgents'],
        'customUserAgents': json['CustomUserAgents'] == null ? undefined : json['CustomUserAgents'],
        'customUserAgent': json['CustomUserAgent'] == null ? undefined : ScanPolicyUserAgentModelFromJSON(json['CustomUserAgent']),
        'forceUserAgent': json['ForceUserAgent'] == null ? undefined : json['ForceUserAgent'],
        'authorizationHeaderName': json['AuthorizationHeaderName'] == null ? undefined : json['AuthorizationHeaderName'],
    };
}

export function HttpRequestSettingModelToJSON(value?: HttpRequestSettingModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'Accept': value['accept'],
        'AcceptCharset': value['acceptCharset'],
        'AcceptLanguage': value['acceptLanguage'],
        'EnableCookies': value['enableCookies'],
        'EnableGzipAndDeflate': value['enableGzipAndDeflate'],
        'HttpKeepAlive': value['httpKeepAlive'],
        'LogHttpRequests': value['logHttpRequests'],
        'RequestsPerSecond': value['requestsPerSecond'],
        'ConcurrentConnectionCount': value['concurrentConnectionCount'],
        'RequestTimeout': value['requestTimeout'],
        'ConnectionTimeout': value['connectionTimeout'],
        'UserAgent': value['userAgent'],
        'UserAgents': value['userAgents'],
        'CustomUserAgents': value['customUserAgents'],
        'CustomUserAgent': ScanPolicyUserAgentModelToJSON(value['customUserAgent']),
        'ForceUserAgent': value['forceUserAgent'],
        'AuthorizationHeaderName': value['authorizationHeaderName'],
    };
}

