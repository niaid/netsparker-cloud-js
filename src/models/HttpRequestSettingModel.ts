/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ScanPolicyUserAgentModel } from './ScanPolicyUserAgentModel';
import {
    ScanPolicyUserAgentModelFromJSON,
    ScanPolicyUserAgentModelFromJSONTyped,
    ScanPolicyUserAgentModelToJSON,
} from './ScanPolicyUserAgentModel';

/**
 * Represents a model for carrying out HTTP request settings.
 * @export
 * @interface HttpRequestSettingModel
 */
export interface HttpRequestSettingModel {
    /**
     * Gets or sets the accept.
     * @type {string}
     * @memberof HttpRequestSettingModel
     */
    accept?: string;
    /**
     * Gets or sets the accept charset.
     * @type {string}
     * @memberof HttpRequestSettingModel
     */
    acceptCharset?: string;
    /**
     * Gets or sets the accept language.
     * @type {string}
     * @memberof HttpRequestSettingModel
     */
    acceptLanguage?: string;
    /**
     * Gets or sets a value indicating whether cookies are disabled.
     * @type {boolean}
     * @memberof HttpRequestSettingModel
     */
    enableCookies?: boolean;
    /**
     * Gets or sets a value indicating whether gzip and deflate is enabled.
     * @type {boolean}
     * @memberof HttpRequestSettingModel
     */
    enableGzipAndDeflate?: boolean;
    /**
     * Gets or sets a value indicating whether HTTP keep alive is enabled.
     * @type {boolean}
     * @memberof HttpRequestSettingModel
     */
    httpKeepAlive?: boolean;
    /**
     * Gets or sets a value indicating whether cookies are disabled.
     * @type {boolean}
     * @memberof HttpRequestSettingModel
     */
    logHttpRequests?: boolean;
    /**
     * Gets or sets the request count per unit time.
     * @type {number}
     * @memberof HttpRequestSettingModel
     */
    requestsPerSecond?: number;
    /**
     * Gets or sets the concurrent connection count.
     * @type {number}
     * @memberof HttpRequestSettingModel
     */
    concurrentConnectionCount?: number;
    /**
     * Gets or sets the request timeout in seconds.
     * @type {number}
     * @memberof HttpRequestSettingModel
     */
    requestTimeout?: number;
    /**
     * Gets or sets the connection timeout in seconds.
     * @type {number}
     * @memberof HttpRequestSettingModel
     */
    connectionTimeout?: number;
    /**
     * Gets the {Netsparker.Cloud.Infrastructure.Models.Policy.HttpRequestSettingModel.CustomUserAgent}. 's value
     * @type {string}
     * @memberof HttpRequestSettingModel
     */
    userAgent?: string;
    /**
     * Gets or sets the user agents.
     * @type {{ [key: string]: string; }}
     * @memberof HttpRequestSettingModel
     */
    userAgents?: { [key: string]: string; };
    /**
     * Gets or Sets custom user agents (not predefined)
     * @type {{ [key: string]: string; }}
     * @memberof HttpRequestSettingModel
     */
    customUserAgents?: { [key: string]: string; };
    /**
     * 
     * @type {ScanPolicyUserAgentModel}
     * @memberof HttpRequestSettingModel
     */
    customUserAgent?: ScanPolicyUserAgentModel;
    /**
     * Gets or sets a value indicating whether user agent forced.
     * @type {boolean}
     * @memberof HttpRequestSettingModel
     */
    forceUserAgent?: boolean;
    /**
     * Gets or sets Custom Http Authorization Header value
     * @type {string}
     * @memberof HttpRequestSettingModel
     */
    authorizationHeaderName?: string;
}

/**
 * Check if a given object implements the HttpRequestSettingModel interface.
 */
export function instanceOfHttpRequestSettingModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function HttpRequestSettingModelFromJSON(json: any): HttpRequestSettingModel {
    return HttpRequestSettingModelFromJSONTyped(json, false);
}

export function HttpRequestSettingModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): HttpRequestSettingModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accept': !exists(json, 'Accept') ? undefined : json['Accept'],
        'acceptCharset': !exists(json, 'AcceptCharset') ? undefined : json['AcceptCharset'],
        'acceptLanguage': !exists(json, 'AcceptLanguage') ? undefined : json['AcceptLanguage'],
        'enableCookies': !exists(json, 'EnableCookies') ? undefined : json['EnableCookies'],
        'enableGzipAndDeflate': !exists(json, 'EnableGzipAndDeflate') ? undefined : json['EnableGzipAndDeflate'],
        'httpKeepAlive': !exists(json, 'HttpKeepAlive') ? undefined : json['HttpKeepAlive'],
        'logHttpRequests': !exists(json, 'LogHttpRequests') ? undefined : json['LogHttpRequests'],
        'requestsPerSecond': !exists(json, 'RequestsPerSecond') ? undefined : json['RequestsPerSecond'],
        'concurrentConnectionCount': !exists(json, 'ConcurrentConnectionCount') ? undefined : json['ConcurrentConnectionCount'],
        'requestTimeout': !exists(json, 'RequestTimeout') ? undefined : json['RequestTimeout'],
        'connectionTimeout': !exists(json, 'ConnectionTimeout') ? undefined : json['ConnectionTimeout'],
        'userAgent': !exists(json, 'UserAgent') ? undefined : json['UserAgent'],
        'userAgents': !exists(json, 'UserAgents') ? undefined : json['UserAgents'],
        'customUserAgents': !exists(json, 'CustomUserAgents') ? undefined : json['CustomUserAgents'],
        'customUserAgent': !exists(json, 'CustomUserAgent') ? undefined : ScanPolicyUserAgentModelFromJSON(json['CustomUserAgent']),
        'forceUserAgent': !exists(json, 'ForceUserAgent') ? undefined : json['ForceUserAgent'],
        'authorizationHeaderName': !exists(json, 'AuthorizationHeaderName') ? undefined : json['AuthorizationHeaderName'],
    };
}

export function HttpRequestSettingModelToJSON(value?: HttpRequestSettingModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Accept': value.accept,
        'AcceptCharset': value.acceptCharset,
        'AcceptLanguage': value.acceptLanguage,
        'EnableCookies': value.enableCookies,
        'EnableGzipAndDeflate': value.enableGzipAndDeflate,
        'HttpKeepAlive': value.httpKeepAlive,
        'LogHttpRequests': value.logHttpRequests,
        'RequestsPerSecond': value.requestsPerSecond,
        'ConcurrentConnectionCount': value.concurrentConnectionCount,
        'RequestTimeout': value.requestTimeout,
        'ConnectionTimeout': value.connectionTimeout,
        'UserAgent': value.userAgent,
        'UserAgents': value.userAgents,
        'CustomUserAgents': value.customUserAgents,
        'CustomUserAgent': ScanPolicyUserAgentModelToJSON(value.customUserAgent),
        'ForceUserAgent': value.forceUserAgent,
        'AuthorizationHeaderName': value.authorizationHeaderName,
    };
}

