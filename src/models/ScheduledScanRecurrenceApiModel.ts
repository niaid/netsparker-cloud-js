/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Scheduled scan recurrence view model.
 * @export
 * @interface ScheduledScanRecurrenceApiModel
 */
export interface ScheduledScanRecurrenceApiModel {
    /**
     * The {Invicti.Dates.Recurring.Enums.RepeatTypes}.
     * @type {string}
     * @memberof ScheduledScanRecurrenceApiModel
     */
    repeatType?: ScheduledScanRecurrenceApiModelRepeatTypeEnum;
    /**
     * The interval.
     * @type {number}
     * @memberof ScheduledScanRecurrenceApiModel
     */
    interval?: number;
    /**
     * The ending type.
     * @type {string}
     * @memberof ScheduledScanRecurrenceApiModel
     */
    endingType?: ScheduledScanRecurrenceApiModelEndingTypeEnum;
    /**
     * The day of weeks.
     * @type {Array<string>}
     * @memberof ScheduledScanRecurrenceApiModel
     */
    daysOfWeek?: Array<ScheduledScanRecurrenceApiModelDaysOfWeekEnum>;
    /**
     * The months of year.
     * @type {Array<string>}
     * @memberof ScheduledScanRecurrenceApiModel
     */
    monthsOfYear?: Array<ScheduledScanRecurrenceApiModelMonthsOfYearEnum>;
    /**
     * The ordinals.
     * @type {string}
     * @memberof ScheduledScanRecurrenceApiModel
     */
    ordinal?: ScheduledScanRecurrenceApiModelOrdinalEnum;
    /**
     * The ending date.
     * @type {string}
     * @memberof ScheduledScanRecurrenceApiModel
     */
    endOn?: string;
    /**
     * The limit of the scheduled scan executions.
     * @type {number}
     * @memberof ScheduledScanRecurrenceApiModel
     */
    endOnOccurences?: number;
    /**
     * The day of month.
     * @type {number}
     * @memberof ScheduledScanRecurrenceApiModel
     */
    dayOfMonth?: number;
    /**
     * The recurrence builder.
     * @type {string}
     * @memberof ScheduledScanRecurrenceApiModel
     */
    dayOfWeek?: ScheduledScanRecurrenceApiModelDayOfWeekEnum;
}

/**
* @export
* @enum {string}
*/
export enum ScheduledScanRecurrenceApiModelRepeatTypeEnum {
    Days = 'Days',
    Weeks = 'Weeks',
    Months = 'Months',
    Years = 'Years'
}
/**
* @export
* @enum {string}
*/
export enum ScheduledScanRecurrenceApiModelEndingTypeEnum {
    Never = 'Never',
    Date = 'Date',
    Occurences = 'Occurences'
}
/**
* @export
* @enum {string}
*/
export enum ScheduledScanRecurrenceApiModelDaysOfWeekEnum {
    Sunday = 'Sunday',
    Monday = 'Monday',
    Tuesday = 'Tuesday',
    Wednesday = 'Wednesday',
    Thursday = 'Thursday',
    Friday = 'Friday',
    Saturday = 'Saturday'
}
/**
* @export
* @enum {string}
*/
export enum ScheduledScanRecurrenceApiModelMonthsOfYearEnum {
    January = 'January',
    February = 'February',
    March = 'March',
    April = 'April',
    May = 'May',
    June = 'June',
    July = 'July',
    August = 'August',
    September = 'September',
    October = 'October',
    November = 'November',
    December = 'December'
}
/**
* @export
* @enum {string}
*/
export enum ScheduledScanRecurrenceApiModelOrdinalEnum {
    First = 'First',
    Second = 'Second',
    Third = 'Third',
    Fourth = 'Fourth',
    Last = 'Last'
}
/**
* @export
* @enum {string}
*/
export enum ScheduledScanRecurrenceApiModelDayOfWeekEnum {
    Sunday = 'Sunday',
    Monday = 'Monday',
    Tuesday = 'Tuesday',
    Wednesday = 'Wednesday',
    Thursday = 'Thursday',
    Friday = 'Friday',
    Saturday = 'Saturday'
}


/**
 * Check if a given object implements the ScheduledScanRecurrenceApiModel interface.
 */
export function instanceOfScheduledScanRecurrenceApiModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ScheduledScanRecurrenceApiModelFromJSON(json: any): ScheduledScanRecurrenceApiModel {
    return ScheduledScanRecurrenceApiModelFromJSONTyped(json, false);
}

export function ScheduledScanRecurrenceApiModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScheduledScanRecurrenceApiModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'repeatType': !exists(json, 'RepeatType') ? undefined : json['RepeatType'],
        'interval': !exists(json, 'Interval') ? undefined : json['Interval'],
        'endingType': !exists(json, 'EndingType') ? undefined : json['EndingType'],
        'daysOfWeek': !exists(json, 'DaysOfWeek') ? undefined : json['DaysOfWeek'],
        'monthsOfYear': !exists(json, 'MonthsOfYear') ? undefined : json['MonthsOfYear'],
        'ordinal': !exists(json, 'Ordinal') ? undefined : json['Ordinal'],
        'endOn': !exists(json, 'EndOn') ? undefined : json['EndOn'],
        'endOnOccurences': !exists(json, 'EndOnOccurences') ? undefined : json['EndOnOccurences'],
        'dayOfMonth': !exists(json, 'DayOfMonth') ? undefined : json['DayOfMonth'],
        'dayOfWeek': !exists(json, 'DayOfWeek') ? undefined : json['DayOfWeek'],
    };
}

export function ScheduledScanRecurrenceApiModelToJSON(value?: ScheduledScanRecurrenceApiModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'RepeatType': value.repeatType,
        'Interval': value.interval,
        'EndingType': value.endingType,
        'DaysOfWeek': value.daysOfWeek,
        'MonthsOfYear': value.monthsOfYear,
        'Ordinal': value.ordinal,
        'EndOn': value.endOn,
        'EndOnOccurences': value.endOnOccurences,
        'DayOfMonth': value.dayOfMonth,
        'DayOfWeek': value.dayOfWeek,
    };
}

