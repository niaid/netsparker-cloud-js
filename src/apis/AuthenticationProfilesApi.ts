/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AuthenticationProfileViewModel,
} from '../models/index';
import {
    AuthenticationProfileViewModelFromJSON,
    AuthenticationProfileViewModelToJSON,
} from '../models/index';

export interface AuthenticationProfilesDeleteRequest {
    id: string;
}

export interface AuthenticationProfilesGetRequest {
    id: string;
}

export interface AuthenticationProfilesNewRequest {
    model: AuthenticationProfileViewModel;
}

export interface AuthenticationProfilesUpdateRequest {
    model: AuthenticationProfileViewModel;
}

/**
 * 
 */
export class AuthenticationProfilesApi extends runtime.BaseAPI {

    /**
     * Deletes an authentication profile.
     */
    async authenticationProfilesDeleteRaw(requestParameters: AuthenticationProfilesDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling authenticationProfilesDelete().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/1.0/authenticationprofiles/delete`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['id'] as any,
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<string>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * Deletes an authentication profile.
     */
    async authenticationProfilesDelete(requestParameters: AuthenticationProfilesDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string> {
        const response = await this.authenticationProfilesDeleteRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Gets the authentication profiles by the specified id.
     */
    async authenticationProfilesGetRaw(requestParameters: AuthenticationProfilesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AuthenticationProfileViewModel>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling authenticationProfilesGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/1.0/authenticationprofiles/get/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AuthenticationProfileViewModelFromJSON(jsonValue));
    }

    /**
     * Gets the authentication profiles by the specified id.
     */
    async authenticationProfilesGet(requestParameters: AuthenticationProfilesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AuthenticationProfileViewModel> {
        const response = await this.authenticationProfilesGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Gets the list of authentication profiles.
     */
    async authenticationProfilesGetAllRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AuthenticationProfileViewModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/1.0/authenticationprofiles/getall`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AuthenticationProfileViewModelFromJSON(jsonValue));
    }

    /**
     * Gets the list of authentication profiles.
     */
    async authenticationProfilesGetAll(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AuthenticationProfileViewModel> {
        const response = await this.authenticationProfilesGetAllRaw(initOverrides);
        return await response.value();
    }

    /**
     * Creates a new authentication profile.
     */
    async authenticationProfilesNewRaw(requestParameters: AuthenticationProfilesNewRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AuthenticationProfileViewModel>> {
        if (requestParameters['model'] == null) {
            throw new runtime.RequiredError(
                'model',
                'Required parameter "model" was null or undefined when calling authenticationProfilesNew().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/1.0/authenticationprofiles/new`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AuthenticationProfileViewModelToJSON(requestParameters['model']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AuthenticationProfileViewModelFromJSON(jsonValue));
    }

    /**
     * Creates a new authentication profile.
     */
    async authenticationProfilesNew(requestParameters: AuthenticationProfilesNewRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AuthenticationProfileViewModel> {
        const response = await this.authenticationProfilesNewRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Updates an authentication profile.
     */
    async authenticationProfilesUpdateRaw(requestParameters: AuthenticationProfilesUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AuthenticationProfileViewModel>> {
        if (requestParameters['model'] == null) {
            throw new runtime.RequiredError(
                'model',
                'Required parameter "model" was null or undefined when calling authenticationProfilesUpdate().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/1.0/authenticationprofiles/update`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AuthenticationProfileViewModelToJSON(requestParameters['model']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AuthenticationProfileViewModelFromJSON(jsonValue));
    }

    /**
     * Updates an authentication profile.
     */
    async authenticationProfilesUpdate(requestParameters: AuthenticationProfilesUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AuthenticationProfileViewModel> {
        const response = await this.authenticationProfilesUpdateRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
