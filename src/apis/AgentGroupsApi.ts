/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AgentGroupApiDeleteModel,
  AgentGroupApiNewModel,
  AgentGroupApiUpdateModel,
  AgentGroupModel,
  AgentGroupsListApiResult,
} from '../models/index';
import {
    AgentGroupApiDeleteModelFromJSON,
    AgentGroupApiDeleteModelToJSON,
    AgentGroupApiNewModelFromJSON,
    AgentGroupApiNewModelToJSON,
    AgentGroupApiUpdateModelFromJSON,
    AgentGroupApiUpdateModelToJSON,
    AgentGroupModelFromJSON,
    AgentGroupModelToJSON,
    AgentGroupsListApiResultFromJSON,
    AgentGroupsListApiResultToJSON,
} from '../models/index';

export interface AgentGroupsDeleteRequest {
    model: AgentGroupApiDeleteModel;
}

export interface AgentGroupsListRequest {
    page?: number;
    pageSize?: number;
}

export interface AgentGroupsNewRequest {
    model: AgentGroupApiNewModel;
}

export interface AgentGroupsUpdateRequest {
    model: AgentGroupApiUpdateModel;
}

/**
 * 
 */
export class AgentGroupsApi extends runtime.BaseAPI {

    /**
     * Deletes the agent group
     */
    async agentGroupsDeleteRaw(requestParameters: AgentGroupsDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        if (requestParameters.model === null || requestParameters.model === undefined) {
            throw new runtime.RequiredError('model','Required parameter requestParameters.model was null or undefined when calling agentGroupsDelete.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/1.0/agentgroups/delete`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AgentGroupApiDeleteModelToJSON(requestParameters.model),
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * Deletes the agent group
     */
    async agentGroupsDelete(requestParameters: AgentGroupsDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.agentGroupsDeleteRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Gets the list of agent groups.
     */
    async agentGroupsListRaw(requestParameters: AgentGroupsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AgentGroupsListApiResult>> {
        const queryParameters: any = {};

        if (requestParameters.page !== undefined) {
            queryParameters['page'] = requestParameters.page;
        }

        if (requestParameters.pageSize !== undefined) {
            queryParameters['pageSize'] = requestParameters.pageSize;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/1.0/agentgroups/list`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AgentGroupsListApiResultFromJSON(jsonValue));
    }

    /**
     * Gets the list of agent groups.
     */
    async agentGroupsList(requestParameters: AgentGroupsListRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AgentGroupsListApiResult> {
        const response = await this.agentGroupsListRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Creates a new agent group
     */
    async agentGroupsNewRaw(requestParameters: AgentGroupsNewRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AgentGroupModel>> {
        if (requestParameters.model === null || requestParameters.model === undefined) {
            throw new runtime.RequiredError('model','Required parameter requestParameters.model was null or undefined when calling agentGroupsNew.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/1.0/agentgroups/new`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AgentGroupApiNewModelToJSON(requestParameters.model),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AgentGroupModelFromJSON(jsonValue));
    }

    /**
     * Creates a new agent group
     */
    async agentGroupsNew(requestParameters: AgentGroupsNewRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AgentGroupModel> {
        const response = await this.agentGroupsNewRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Updates the agent group
     */
    async agentGroupsUpdateRaw(requestParameters: AgentGroupsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AgentGroupModel>> {
        if (requestParameters.model === null || requestParameters.model === undefined) {
            throw new runtime.RequiredError('model','Required parameter requestParameters.model was null or undefined when calling agentGroupsUpdate.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/1.0/agentgroups/update`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AgentGroupApiUpdateModelToJSON(requestParameters.model),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AgentGroupModelFromJSON(jsonValue));
    }

    /**
     * Updates the agent group
     */
    async agentGroupsUpdate(requestParameters: AgentGroupsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AgentGroupModel> {
        const response = await this.agentGroupsUpdateRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
