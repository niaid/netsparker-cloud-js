"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AgentGroupsApi = void 0;
const runtime = __importStar(require("../runtime"));
const index_1 = require("../models/index");
/**
 *
 */
class AgentGroupsApi extends runtime.BaseAPI {
    /**
     * Deletes the agent group
     */
    async agentGroupsDeleteRaw(requestParameters, initOverrides) {
        if (requestParameters.model === null || requestParameters.model === undefined) {
            throw new runtime.RequiredError('model', 'Required parameter requestParameters.model was null or undefined when calling agentGroupsDelete.');
        }
        const queryParameters = {};
        const headerParameters = {};
        headerParameters['Content-Type'] = 'application/json';
        const response = await this.request({
            path: `/api/1.0/agentgroups/delete`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: (0, index_1.AgentGroupApiDeleteModelToJSON)(requestParameters.model),
        }, initOverrides);
        return new runtime.JSONApiResponse(response);
    }
    /**
     * Deletes the agent group
     */
    async agentGroupsDelete(requestParameters, initOverrides) {
        const response = await this.agentGroupsDeleteRaw(requestParameters, initOverrides);
        return await response.value();
    }
    /**
     * Gets the list of agent groups.
     */
    async agentGroupsListRaw(requestParameters, initOverrides) {
        const queryParameters = {};
        if (requestParameters.page !== undefined) {
            queryParameters['page'] = requestParameters.page;
        }
        if (requestParameters.pageSize !== undefined) {
            queryParameters['pageSize'] = requestParameters.pageSize;
        }
        const headerParameters = {};
        const response = await this.request({
            path: `/api/1.0/agentgroups/list`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.AgentGroupsListApiResultFromJSON)(jsonValue));
    }
    /**
     * Gets the list of agent groups.
     */
    async agentGroupsList(requestParameters = {}, initOverrides) {
        const response = await this.agentGroupsListRaw(requestParameters, initOverrides);
        return await response.value();
    }
    /**
     * Creates a new agent group
     */
    async agentGroupsNewRaw(requestParameters, initOverrides) {
        if (requestParameters.model === null || requestParameters.model === undefined) {
            throw new runtime.RequiredError('model', 'Required parameter requestParameters.model was null or undefined when calling agentGroupsNew.');
        }
        const queryParameters = {};
        const headerParameters = {};
        headerParameters['Content-Type'] = 'application/json';
        const response = await this.request({
            path: `/api/1.0/agentgroups/new`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: (0, index_1.AgentGroupApiNewModelToJSON)(requestParameters.model),
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.AgentGroupModelFromJSON)(jsonValue));
    }
    /**
     * Creates a new agent group
     */
    async agentGroupsNew(requestParameters, initOverrides) {
        const response = await this.agentGroupsNewRaw(requestParameters, initOverrides);
        return await response.value();
    }
    /**
     * Updates the agent group
     */
    async agentGroupsUpdateRaw(requestParameters, initOverrides) {
        if (requestParameters.model === null || requestParameters.model === undefined) {
            throw new runtime.RequiredError('model', 'Required parameter requestParameters.model was null or undefined when calling agentGroupsUpdate.');
        }
        const queryParameters = {};
        const headerParameters = {};
        headerParameters['Content-Type'] = 'application/json';
        const response = await this.request({
            path: `/api/1.0/agentgroups/update`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: (0, index_1.AgentGroupApiUpdateModelToJSON)(requestParameters.model),
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.AgentGroupModelFromJSON)(jsonValue));
    }
    /**
     * Updates the agent group
     */
    async agentGroupsUpdate(requestParameters, initOverrides) {
        const response = await this.agentGroupsUpdateRaw(requestParameters, initOverrides);
        return await response.value();
    }
}
exports.AgentGroupsApi = AgentGroupsApi;
//# sourceMappingURL=AgentGroupsApi.js.map