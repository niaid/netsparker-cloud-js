/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { DeleteScanNotificationApiModel, NewScanNotificationApiModel, NotificationPriorityPair, ScanNotificationApiModel, ScanNotificationListApiResult, ScanNotificationScanTaskGroupApiModel, UpdateScanNotificationApiModel } from '../models/index';
export interface NotificationsApiNotificationsDeleteRequest {
    model: DeleteScanNotificationApiModel;
}
export interface NotificationsApiNotificationsGetRequest {
    id: string;
}
export interface NotificationsApiNotificationsGetPrioritiesRequest {
    event: NotificationsGetPrioritiesEventEnum;
}
export interface NotificationsApiNotificationsGetScanGroupsRequest {
    websiteId: string;
}
export interface NotificationsApiNotificationsListRequest {
    page?: number;
    pageSize?: number;
}
export interface NotificationsApiNotificationsNewRequest {
    model: NewScanNotificationApiModel;
}
export interface NotificationsApiNotificationsSetPrioritiesRequest {
    priorities: Array<NotificationPriorityPair>;
}
export interface NotificationsApiNotificationsUpdateRequest {
    model: UpdateScanNotificationApiModel;
}
/**
 *
 */
export declare class NotificationsApi extends runtime.BaseAPI {
    /**
     * Deletes an existing scan notification definition.
     */
    notificationsDeleteRaw(requestParameters: NotificationsApiNotificationsDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Deletes an existing scan notification definition.
     */
    notificationsDelete(requestParameters: NotificationsApiNotificationsDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Gets the notification.
     */
    notificationsGetRaw(requestParameters: NotificationsApiNotificationsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ScanNotificationApiModel>>;
    /**
     * Gets the notification.
     */
    notificationsGet(requestParameters: NotificationsApiNotificationsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ScanNotificationApiModel>;
    /**
     * Gets the list of notifications grouped by their Scopes and ordered by priorities for the given event.
     */
    notificationsGetPrioritiesRaw(requestParameters: NotificationsApiNotificationsGetPrioritiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ScanNotificationApiModel>>;
    /**
     * Gets the list of notifications grouped by their Scopes and ordered by priorities for the given event.
     */
    notificationsGetPriorities(requestParameters: NotificationsApiNotificationsGetPrioritiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ScanNotificationApiModel>;
    /**
     * Gets the scan groups of website.
     */
    notificationsGetScanGroupsRaw(requestParameters: NotificationsApiNotificationsGetScanGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ScanNotificationScanTaskGroupApiModel>>;
    /**
     * Gets the scan groups of website.
     */
    notificationsGetScanGroups(requestParameters: NotificationsApiNotificationsGetScanGroupsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ScanNotificationScanTaskGroupApiModel>;
    /**
     * Gets the list of notifications.
     */
    notificationsListRaw(requestParameters: NotificationsApiNotificationsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ScanNotificationListApiResult>>;
    /**
     * Gets the list of notifications.
     */
    notificationsList(requestParameters?: NotificationsApiNotificationsListRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ScanNotificationListApiResult>;
    /**
     * Creates a new scan notification definition.
     */
    notificationsNewRaw(requestParameters: NotificationsApiNotificationsNewRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ScanNotificationApiModel>>;
    /**
     * Creates a new scan notification definition.
     */
    notificationsNew(requestParameters: NotificationsApiNotificationsNewRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ScanNotificationApiModel>;
    /**
     * Sets the priorities of notifications.
     */
    notificationsSetPrioritiesRaw(requestParameters: NotificationsApiNotificationsSetPrioritiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Sets the priorities of notifications.
     */
    notificationsSetPriorities(requestParameters: NotificationsApiNotificationsSetPrioritiesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Updates an existing scan notification definition.
     */
    notificationsUpdateRaw(requestParameters: NotificationsApiNotificationsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ScanNotificationApiModel>>;
    /**
     * Updates an existing scan notification definition.
     */
    notificationsUpdate(requestParameters: NotificationsApiNotificationsUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ScanNotificationApiModel>;
}
/**
  * @export
  * @enum {string}
  */
export declare enum NotificationsGetPrioritiesEventEnum {
    NewScan = "NewScan",
    ScanCompleted = "ScanCompleted",
    ScanCancelled = "ScanCancelled",
    ScanFailed = "ScanFailed",
    ScheduledScanLaunchFailed = "ScheduledScanLaunchFailed",
    OutOfDateTechnology = "OutOfDateTechnology"
}
