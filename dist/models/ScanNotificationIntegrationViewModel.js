/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists } from '../runtime';
import { AsanaIntegrationInfoModelFromJSON, AsanaIntegrationInfoModelToJSON, } from './AsanaIntegrationInfoModel';
import { AzureDevOpsIntegrationInfoModelFromJSON, AzureDevOpsIntegrationInfoModelToJSON, } from './AzureDevOpsIntegrationInfoModel';
import { AzureKeyVaultIntegrationInfoModelFromJSON, AzureKeyVaultIntegrationInfoModelToJSON, } from './AzureKeyVaultIntegrationInfoModel';
import { BitbucketIntegrationInfoModelFromJSON, BitbucketIntegrationInfoModelToJSON, } from './BitbucketIntegrationInfoModel';
import { BugzillaIntegrationInfoModelFromJSON, BugzillaIntegrationInfoModelToJSON, } from './BugzillaIntegrationInfoModel';
import { ClubhouseIntegrationInfoModelFromJSON, ClubhouseIntegrationInfoModelToJSON, } from './ClubhouseIntegrationInfoModel';
import { CyberArkVaultIntegrationInfoModelFromJSON, CyberArkVaultIntegrationInfoModelToJSON, } from './CyberArkVaultIntegrationInfoModel';
import { DefectDojoIntegrationInfoModelFromJSON, DefectDojoIntegrationInfoModelToJSON, } from './DefectDojoIntegrationInfoModel';
import { FogBugzIntegrationInfoModelFromJSON, FogBugzIntegrationInfoModelToJSON, } from './FogBugzIntegrationInfoModel';
import { FreshserviceIntegrationInfoModelFromJSON, FreshserviceIntegrationInfoModelToJSON, } from './FreshserviceIntegrationInfoModel';
import { GitHubIntegrationInfoModelFromJSON, GitHubIntegrationInfoModelToJSON, } from './GitHubIntegrationInfoModel';
import { GitLabIntegrationInfoModelFromJSON, GitLabIntegrationInfoModelToJSON, } from './GitLabIntegrationInfoModel';
import { HashicorpVaultIntegrationInfoModelFromJSON, HashicorpVaultIntegrationInfoModelToJSON, } from './HashicorpVaultIntegrationInfoModel';
import { IntegrationCustomFieldVmFromJSON, IntegrationCustomFieldVmToJSON, } from './IntegrationCustomFieldVm';
import { JazzTeamIntegrationInfoModelFromJSON, JazzTeamIntegrationInfoModelToJSON, } from './JazzTeamIntegrationInfoModel';
import { JiraIntegrationInfoModelFromJSON, JiraIntegrationInfoModelToJSON, } from './JiraIntegrationInfoModel';
import { KafkaIntegrationInfoModelFromJSON, KafkaIntegrationInfoModelToJSON, } from './KafkaIntegrationInfoModel';
import { KennaIntegrationInfoModelFromJSON, KennaIntegrationInfoModelToJSON, } from './KennaIntegrationInfoModel';
import { MattermostIntegrationInfoModelFromJSON, MattermostIntegrationInfoModelToJSON, } from './MattermostIntegrationInfoModel';
import { MicrosoftTeamsIntegrationInfoModelFromJSON, MicrosoftTeamsIntegrationInfoModelToJSON, } from './MicrosoftTeamsIntegrationInfoModel';
import { PagerDutyIntegrationInfoModelFromJSON, PagerDutyIntegrationInfoModelToJSON, } from './PagerDutyIntegrationInfoModel';
import { PivotalTrackerIntegrationInfoModelFromJSON, PivotalTrackerIntegrationInfoModelToJSON, } from './PivotalTrackerIntegrationInfoModel';
import { RedmineIntegrationInfoModelFromJSON, RedmineIntegrationInfoModelToJSON, } from './RedmineIntegrationInfoModel';
import { ServiceNowIntegrationInfoModelFromJSON, ServiceNowIntegrationInfoModelToJSON, } from './ServiceNowIntegrationInfoModel';
import { ServiceNowVRMModelFromJSON, ServiceNowVRMModelToJSON, } from './ServiceNowVRMModel';
import { SlackIntegrationInfoModelFromJSON, SlackIntegrationInfoModelToJSON, } from './SlackIntegrationInfoModel';
import { TFSIntegrationInfoModelFromJSON, TFSIntegrationInfoModelToJSON, } from './TFSIntegrationInfoModel';
import { TrelloIntegrationInfoModelFromJSON, TrelloIntegrationInfoModelToJSON, } from './TrelloIntegrationInfoModel';
import { UnfuddleIntegrationInfoModelFromJSON, UnfuddleIntegrationInfoModelToJSON, } from './UnfuddleIntegrationInfoModel';
import { WebhookIntegrationInfoModelFromJSON, WebhookIntegrationInfoModelToJSON, } from './WebhookIntegrationInfoModel';
import { YouTrackIntegrationInfoModelFromJSON, YouTrackIntegrationInfoModelToJSON, } from './YouTrackIntegrationInfoModel';
import { ZapierIntegrationInfoModelFromJSON, ZapierIntegrationInfoModelToJSON, } from './ZapierIntegrationInfoModel';
/**
 * @export
 */
export const ScanNotificationIntegrationViewModelTypeEnum = {
    Jira: 'Jira',
    GitHub: 'GitHub',
    Tfs: 'TFS',
    FogBugz: 'FogBugz',
    ServiceNow: 'ServiceNow',
    Slack: 'Slack',
    GitLab: 'GitLab',
    Bitbucket: 'Bitbucket',
    Unfuddle: 'Unfuddle',
    Zapier: 'Zapier',
    AzureDevOps: 'AzureDevOps',
    Redmine: 'Redmine',
    Bugzilla: 'Bugzilla',
    Kafka: 'Kafka',
    PagerDuty: 'PagerDuty',
    MicrosoftTeams: 'MicrosoftTeams',
    Clubhouse: 'Clubhouse',
    Trello: 'Trello',
    Asana: 'Asana',
    Webhook: 'Webhook',
    Kenna: 'Kenna',
    Freshservice: 'Freshservice',
    YouTrack: 'YouTrack',
    NetsparkerEnterprise: 'NetsparkerEnterprise',
    Splunk: 'Splunk',
    Mattermost: 'Mattermost',
    Hashicorp: 'Hashicorp',
    PivotalTracker: 'PivotalTracker',
    CyberArk: 'CyberArk',
    DefectDojo: 'DefectDojo',
    JazzTeam: 'JazzTeam',
    AzureKeyVault: 'AzureKeyVault',
    ServiceNowVrm: 'ServiceNowVRM'
};
/**
 * @export
 */
export const ScanNotificationIntegrationViewModelCategoryEnum = {
    IssueTrackingSystem: 'IssueTrackingSystem',
    TeamMessagingSystem: 'TeamMessagingSystem',
    SecretsAndEncryptionManagement: 'SecretsAndEncryptionManagement'
};
/**
 * Check if a given object implements the ScanNotificationIntegrationViewModel interface.
 */
export function instanceOfScanNotificationIntegrationViewModel(value) {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    return isInstance;
}
export function ScanNotificationIntegrationViewModelFromJSON(json) {
    return ScanNotificationIntegrationViewModelFromJSONTyped(json, false);
}
export function ScanNotificationIntegrationViewModelFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'id': !exists(json, 'Id') ? undefined : json['Id'],
        'name': json['Name'],
        'notFound': !exists(json, 'NotFound') ? undefined : json['NotFound'],
        'type': !exists(json, 'Type') ? undefined : json['Type'],
        'category': !exists(json, 'Category') ? undefined : json['Category'],
        'asanaInfo': !exists(json, 'AsanaInfo') ? undefined : AsanaIntegrationInfoModelFromJSON(json['AsanaInfo']),
        'azureDevopsInfo': !exists(json, 'AzureDevopsInfo') ? undefined : AzureDevOpsIntegrationInfoModelFromJSON(json['AzureDevopsInfo']),
        'bitbucketInfo': !exists(json, 'BitbucketInfo') ? undefined : BitbucketIntegrationInfoModelFromJSON(json['BitbucketInfo']),
        'bugzilla': !exists(json, 'Bugzilla') ? undefined : BugzillaIntegrationInfoModelFromJSON(json['Bugzilla']),
        'pagerDutyInfo': !exists(json, 'PagerDutyInfo') ? undefined : PagerDutyIntegrationInfoModelFromJSON(json['PagerDutyInfo']),
        'redmineInfo': !exists(json, 'RedmineInfo') ? undefined : RedmineIntegrationInfoModelFromJSON(json['RedmineInfo']),
        'serviceNowInfo': !exists(json, 'ServiceNowInfo') ? undefined : ServiceNowIntegrationInfoModelFromJSON(json['ServiceNowInfo']),
        'serviceNowVRMInfo': !exists(json, 'ServiceNowVRMInfo') ? undefined : ServiceNowVRMModelFromJSON(json['ServiceNowVRMInfo']),
        'slackInfo': !exists(json, 'SlackInfo') ? undefined : SlackIntegrationInfoModelFromJSON(json['SlackInfo']),
        'mattermostInfo': !exists(json, 'MattermostInfo') ? undefined : MattermostIntegrationInfoModelFromJSON(json['MattermostInfo']),
        'tFSInfo': !exists(json, 'TFSInfo') ? undefined : TFSIntegrationInfoModelFromJSON(json['TFSInfo']),
        'trelloInfo': !exists(json, 'TrelloInfo') ? undefined : TrelloIntegrationInfoModelFromJSON(json['TrelloInfo']),
        'unfuddleInfo': !exists(json, 'UnfuddleInfo') ? undefined : UnfuddleIntegrationInfoModelFromJSON(json['UnfuddleInfo']),
        'webhookInfo': !exists(json, 'WebhookInfo') ? undefined : WebhookIntegrationInfoModelFromJSON(json['WebhookInfo']),
        'zapierInfo': !exists(json, 'ZapierInfo') ? undefined : ZapierIntegrationInfoModelFromJSON(json['ZapierInfo']),
        'vaultInfo': !exists(json, 'VaultInfo') ? undefined : HashicorpVaultIntegrationInfoModelFromJSON(json['VaultInfo']),
        'cyberArkVaultInfo': !exists(json, 'CyberArkVaultInfo') ? undefined : CyberArkVaultIntegrationInfoModelFromJSON(json['CyberArkVaultInfo']),
        'azureVaultInfo': !exists(json, 'AzureVaultInfo') ? undefined : AzureKeyVaultIntegrationInfoModelFromJSON(json['AzureVaultInfo']),
        'jazzTeamInfo': !exists(json, 'JazzTeamInfo') ? undefined : JazzTeamIntegrationInfoModelFromJSON(json['JazzTeamInfo']),
        'clubhouseInfo': !exists(json, 'ClubhouseInfo') ? undefined : ClubhouseIntegrationInfoModelFromJSON(json['ClubhouseInfo']),
        'pivotalTrackerInfo': !exists(json, 'PivotalTrackerInfo') ? undefined : PivotalTrackerIntegrationInfoModelFromJSON(json['PivotalTrackerInfo']),
        'customFields': !exists(json, 'CustomFields') ? undefined : (json['CustomFields'].map(IntegrationCustomFieldVmFromJSON)),
        'defectDojoInfo': !exists(json, 'DefectDojoInfo') ? undefined : DefectDojoIntegrationInfoModelFromJSON(json['DefectDojoInfo']),
        'fogBugzInfo': !exists(json, 'FogBugzInfo') ? undefined : FogBugzIntegrationInfoModelFromJSON(json['FogBugzInfo']),
        'gitHubInfo': !exists(json, 'GitHubInfo') ? undefined : GitHubIntegrationInfoModelFromJSON(json['GitHubInfo']),
        'gitLabInfo': !exists(json, 'GitLabInfo') ? undefined : GitLabIntegrationInfoModelFromJSON(json['GitLabInfo']),
        'jiraInfo': !exists(json, 'JiraInfo') ? undefined : JiraIntegrationInfoModelFromJSON(json['JiraInfo']),
        'kafkaInfo': !exists(json, 'KafkaInfo') ? undefined : KafkaIntegrationInfoModelFromJSON(json['KafkaInfo']),
        'kennaInfo': !exists(json, 'KennaInfo') ? undefined : KennaIntegrationInfoModelFromJSON(json['KennaInfo']),
        'freshserviceInfo': !exists(json, 'FreshserviceInfo') ? undefined : FreshserviceIntegrationInfoModelFromJSON(json['FreshserviceInfo']),
        'youTrackInfo': !exists(json, 'YouTrackInfo') ? undefined : YouTrackIntegrationInfoModelFromJSON(json['YouTrackInfo']),
        'microsoftTeamsInfo': !exists(json, 'MicrosoftTeamsInfo') ? undefined : MicrosoftTeamsIntegrationInfoModelFromJSON(json['MicrosoftTeamsInfo']),
    };
}
export function ScanNotificationIntegrationViewModelToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'Id': value.id,
        'Name': value.name,
        'NotFound': value.notFound,
        'Type': value.type,
        'AsanaInfo': AsanaIntegrationInfoModelToJSON(value.asanaInfo),
        'AzureDevopsInfo': AzureDevOpsIntegrationInfoModelToJSON(value.azureDevopsInfo),
        'BitbucketInfo': BitbucketIntegrationInfoModelToJSON(value.bitbucketInfo),
        'Bugzilla': BugzillaIntegrationInfoModelToJSON(value.bugzilla),
        'PagerDutyInfo': PagerDutyIntegrationInfoModelToJSON(value.pagerDutyInfo),
        'RedmineInfo': RedmineIntegrationInfoModelToJSON(value.redmineInfo),
        'ServiceNowInfo': ServiceNowIntegrationInfoModelToJSON(value.serviceNowInfo),
        'ServiceNowVRMInfo': ServiceNowVRMModelToJSON(value.serviceNowVRMInfo),
        'SlackInfo': SlackIntegrationInfoModelToJSON(value.slackInfo),
        'MattermostInfo': MattermostIntegrationInfoModelToJSON(value.mattermostInfo),
        'TFSInfo': TFSIntegrationInfoModelToJSON(value.tFSInfo),
        'TrelloInfo': TrelloIntegrationInfoModelToJSON(value.trelloInfo),
        'UnfuddleInfo': UnfuddleIntegrationInfoModelToJSON(value.unfuddleInfo),
        'WebhookInfo': WebhookIntegrationInfoModelToJSON(value.webhookInfo),
        'ZapierInfo': ZapierIntegrationInfoModelToJSON(value.zapierInfo),
        'VaultInfo': HashicorpVaultIntegrationInfoModelToJSON(value.vaultInfo),
        'CyberArkVaultInfo': CyberArkVaultIntegrationInfoModelToJSON(value.cyberArkVaultInfo),
        'AzureVaultInfo': AzureKeyVaultIntegrationInfoModelToJSON(value.azureVaultInfo),
        'JazzTeamInfo': JazzTeamIntegrationInfoModelToJSON(value.jazzTeamInfo),
        'ClubhouseInfo': ClubhouseIntegrationInfoModelToJSON(value.clubhouseInfo),
        'PivotalTrackerInfo': PivotalTrackerIntegrationInfoModelToJSON(value.pivotalTrackerInfo),
        'CustomFields': value.customFields === undefined ? undefined : (value.customFields.map(IntegrationCustomFieldVmToJSON)),
        'DefectDojoInfo': DefectDojoIntegrationInfoModelToJSON(value.defectDojoInfo),
        'FogBugzInfo': FogBugzIntegrationInfoModelToJSON(value.fogBugzInfo),
        'GitHubInfo': GitHubIntegrationInfoModelToJSON(value.gitHubInfo),
        'GitLabInfo': GitLabIntegrationInfoModelToJSON(value.gitLabInfo),
        'JiraInfo': JiraIntegrationInfoModelToJSON(value.jiraInfo),
        'KafkaInfo': KafkaIntegrationInfoModelToJSON(value.kafkaInfo),
        'KennaInfo': KennaIntegrationInfoModelToJSON(value.kennaInfo),
        'FreshserviceInfo': FreshserviceIntegrationInfoModelToJSON(value.freshserviceInfo),
        'YouTrackInfo': YouTrackIntegrationInfoModelToJSON(value.youTrackInfo),
        'MicrosoftTeamsInfo': MicrosoftTeamsIntegrationInfoModelToJSON(value.microsoftTeamsInfo),
    };
}
//# sourceMappingURL=ScanNotificationIntegrationViewModel.js.map