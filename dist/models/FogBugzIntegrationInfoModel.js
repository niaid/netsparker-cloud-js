"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FogBugzIntegrationInfoModelToJSON = exports.FogBugzIntegrationInfoModelFromJSONTyped = exports.FogBugzIntegrationInfoModelFromJSON = exports.instanceOfFogBugzIntegrationInfoModel = exports.FogBugzIntegrationInfoModelTemplateTypeEnum = exports.FogBugzIntegrationInfoModelTypeEnum = void 0;
const runtime_1 = require("../runtime");
const IntegrationCustomFieldVm_1 = require("./IntegrationCustomFieldVm");
const IntegrationWizardResultModel_1 = require("./IntegrationWizardResultModel");
/**
* @export
* @enum {string}
*/
var FogBugzIntegrationInfoModelTypeEnum;
(function (FogBugzIntegrationInfoModelTypeEnum) {
    FogBugzIntegrationInfoModelTypeEnum["Jira"] = "Jira";
    FogBugzIntegrationInfoModelTypeEnum["GitHub"] = "GitHub";
    FogBugzIntegrationInfoModelTypeEnum["Tfs"] = "TFS";
    FogBugzIntegrationInfoModelTypeEnum["FogBugz"] = "FogBugz";
    FogBugzIntegrationInfoModelTypeEnum["ServiceNow"] = "ServiceNow";
    FogBugzIntegrationInfoModelTypeEnum["Slack"] = "Slack";
    FogBugzIntegrationInfoModelTypeEnum["GitLab"] = "GitLab";
    FogBugzIntegrationInfoModelTypeEnum["Bitbucket"] = "Bitbucket";
    FogBugzIntegrationInfoModelTypeEnum["Unfuddle"] = "Unfuddle";
    FogBugzIntegrationInfoModelTypeEnum["Zapier"] = "Zapier";
    FogBugzIntegrationInfoModelTypeEnum["AzureDevOps"] = "AzureDevOps";
    FogBugzIntegrationInfoModelTypeEnum["Redmine"] = "Redmine";
    FogBugzIntegrationInfoModelTypeEnum["Bugzilla"] = "Bugzilla";
    FogBugzIntegrationInfoModelTypeEnum["Kafka"] = "Kafka";
    FogBugzIntegrationInfoModelTypeEnum["PagerDuty"] = "PagerDuty";
    FogBugzIntegrationInfoModelTypeEnum["MicrosoftTeams"] = "MicrosoftTeams";
    FogBugzIntegrationInfoModelTypeEnum["Clubhouse"] = "Clubhouse";
    FogBugzIntegrationInfoModelTypeEnum["Trello"] = "Trello";
    FogBugzIntegrationInfoModelTypeEnum["Asana"] = "Asana";
    FogBugzIntegrationInfoModelTypeEnum["Webhook"] = "Webhook";
    FogBugzIntegrationInfoModelTypeEnum["Kenna"] = "Kenna";
    FogBugzIntegrationInfoModelTypeEnum["Freshservice"] = "Freshservice";
    FogBugzIntegrationInfoModelTypeEnum["YouTrack"] = "YouTrack";
    FogBugzIntegrationInfoModelTypeEnum["NetsparkerEnterprise"] = "NetsparkerEnterprise";
    FogBugzIntegrationInfoModelTypeEnum["Splunk"] = "Splunk";
    FogBugzIntegrationInfoModelTypeEnum["Mattermost"] = "Mattermost";
    FogBugzIntegrationInfoModelTypeEnum["Hashicorp"] = "Hashicorp";
    FogBugzIntegrationInfoModelTypeEnum["PivotalTracker"] = "PivotalTracker";
    FogBugzIntegrationInfoModelTypeEnum["CyberArk"] = "CyberArk";
    FogBugzIntegrationInfoModelTypeEnum["DefectDojo"] = "DefectDojo";
    FogBugzIntegrationInfoModelTypeEnum["JazzTeam"] = "JazzTeam";
    FogBugzIntegrationInfoModelTypeEnum["AzureKeyVault"] = "AzureKeyVault";
    FogBugzIntegrationInfoModelTypeEnum["ServiceNowVrm"] = "ServiceNowVRM";
})(FogBugzIntegrationInfoModelTypeEnum = exports.FogBugzIntegrationInfoModelTypeEnum || (exports.FogBugzIntegrationInfoModelTypeEnum = {}));
/**
* @export
* @enum {string}
*/
var FogBugzIntegrationInfoModelTemplateTypeEnum;
(function (FogBugzIntegrationInfoModelTemplateTypeEnum) {
    FogBugzIntegrationInfoModelTemplateTypeEnum["Standard"] = "Standard";
    FogBugzIntegrationInfoModelTemplateTypeEnum["Detailed"] = "Detailed";
})(FogBugzIntegrationInfoModelTemplateTypeEnum = exports.FogBugzIntegrationInfoModelTemplateTypeEnum || (exports.FogBugzIntegrationInfoModelTemplateTypeEnum = {}));
/**
 * Check if a given object implements the FogBugzIntegrationInfoModel interface.
 */
function instanceOfFogBugzIntegrationInfoModel(value) {
    let isInstance = true;
    isInstance = isInstance && "category" in value;
    isInstance = isInstance && "token" in value;
    isInstance = isInstance && "url" in value;
    isInstance = isInstance && "titleFormat" in value;
    return isInstance;
}
exports.instanceOfFogBugzIntegrationInfoModel = instanceOfFogBugzIntegrationInfoModel;
function FogBugzIntegrationInfoModelFromJSON(json) {
    return FogBugzIntegrationInfoModelFromJSONTyped(json, false);
}
exports.FogBugzIntegrationInfoModelFromJSON = FogBugzIntegrationInfoModelFromJSON;
function FogBugzIntegrationInfoModelFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'area': !(0, runtime_1.exists)(json, 'Area') ? undefined : json['Area'],
        'assignedTo': !(0, runtime_1.exists)(json, 'AssignedTo') ? undefined : json['AssignedTo'],
        'category': json['Category'],
        'milestone': !(0, runtime_1.exists)(json, 'Milestone') ? undefined : json['Milestone'],
        'project': !(0, runtime_1.exists)(json, 'Project') ? undefined : json['Project'],
        'tags': !(0, runtime_1.exists)(json, 'Tags') ? undefined : json['Tags'],
        'token': json['Token'],
        'url': json['Url'],
        'webhookUrl': !(0, runtime_1.exists)(json, 'WebhookUrl') ? undefined : json['WebhookUrl'],
        'type': !(0, runtime_1.exists)(json, 'Type') ? undefined : json['Type'],
        'genericErrorMessage': !(0, runtime_1.exists)(json, 'GenericErrorMessage') ? undefined : json['GenericErrorMessage'],
        'identifier': !(0, runtime_1.exists)(json, 'Identifier') ? undefined : json['Identifier'],
        'testMessageBody': !(0, runtime_1.exists)(json, 'TestMessageBody') ? undefined : json['TestMessageBody'],
        'testMessageTitle': !(0, runtime_1.exists)(json, 'TestMessageTitle') ? undefined : json['TestMessageTitle'],
        'name': !(0, runtime_1.exists)(json, 'Name') ? undefined : json['Name'],
        'integrationVersion': !(0, runtime_1.exists)(json, 'IntegrationVersion') ? undefined : json['IntegrationVersion'],
        'accountID': !(0, runtime_1.exists)(json, 'AccountID') ? undefined : json['AccountID'],
        'customFields': !(0, runtime_1.exists)(json, 'CustomFields') ? undefined : (json['CustomFields'].map(IntegrationCustomFieldVm_1.IntegrationCustomFieldVmFromJSON)),
        'templateType': !(0, runtime_1.exists)(json, 'TemplateType') ? undefined : json['TemplateType'],
        'reopenStatus': !(0, runtime_1.exists)(json, 'ReopenStatus') ? undefined : json['ReopenStatus'],
        'resolvedStatus': !(0, runtime_1.exists)(json, 'ResolvedStatus') ? undefined : json['ResolvedStatus'],
        'titleFormat': json['TitleFormat'],
        'integrationWizardResultModel': !(0, runtime_1.exists)(json, 'IntegrationWizardResultModel') ? undefined : (0, IntegrationWizardResultModel_1.IntegrationWizardResultModelFromJSON)(json['IntegrationWizardResultModel']),
    };
}
exports.FogBugzIntegrationInfoModelFromJSONTyped = FogBugzIntegrationInfoModelFromJSONTyped;
function FogBugzIntegrationInfoModelToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'Area': value.area,
        'AssignedTo': value.assignedTo,
        'Category': value.category,
        'Milestone': value.milestone,
        'Project': value.project,
        'Tags': value.tags,
        'Token': value.token,
        'Url': value.url,
        'Name': value.name,
        'IntegrationVersion': value.integrationVersion,
        'AccountID': value.accountID,
        'CustomFields': value.customFields === undefined ? undefined : (value.customFields.map(IntegrationCustomFieldVm_1.IntegrationCustomFieldVmToJSON)),
        'TemplateType': value.templateType,
        'ReopenStatus': value.reopenStatus,
        'ResolvedStatus': value.resolvedStatus,
        'TitleFormat': value.titleFormat,
        'IntegrationWizardResultModel': (0, IntegrationWizardResultModel_1.IntegrationWizardResultModelToJSON)(value.integrationWizardResultModel),
    };
}
exports.FogBugzIntegrationInfoModelToJSON = FogBugzIntegrationInfoModelToJSON;
//# sourceMappingURL=FogBugzIntegrationInfoModel.js.map