"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ScopeSettingToJSON = exports.ScopeSettingFromJSONTyped = exports.ScopeSettingFromJSON = exports.instanceOfScopeSetting = exports.ScopeSettingScopeEnum = exports.ScopeSettingDisallowedHttpMethodsEnum = void 0;
const runtime_1 = require("../runtime");
const ExcludedLinkModel_1 = require("./ExcludedLinkModel");
const ExcludedUsageTrackerModel_1 = require("./ExcludedUsageTrackerModel");
/**
* @export
* @enum {string}
*/
var ScopeSettingDisallowedHttpMethodsEnum;
(function (ScopeSettingDisallowedHttpMethodsEnum) {
    ScopeSettingDisallowedHttpMethodsEnum["Get"] = "GET";
    ScopeSettingDisallowedHttpMethodsEnum["Post"] = "POST";
    ScopeSettingDisallowedHttpMethodsEnum["Connect"] = "CONNECT";
    ScopeSettingDisallowedHttpMethodsEnum["Head"] = "HEAD";
    ScopeSettingDisallowedHttpMethodsEnum["Trace"] = "TRACE";
    ScopeSettingDisallowedHttpMethodsEnum["Debug"] = "DEBUG";
    ScopeSettingDisallowedHttpMethodsEnum["Track"] = "TRACK";
    ScopeSettingDisallowedHttpMethodsEnum["Put"] = "PUT";
    ScopeSettingDisallowedHttpMethodsEnum["Options"] = "OPTIONS";
    ScopeSettingDisallowedHttpMethodsEnum["Delete"] = "DELETE";
    ScopeSettingDisallowedHttpMethodsEnum["Link"] = "LINK";
    ScopeSettingDisallowedHttpMethodsEnum["Unlink"] = "UNLINK";
    ScopeSettingDisallowedHttpMethodsEnum["Patch"] = "PATCH";
})(ScopeSettingDisallowedHttpMethodsEnum = exports.ScopeSettingDisallowedHttpMethodsEnum || (exports.ScopeSettingDisallowedHttpMethodsEnum = {}));
/**
* @export
* @enum {string}
*/
var ScopeSettingScopeEnum;
(function (ScopeSettingScopeEnum) {
    ScopeSettingScopeEnum["EnteredPathAndBelow"] = "EnteredPathAndBelow";
    ScopeSettingScopeEnum["OnlyEnteredUrl"] = "OnlyEnteredUrl";
    ScopeSettingScopeEnum["WholeDomain"] = "WholeDomain";
})(ScopeSettingScopeEnum = exports.ScopeSettingScopeEnum || (exports.ScopeSettingScopeEnum = {}));
/**
 * Check if a given object implements the ScopeSetting interface.
 */
function instanceOfScopeSetting(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfScopeSetting = instanceOfScopeSetting;
function ScopeSettingFromJSON(json) {
    return ScopeSettingFromJSONTyped(json, false);
}
exports.ScopeSettingFromJSON = ScopeSettingFromJSON;
function ScopeSettingFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'excludedLinks': !(0, runtime_1.exists)(json, 'ExcludedLinks') ? undefined : (json['ExcludedLinks'].map(ExcludedLinkModel_1.ExcludedLinkModelFromJSON)),
        'excludeLinks': !(0, runtime_1.exists)(json, 'ExcludeLinks') ? undefined : json['ExcludeLinks'],
        'excludedUsageTrackers': !(0, runtime_1.exists)(json, 'ExcludedUsageTrackers') ? undefined : (json['ExcludedUsageTrackers'].map(ExcludedUsageTrackerModel_1.ExcludedUsageTrackerModelFromJSON)),
        'excludeAuthenticationPages': !(0, runtime_1.exists)(json, 'ExcludeAuthenticationPages') ? undefined : json['ExcludeAuthenticationPages'],
        'disallowedHttpMethods': !(0, runtime_1.exists)(json, 'DisallowedHttpMethods') ? undefined : json['DisallowedHttpMethods'],
        'scope': !(0, runtime_1.exists)(json, 'Scope') ? undefined : json['Scope'],
        'doNotDifferentiateProtocols': !(0, runtime_1.exists)(json, 'DoNotDifferentiateProtocols') ? undefined : json['DoNotDifferentiateProtocols'],
    };
}
exports.ScopeSettingFromJSONTyped = ScopeSettingFromJSONTyped;
function ScopeSettingToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'ExcludedLinks': value.excludedLinks === undefined ? undefined : (value.excludedLinks.map(ExcludedLinkModel_1.ExcludedLinkModelToJSON)),
        'ExcludeLinks': value.excludeLinks,
        'ExcludedUsageTrackers': value.excludedUsageTrackers === undefined ? undefined : (value.excludedUsageTrackers.map(ExcludedUsageTrackerModel_1.ExcludedUsageTrackerModelToJSON)),
        'ExcludeAuthenticationPages': value.excludeAuthenticationPages,
        'DisallowedHttpMethods': value.disallowedHttpMethods,
        'Scope': value.scope,
        'DoNotDifferentiateProtocols': value.doNotDifferentiateProtocols,
    };
}
exports.ScopeSettingToJSON = ScopeSettingToJSON;
//# sourceMappingURL=ScopeSetting.js.map