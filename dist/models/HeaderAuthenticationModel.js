"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.HeaderAuthenticationModelToJSON = exports.HeaderAuthenticationModelFromJSONTyped = exports.HeaderAuthenticationModelFromJSON = exports.instanceOfHeaderAuthenticationModel = void 0;
const CustomHttpHeaderModel_1 = require("./CustomHttpHeaderModel");
/**
 * Check if a given object implements the HeaderAuthenticationModel interface.
 */
function instanceOfHeaderAuthenticationModel(value) {
    return true;
}
exports.instanceOfHeaderAuthenticationModel = instanceOfHeaderAuthenticationModel;
function HeaderAuthenticationModelFromJSON(json) {
    return HeaderAuthenticationModelFromJSONTyped(json, false);
}
exports.HeaderAuthenticationModelFromJSON = HeaderAuthenticationModelFromJSON;
function HeaderAuthenticationModelFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'headers': json['Headers'] == null ? undefined : (json['Headers'].map(CustomHttpHeaderModel_1.CustomHttpHeaderModelFromJSON)),
        'isEnabled': json['IsEnabled'] == null ? undefined : json['IsEnabled'],
    };
}
exports.HeaderAuthenticationModelFromJSONTyped = HeaderAuthenticationModelFromJSONTyped;
function HeaderAuthenticationModelToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        'Headers': value['headers'] == null ? undefined : (value['headers'].map(CustomHttpHeaderModel_1.CustomHttpHeaderModelToJSON)),
        'IsEnabled': value['isEnabled'],
    };
}
exports.HeaderAuthenticationModelToJSON = HeaderAuthenticationModelToJSON;
//# sourceMappingURL=HeaderAuthenticationModel.js.map