"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FormAuthenticationHashicorpVaultSettingToJSON = exports.FormAuthenticationHashicorpVaultSettingFromJSONTyped = exports.FormAuthenticationHashicorpVaultSettingFromJSON = exports.instanceOfFormAuthenticationHashicorpVaultSetting = exports.FormAuthenticationHashicorpVaultSettingAuthTypeEnum = exports.FormAuthenticationHashicorpVaultSettingAgentModeEnum = void 0;
const runtime_1 = require("../runtime");
const FormAuthenticationHashicorpVaultSecretSetting_1 = require("./FormAuthenticationHashicorpVaultSecretSetting");
/**
* @export
* @enum {string}
*/
var FormAuthenticationHashicorpVaultSettingAgentModeEnum;
(function (FormAuthenticationHashicorpVaultSettingAgentModeEnum) {
    FormAuthenticationHashicorpVaultSettingAgentModeEnum["Cloud"] = "Cloud";
    FormAuthenticationHashicorpVaultSettingAgentModeEnum["Internal"] = "Internal";
})(FormAuthenticationHashicorpVaultSettingAgentModeEnum = exports.FormAuthenticationHashicorpVaultSettingAgentModeEnum || (exports.FormAuthenticationHashicorpVaultSettingAgentModeEnum = {}));
/**
* @export
* @enum {string}
*/
var FormAuthenticationHashicorpVaultSettingAuthTypeEnum;
(function (FormAuthenticationHashicorpVaultSettingAuthTypeEnum) {
    FormAuthenticationHashicorpVaultSettingAuthTypeEnum["Token"] = "Token";
    FormAuthenticationHashicorpVaultSettingAuthTypeEnum["TlsCert"] = "TLSCert";
})(FormAuthenticationHashicorpVaultSettingAuthTypeEnum = exports.FormAuthenticationHashicorpVaultSettingAuthTypeEnum || (exports.FormAuthenticationHashicorpVaultSettingAuthTypeEnum = {}));
/**
 * Check if a given object implements the FormAuthenticationHashicorpVaultSetting interface.
 */
function instanceOfFormAuthenticationHashicorpVaultSetting(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfFormAuthenticationHashicorpVaultSetting = instanceOfFormAuthenticationHashicorpVaultSetting;
function FormAuthenticationHashicorpVaultSettingFromJSON(json) {
    return FormAuthenticationHashicorpVaultSettingFromJSONTyped(json, false);
}
exports.FormAuthenticationHashicorpVaultSettingFromJSON = FormAuthenticationHashicorpVaultSettingFromJSON;
function FormAuthenticationHashicorpVaultSettingFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'id': !(0, runtime_1.exists)(json, 'Id') ? undefined : json['Id'],
        'secretSetting': !(0, runtime_1.exists)(json, 'SecretSetting') ? undefined : (0, FormAuthenticationHashicorpVaultSecretSetting_1.FormAuthenticationHashicorpVaultSecretSettingFromJSON)(json['SecretSetting']),
        'token': !(0, runtime_1.exists)(json, 'Token') ? undefined : json['Token'],
        'url': !(0, runtime_1.exists)(json, 'Url') ? undefined : json['Url'],
        'agentMode': !(0, runtime_1.exists)(json, 'AgentMode') ? undefined : json['AgentMode'],
        'encrypted': !(0, runtime_1.exists)(json, 'Encrypted') ? undefined : json['Encrypted'],
        'authType': !(0, runtime_1.exists)(json, 'AuthType') ? undefined : json['AuthType'],
        'certificateFileBytes': !(0, runtime_1.exists)(json, 'CertificateFileBytes') ? undefined : json['CertificateFileBytes'],
        'certificateFilePassword': !(0, runtime_1.exists)(json, 'CertificateFilePassword') ? undefined : json['CertificateFilePassword'],
        'path': !(0, runtime_1.exists)(json, 'Path') ? undefined : json['Path'],
        'namespace': !(0, runtime_1.exists)(json, 'Namespace') ? undefined : json['Namespace'],
    };
}
exports.FormAuthenticationHashicorpVaultSettingFromJSONTyped = FormAuthenticationHashicorpVaultSettingFromJSONTyped;
function FormAuthenticationHashicorpVaultSettingToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'Id': value.id,
        'SecretSetting': (0, FormAuthenticationHashicorpVaultSecretSetting_1.FormAuthenticationHashicorpVaultSecretSettingToJSON)(value.secretSetting),
        'Token': value.token,
        'Url': value.url,
        'AgentMode': value.agentMode,
        'Encrypted': value.encrypted,
        'AuthType': value.authType,
        'CertificateFileBytes': value.certificateFileBytes,
        'CertificateFilePassword': value.certificateFilePassword,
        'Path': value.path,
        'Namespace': value.namespace,
    };
}
exports.FormAuthenticationHashicorpVaultSettingToJSON = FormAuthenticationHashicorpVaultSettingToJSON;
//# sourceMappingURL=FormAuthenticationHashicorpVaultSetting.js.map