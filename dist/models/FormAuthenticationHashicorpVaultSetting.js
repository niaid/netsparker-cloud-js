/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists } from '../runtime';
import { FormAuthenticationHashicorpVaultSecretSettingFromJSON, FormAuthenticationHashicorpVaultSecretSettingToJSON, } from './FormAuthenticationHashicorpVaultSecretSetting';
/**
 * @export
 */
export const FormAuthenticationHashicorpVaultSettingAgentModeEnum = {
    Cloud: 'Cloud',
    Internal: 'Internal'
};
/**
 * @export
 */
export const FormAuthenticationHashicorpVaultSettingAuthTypeEnum = {
    Token: 'Token',
    TlsCert: 'TLSCert'
};
/**
 * Check if a given object implements the FormAuthenticationHashicorpVaultSetting interface.
 */
export function instanceOfFormAuthenticationHashicorpVaultSetting(value) {
    let isInstance = true;
    return isInstance;
}
export function FormAuthenticationHashicorpVaultSettingFromJSON(json) {
    return FormAuthenticationHashicorpVaultSettingFromJSONTyped(json, false);
}
export function FormAuthenticationHashicorpVaultSettingFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'id': !exists(json, 'Id') ? undefined : json['Id'],
        'secretSetting': !exists(json, 'SecretSetting') ? undefined : FormAuthenticationHashicorpVaultSecretSettingFromJSON(json['SecretSetting']),
        'token': !exists(json, 'Token') ? undefined : json['Token'],
        'url': !exists(json, 'Url') ? undefined : json['Url'],
        'agentMode': !exists(json, 'AgentMode') ? undefined : json['AgentMode'],
        'encrypted': !exists(json, 'Encrypted') ? undefined : json['Encrypted'],
        'authType': !exists(json, 'AuthType') ? undefined : json['AuthType'],
        'certificateFileBytes': !exists(json, 'CertificateFileBytes') ? undefined : json['CertificateFileBytes'],
        'certificateFilePassword': !exists(json, 'CertificateFilePassword') ? undefined : json['CertificateFilePassword'],
        'path': !exists(json, 'Path') ? undefined : json['Path'],
        'namespace': !exists(json, 'Namespace') ? undefined : json['Namespace'],
    };
}
export function FormAuthenticationHashicorpVaultSettingToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'Id': value.id,
        'SecretSetting': FormAuthenticationHashicorpVaultSecretSettingToJSON(value.secretSetting),
        'Token': value.token,
        'Url': value.url,
        'AgentMode': value.agentMode,
        'Encrypted': value.encrypted,
        'AuthType': value.authType,
        'CertificateFileBytes': value.certificateFileBytes,
        'CertificateFilePassword': value.certificateFilePassword,
        'Path': value.path,
        'Namespace': value.namespace,
    };
}
//# sourceMappingURL=FormAuthenticationHashicorpVaultSetting.js.map