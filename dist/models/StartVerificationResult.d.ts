/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Represents a model that carries out result of attempt to start verification.
 * @export
 * @interface StartVerificationResult
 */
export interface StartVerificationResult {
    /**
     * Gets or sets the data that required for verification method as explained in Message /&gt;.
     * @type {object}
     * @memberof StartVerificationResult
     */
    data?: object;
    /**
     * Gets or sets the message that explains how to verify this website with specified method.
     * @type {string}
     * @memberof StartVerificationResult
     */
    message?: string;
    /**
     * Gets or sets the verification status of website.
     * @type {string}
     * @memberof StartVerificationResult
     */
    verifyOwnershipResult?: StartVerificationResultVerifyOwnershipResultEnum;
}
/**
 * @export
 */
export declare const StartVerificationResultVerifyOwnershipResultEnum: {
    readonly Verified: "Verified";
    readonly NotVerified: "NotVerified";
    readonly VerificationLimitExceed: "VerificationLimitExceed";
};
export type StartVerificationResultVerifyOwnershipResultEnum = typeof StartVerificationResultVerifyOwnershipResultEnum[keyof typeof StartVerificationResultVerifyOwnershipResultEnum];
/**
 * Check if a given object implements the StartVerificationResult interface.
 */
export declare function instanceOfStartVerificationResult(value: object): boolean;
export declare function StartVerificationResultFromJSON(json: any): StartVerificationResult;
export declare function StartVerificationResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): StartVerificationResult;
export declare function StartVerificationResultToJSON(value?: StartVerificationResult | null): any;
