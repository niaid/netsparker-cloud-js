/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists } from '../runtime';
import { CustomHttpHeaderModelFromJSON, CustomHttpHeaderModelToJSON, } from './CustomHttpHeaderModel';
import { IntegrationCustomFieldVmFromJSON, IntegrationCustomFieldVmToJSON, } from './IntegrationCustomFieldVm';
import { IntegrationWizardResultModelFromJSON, IntegrationWizardResultModelToJSON, } from './IntegrationWizardResultModel';
/**
 * @export
 */
export const WebhookIntegrationInfoModelHttpMethodTypeEnum = {
    Get: 'Get',
    Post: 'Post',
    Put: 'Put'
};
/**
 * @export
 */
export const WebhookIntegrationInfoModelParameterTypeEnum = {
    Form: 'Form',
    Json: 'Json',
    Xml: 'Xml',
    QueryString: 'QueryString'
};
/**
 * @export
 */
export const WebhookIntegrationInfoModelTypeEnum = {
    NetsparkerEnterprise: 'NetsparkerEnterprise',
    Webhook: 'Webhook',
    Zapier: 'Zapier',
    Slack: 'Slack',
    Mattermost: 'Mattermost',
    MicrosoftTeams: 'MicrosoftTeams',
    AzureDevOps: 'AzureDevOps',
    Bitbucket: 'Bitbucket',
    Bugzilla: 'Bugzilla',
    Clubhouse: 'Clubhouse',
    DefectDojo: 'DefectDojo',
    PivotalTracker: 'PivotalTracker',
    Jira: 'Jira',
    FogBugz: 'FogBugz',
    GitHub: 'GitHub',
    PagerDuty: 'PagerDuty',
    Kafka: 'Kafka',
    Kenna: 'Kenna',
    Redmine: 'Redmine',
    ServiceNow: 'ServiceNow',
    Tfs: 'TFS',
    Unfuddle: 'Unfuddle',
    YouTrack: 'YouTrack',
    Freshservice: 'Freshservice',
    Splunk: 'Splunk',
    JazzTeam: 'JazzTeam',
    ServiceNowVrm: 'ServiceNowVRM',
    Asana: 'Asana',
    Trello: 'Trello',
    Hashicorp: 'Hashicorp',
    CyberArk: 'CyberArk',
    AzureKeyVault: 'AzureKeyVault',
    GitLab: 'GitLab'
};
/**
 * @export
 */
export const WebhookIntegrationInfoModelTemplateTypeEnum = {
    Standard: 'Standard',
    Detailed: 'Detailed'
};
/**
 * Check if a given object implements the WebhookIntegrationInfoModel interface.
 */
export function instanceOfWebhookIntegrationInfoModel(value) {
    let isInstance = true;
    isInstance = isInstance && "url" in value;
    isInstance = isInstance && "titleFormat" in value;
    return isInstance;
}
export function WebhookIntegrationInfoModelFromJSON(json) {
    return WebhookIntegrationInfoModelFromJSONTyped(json, false);
}
export function WebhookIntegrationInfoModelFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'httpMethodType': !exists(json, 'HttpMethodType') ? undefined : json['HttpMethodType'],
        'parameterType': !exists(json, 'ParameterType') ? undefined : json['ParameterType'],
        'url': json['Url'],
        'issue': !exists(json, 'Issue') ? undefined : json['Issue'],
        'customHttpHeaderModels': !exists(json, 'CustomHttpHeaderModels') ? undefined : (json['CustomHttpHeaderModels'].map(CustomHttpHeaderModelFromJSON)),
        'title': !exists(json, 'Title') ? undefined : json['Title'],
        'body': !exists(json, 'Body') ? undefined : json['Body'],
        'username': !exists(json, 'Username') ? undefined : json['Username'],
        'password': !exists(json, 'Password') ? undefined : json['Password'],
        'type': !exists(json, 'Type') ? undefined : json['Type'],
        'genericErrorMessage': !exists(json, 'GenericErrorMessage') ? undefined : json['GenericErrorMessage'],
        'identifier': !exists(json, 'Identifier') ? undefined : json['Identifier'],
        'testMessageBody': !exists(json, 'TestMessageBody') ? undefined : json['TestMessageBody'],
        'testMessageTitle': !exists(json, 'TestMessageTitle') ? undefined : json['TestMessageTitle'],
        'webhookUrl': !exists(json, 'WebhookUrl') ? undefined : json['WebhookUrl'],
        'name': !exists(json, 'Name') ? undefined : json['Name'],
        'integrationVersion': !exists(json, 'IntegrationVersion') ? undefined : json['IntegrationVersion'],
        'accountID': !exists(json, 'AccountID') ? undefined : json['AccountID'],
        'customFields': !exists(json, 'CustomFields') ? undefined : (json['CustomFields'].map(IntegrationCustomFieldVmFromJSON)),
        'templateType': !exists(json, 'TemplateType') ? undefined : json['TemplateType'],
        'reopenStatus': !exists(json, 'ReopenStatus') ? undefined : json['ReopenStatus'],
        'resolvedStatus': !exists(json, 'ResolvedStatus') ? undefined : json['ResolvedStatus'],
        'titleFormat': json['TitleFormat'],
        'integrationWizardResultModel': !exists(json, 'IntegrationWizardResultModel') ? undefined : IntegrationWizardResultModelFromJSON(json['IntegrationWizardResultModel']),
    };
}
export function WebhookIntegrationInfoModelToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'HttpMethodType': value.httpMethodType,
        'ParameterType': value.parameterType,
        'Url': value.url,
        'Issue': value.issue,
        'CustomHttpHeaderModels': value.customHttpHeaderModels === undefined ? undefined : (value.customHttpHeaderModels.map(CustomHttpHeaderModelToJSON)),
        'Title': value.title,
        'Body': value.body,
        'Username': value.username,
        'Password': value.password,
        'Name': value.name,
        'IntegrationVersion': value.integrationVersion,
        'AccountID': value.accountID,
        'CustomFields': value.customFields === undefined ? undefined : (value.customFields.map(IntegrationCustomFieldVmToJSON)),
        'TemplateType': value.templateType,
        'ReopenStatus': value.reopenStatus,
        'ResolvedStatus': value.resolvedStatus,
        'TitleFormat': value.titleFormat,
        'IntegrationWizardResultModel': IntegrationWizardResultModelToJSON(value.integrationWizardResultModel),
    };
}
//# sourceMappingURL=WebhookIntegrationInfoModel.js.map