"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateWebsiteGroupApiModelToJSON = exports.UpdateWebsiteGroupApiModelFromJSONTyped = exports.UpdateWebsiteGroupApiModelFromJSON = exports.instanceOfUpdateWebsiteGroupApiModel = void 0;
/**
 * Check if a given object implements the UpdateWebsiteGroupApiModel interface.
 */
function instanceOfUpdateWebsiteGroupApiModel(value) {
    if (!('id' in value))
        return false;
    if (!('name' in value))
        return false;
    return true;
}
exports.instanceOfUpdateWebsiteGroupApiModel = instanceOfUpdateWebsiteGroupApiModel;
function UpdateWebsiteGroupApiModelFromJSON(json) {
    return UpdateWebsiteGroupApiModelFromJSONTyped(json, false);
}
exports.UpdateWebsiteGroupApiModelFromJSON = UpdateWebsiteGroupApiModelFromJSON;
function UpdateWebsiteGroupApiModelFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['Id'],
        'name': json['Name'],
        'description': json['Description'] == null ? undefined : json['Description'],
        'tags': json['Tags'] == null ? undefined : json['Tags'],
    };
}
exports.UpdateWebsiteGroupApiModelFromJSONTyped = UpdateWebsiteGroupApiModelFromJSONTyped;
function UpdateWebsiteGroupApiModelToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        'Id': value['id'],
        'Name': value['name'],
        'Description': value['description'],
        'Tags': value['tags'],
    };
}
exports.UpdateWebsiteGroupApiModelToJSON = UpdateWebsiteGroupApiModelToJSON;
//# sourceMappingURL=UpdateWebsiteGroupApiModel.js.map