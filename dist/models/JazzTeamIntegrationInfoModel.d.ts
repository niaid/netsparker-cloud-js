/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { IntegrationWizardResultModel } from './IntegrationWizardResultModel';
import type { IntegrationCustomFieldVm } from './IntegrationCustomFieldVm';
/**
 * The Jazz Team integration info
 * @export
 * @interface JazzTeamIntegrationInfoModel
 */
export interface JazzTeamIntegrationInfoModel {
    /**
     * Jazz Team base URL.
     * @type {string}
     * @memberof JazzTeamIntegrationInfoModel
     */
    serverURL: string;
    /**
     * The username of the user.
     * @type {string}
     * @memberof JazzTeamIntegrationInfoModel
     */
    username: string;
    /**
     * The password of the user.
     * @type {string}
     * @memberof JazzTeamIntegrationInfoModel
     */
    password: string;
    /**
     * The Id of Project Area
     * @type {string}
     * @memberof JazzTeamIntegrationInfoModel
     */
    projectAreaId: string;
    /**
     * Category name for work items.
     * @type {string}
     * @memberof JazzTeamIntegrationInfoModel
     */
    categoryName: string;
    /**
     * The work item tags. To add more than one tag, separate each one with a space ( ). For example: tag1 tag2
     * @type {string}
     * @memberof JazzTeamIntegrationInfoModel
     */
    tags?: string;
    /**
     * This is the number of days from the date of the work item was created to the day of it's due.
     * @type {number}
     * @memberof JazzTeamIntegrationInfoModel
     */
    dueDays?: number;
    /**
     * Severity level for work items.
     * @type {string}
     * @memberof JazzTeamIntegrationInfoModel
     */
    severity?: JazzTeamIntegrationInfoModelSeverityEnum;
    /**
     * Priority level for work items.
     * @type {string}
     * @memberof JazzTeamIntegrationInfoModel
     */
    priority?: JazzTeamIntegrationInfoModelPriorityEnum;
    /**
     * Type for work items.
     * @type {string}
     * @memberof JazzTeamIntegrationInfoModel
     */
    workItemType?: JazzTeamIntegrationInfoModelWorkItemTypeEnum;
    /**
     *
     * @type {string}
     * @memberof JazzTeamIntegrationInfoModel
     */
    templateType?: JazzTeamIntegrationInfoModelTemplateTypeEnum;
    /**
     *
     * @type {string}
     * @memberof JazzTeamIntegrationInfoModel
     */
    readonly type?: JazzTeamIntegrationInfoModelTypeEnum;
    /**
     *
     * @type {string}
     * @memberof JazzTeamIntegrationInfoModel
     */
    readonly genericErrorMessage?: string;
    /**
     *
     * @type {string}
     * @memberof JazzTeamIntegrationInfoModel
     */
    readonly identifier?: string;
    /**
     *
     * @type {string}
     * @memberof JazzTeamIntegrationInfoModel
     */
    readonly testMessageBody?: string;
    /**
     *
     * @type {string}
     * @memberof JazzTeamIntegrationInfoModel
     */
    readonly testMessageTitle?: string;
    /**
     *
     * @type {string}
     * @memberof JazzTeamIntegrationInfoModel
     */
    readonly webhookUrl?: string;
    /**
     *
     * @type {string}
     * @memberof JazzTeamIntegrationInfoModel
     */
    name?: string;
    /**
     *
     * @type {number}
     * @memberof JazzTeamIntegrationInfoModel
     */
    integrationVersion?: number;
    /**
     *
     * @type {string}
     * @memberof JazzTeamIntegrationInfoModel
     */
    accountID?: string;
    /**
     *
     * @type {Array<IntegrationCustomFieldVm>}
     * @memberof JazzTeamIntegrationInfoModel
     */
    customFields?: Array<IntegrationCustomFieldVm>;
    /**
     *
     * @type {string}
     * @memberof JazzTeamIntegrationInfoModel
     */
    reopenStatus?: string;
    /**
     *
     * @type {string}
     * @memberof JazzTeamIntegrationInfoModel
     */
    resolvedStatus?: string;
    /**
     *
     * @type {string}
     * @memberof JazzTeamIntegrationInfoModel
     */
    titleFormat: string;
    /**
     *
     * @type {IntegrationWizardResultModel}
     * @memberof JazzTeamIntegrationInfoModel
     */
    integrationWizardResultModel?: IntegrationWizardResultModel;
    /**
     *
     * @type {string}
     * @memberof JazzTeamIntegrationInfoModel
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof JazzTeamIntegrationInfoModel
     */
    state?: JazzTeamIntegrationInfoModelStateEnum;
}
/**
 * @export
 */
export declare const JazzTeamIntegrationInfoModelSeverityEnum: {
    readonly Blocker: "Blocker";
    readonly Critical: "Critical";
    readonly Major: "Major";
    readonly Normal: "Normal";
    readonly Minor: "Minor";
    readonly Unclassified: "Unclassified";
};
export type JazzTeamIntegrationInfoModelSeverityEnum = typeof JazzTeamIntegrationInfoModelSeverityEnum[keyof typeof JazzTeamIntegrationInfoModelSeverityEnum];
/**
 * @export
 */
export declare const JazzTeamIntegrationInfoModelPriorityEnum: {
    readonly High: "High";
    readonly Medium: "Medium";
    readonly Low: "Low";
    readonly Unassigned: "Unassigned";
};
export type JazzTeamIntegrationInfoModelPriorityEnum = typeof JazzTeamIntegrationInfoModelPriorityEnum[keyof typeof JazzTeamIntegrationInfoModelPriorityEnum];
/**
 * @export
 */
export declare const JazzTeamIntegrationInfoModelWorkItemTypeEnum: {
    readonly Task: "Task";
    readonly Defect: "Defect";
};
export type JazzTeamIntegrationInfoModelWorkItemTypeEnum = typeof JazzTeamIntegrationInfoModelWorkItemTypeEnum[keyof typeof JazzTeamIntegrationInfoModelWorkItemTypeEnum];
/**
 * @export
 */
export declare const JazzTeamIntegrationInfoModelTemplateTypeEnum: {
    readonly Standard: "Standard";
    readonly Detailed: "Detailed";
};
export type JazzTeamIntegrationInfoModelTemplateTypeEnum = typeof JazzTeamIntegrationInfoModelTemplateTypeEnum[keyof typeof JazzTeamIntegrationInfoModelTemplateTypeEnum];
/**
 * @export
 */
export declare const JazzTeamIntegrationInfoModelTypeEnum: {
    readonly Jira: "Jira";
    readonly GitHub: "GitHub";
    readonly Tfs: "TFS";
    readonly FogBugz: "FogBugz";
    readonly ServiceNow: "ServiceNow";
    readonly Slack: "Slack";
    readonly GitLab: "GitLab";
    readonly Bitbucket: "Bitbucket";
    readonly Unfuddle: "Unfuddle";
    readonly Zapier: "Zapier";
    readonly AzureDevOps: "AzureDevOps";
    readonly Redmine: "Redmine";
    readonly Bugzilla: "Bugzilla";
    readonly Kafka: "Kafka";
    readonly PagerDuty: "PagerDuty";
    readonly MicrosoftTeams: "MicrosoftTeams";
    readonly Clubhouse: "Clubhouse";
    readonly Trello: "Trello";
    readonly Asana: "Asana";
    readonly Webhook: "Webhook";
    readonly Kenna: "Kenna";
    readonly Freshservice: "Freshservice";
    readonly YouTrack: "YouTrack";
    readonly NetsparkerEnterprise: "NetsparkerEnterprise";
    readonly Splunk: "Splunk";
    readonly Mattermost: "Mattermost";
    readonly Hashicorp: "Hashicorp";
    readonly PivotalTracker: "PivotalTracker";
    readonly CyberArk: "CyberArk";
    readonly DefectDojo: "DefectDojo";
    readonly JazzTeam: "JazzTeam";
    readonly AzureKeyVault: "AzureKeyVault";
    readonly ServiceNowVrm: "ServiceNowVRM";
};
export type JazzTeamIntegrationInfoModelTypeEnum = typeof JazzTeamIntegrationInfoModelTypeEnum[keyof typeof JazzTeamIntegrationInfoModelTypeEnum];
/**
 * @export
 */
export declare const JazzTeamIntegrationInfoModelStateEnum: {
    readonly Active: "Active";
    readonly Suspended: "Suspended";
};
export type JazzTeamIntegrationInfoModelStateEnum = typeof JazzTeamIntegrationInfoModelStateEnum[keyof typeof JazzTeamIntegrationInfoModelStateEnum];
/**
 * Check if a given object implements the JazzTeamIntegrationInfoModel interface.
 */
export declare function instanceOfJazzTeamIntegrationInfoModel(value: object): boolean;
export declare function JazzTeamIntegrationInfoModelFromJSON(json: any): JazzTeamIntegrationInfoModel;
export declare function JazzTeamIntegrationInfoModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): JazzTeamIntegrationInfoModel;
export declare function JazzTeamIntegrationInfoModelToJSON(value?: Omit<JazzTeamIntegrationInfoModel, 'Type' | 'GenericErrorMessage' | 'Identifier' | 'TestMessageBody' | 'TestMessageTitle' | 'WebhookUrl'> | null): any;
