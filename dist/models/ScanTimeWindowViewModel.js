"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ScanTimeWindowViewModelToJSON = exports.ScanTimeWindowViewModelFromJSONTyped = exports.ScanTimeWindowViewModelFromJSON = exports.instanceOfScanTimeWindowViewModel = exports.ScanTimeWindowViewModelScanCreateTypeEnum = void 0;
const runtime_1 = require("../runtime");
const ScanTimeWindowItemViewModel_1 = require("./ScanTimeWindowItemViewModel");
/**
 * @export
 */
exports.ScanTimeWindowViewModelScanCreateTypeEnum = {
    Website: 'Website',
    WebsiteGroup: 'WebsiteGroup'
};
/**
 * Check if a given object implements the ScanTimeWindowViewModel interface.
 */
function instanceOfScanTimeWindowViewModel(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfScanTimeWindowViewModel = instanceOfScanTimeWindowViewModel;
function ScanTimeWindowViewModelFromJSON(json) {
    return ScanTimeWindowViewModelFromJSONTyped(json, false);
}
exports.ScanTimeWindowViewModelFromJSON = ScanTimeWindowViewModelFromJSON;
function ScanTimeWindowViewModelFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'isEnabled': !(0, runtime_1.exists)(json, 'IsEnabled') ? undefined : json['IsEnabled'],
        'isEnabledForWebsite': !(0, runtime_1.exists)(json, 'IsEnabledForWebsite') ? undefined : json['IsEnabledForWebsite'],
        'isEnabledForWebsiteGroup': !(0, runtime_1.exists)(json, 'IsEnabledForWebsiteGroup') ? undefined : json['IsEnabledForWebsiteGroup'],
        'items': !(0, runtime_1.exists)(json, 'Items') ? undefined : (json['Items'].map(ScanTimeWindowItemViewModel_1.ScanTimeWindowItemViewModelFromJSON)),
        'timeZone': !(0, runtime_1.exists)(json, 'TimeZone') ? undefined : json['TimeZone'],
        'scanCreateType': !(0, runtime_1.exists)(json, 'ScanCreateType') ? undefined : json['ScanCreateType'],
    };
}
exports.ScanTimeWindowViewModelFromJSONTyped = ScanTimeWindowViewModelFromJSONTyped;
function ScanTimeWindowViewModelToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'IsEnabled': value.isEnabled,
        'IsEnabledForWebsite': value.isEnabledForWebsite,
        'IsEnabledForWebsiteGroup': value.isEnabledForWebsiteGroup,
        'Items': value.items === undefined ? undefined : (value.items.map(ScanTimeWindowItemViewModel_1.ScanTimeWindowItemViewModelToJSON)),
        'TimeZone': value.timeZone,
        'ScanCreateType': value.scanCreateType,
    };
}
exports.ScanTimeWindowViewModelToJSON = ScanTimeWindowViewModelToJSON;
//# sourceMappingURL=ScanTimeWindowViewModel.js.map