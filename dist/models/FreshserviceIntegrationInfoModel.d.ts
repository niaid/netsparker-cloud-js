/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { FreshserviceEntity } from './FreshserviceEntity';
import type { FreshserviceUser } from './FreshserviceUser';
import type { IntegrationCustomFieldVm } from './IntegrationCustomFieldVm';
import type { IntegrationWizardResultModel } from './IntegrationWizardResultModel';
/**
 * The Freshservice integration info
 * @export
 * @interface FreshserviceIntegrationInfoModel
 */
export interface FreshserviceIntegrationInfoModel {
    /**
     * The server URL to which to send problems.
     * @type {string}
     * @memberof FreshserviceIntegrationInfoModel
     */
    serverUrl: string;
    /**
     * The API key for authentication.
     * @type {string}
     * @memberof FreshserviceIntegrationInfoModel
     */
    apiKey: string;
    /**
     * The user identifier who reports the problem.
     * @type {number}
     * @memberof FreshserviceIntegrationInfoModel
     */
    requesterId: number;
    /**
     * The group identifier to which the problem is assigned.
     * @type {number}
     * @memberof FreshserviceIntegrationInfoModel
     */
    groupId?: number;
    /**
     * The agent identifier to whom the problem is assigned.
     * @type {number}
     * @memberof FreshserviceIntegrationInfoModel
     */
    agentId?: number;
    /**
     * The priority identifier of the problem.
     * @type {number}
     * @memberof FreshserviceIntegrationInfoModel
     */
    priorityId?: number;
    /**
     *
     * @type {IntegrationWizardResultModel}
     * @memberof FreshserviceIntegrationInfoModel
     */
    integrationWizardResultModel?: IntegrationWizardResultModel;
    /**
     * The Requesters List.
     * @type {Array<FreshserviceUser>}
     * @memberof FreshserviceIntegrationInfoModel
     */
    requesters?: Array<FreshserviceUser>;
    /**
     * The Groups List.
     * @type {Array<FreshserviceEntity>}
     * @memberof FreshserviceIntegrationInfoModel
     */
    groups?: Array<FreshserviceEntity>;
    /**
     * The Agents List.
     * @type {Array<FreshserviceUser>}
     * @memberof FreshserviceIntegrationInfoModel
     */
    agents?: Array<FreshserviceUser>;
    /**
     * The Priorities List.
     * @type {Array<FreshserviceEntity>}
     * @memberof FreshserviceIntegrationInfoModel
     */
    priorities?: Array<FreshserviceEntity>;
    /**
     * The number of days from the date the problem was created to the date it's due.
     * @type {number}
     * @memberof FreshserviceIntegrationInfoModel
     */
    dueDays?: number;
    /**
     *
     * @type {string}
     * @memberof FreshserviceIntegrationInfoModel
     */
    readonly type?: FreshserviceIntegrationInfoModelTypeEnum;
    /**
     *
     * @type {string}
     * @memberof FreshserviceIntegrationInfoModel
     */
    readonly genericErrorMessage?: string;
    /**
     *
     * @type {string}
     * @memberof FreshserviceIntegrationInfoModel
     */
    readonly identifier?: string;
    /**
     *
     * @type {string}
     * @memberof FreshserviceIntegrationInfoModel
     */
    readonly testMessageBody?: string;
    /**
     *
     * @type {string}
     * @memberof FreshserviceIntegrationInfoModel
     */
    readonly testMessageTitle?: string;
    /**
     *
     * @type {string}
     * @memberof FreshserviceIntegrationInfoModel
     */
    readonly webhookUrl?: string;
    /**
     *
     * @type {string}
     * @memberof FreshserviceIntegrationInfoModel
     */
    name?: string;
    /**
     *
     * @type {number}
     * @memberof FreshserviceIntegrationInfoModel
     */
    integrationVersion?: number;
    /**
     *
     * @type {string}
     * @memberof FreshserviceIntegrationInfoModel
     */
    accountID?: string;
    /**
     *
     * @type {Array<IntegrationCustomFieldVm>}
     * @memberof FreshserviceIntegrationInfoModel
     */
    customFields?: Array<IntegrationCustomFieldVm>;
    /**
     *
     * @type {string}
     * @memberof FreshserviceIntegrationInfoModel
     */
    templateType?: FreshserviceIntegrationInfoModelTemplateTypeEnum;
    /**
     *
     * @type {string}
     * @memberof FreshserviceIntegrationInfoModel
     */
    reopenStatus?: string;
    /**
     *
     * @type {string}
     * @memberof FreshserviceIntegrationInfoModel
     */
    resolvedStatus?: string;
    /**
     *
     * @type {string}
     * @memberof FreshserviceIntegrationInfoModel
     */
    titleFormat: string;
}
/**
* @export
* @enum {string}
*/
export declare enum FreshserviceIntegrationInfoModelTypeEnum {
    Jira = "Jira",
    GitHub = "GitHub",
    Tfs = "TFS",
    FogBugz = "FogBugz",
    ServiceNow = "ServiceNow",
    Slack = "Slack",
    GitLab = "GitLab",
    Bitbucket = "Bitbucket",
    Unfuddle = "Unfuddle",
    Zapier = "Zapier",
    AzureDevOps = "AzureDevOps",
    Redmine = "Redmine",
    Bugzilla = "Bugzilla",
    Kafka = "Kafka",
    PagerDuty = "PagerDuty",
    MicrosoftTeams = "MicrosoftTeams",
    Clubhouse = "Clubhouse",
    Trello = "Trello",
    Asana = "Asana",
    Webhook = "Webhook",
    Kenna = "Kenna",
    Freshservice = "Freshservice",
    YouTrack = "YouTrack",
    NetsparkerEnterprise = "NetsparkerEnterprise",
    Splunk = "Splunk",
    Mattermost = "Mattermost",
    Hashicorp = "Hashicorp",
    PivotalTracker = "PivotalTracker",
    CyberArk = "CyberArk",
    DefectDojo = "DefectDojo",
    JazzTeam = "JazzTeam",
    AzureKeyVault = "AzureKeyVault",
    ServiceNowVrm = "ServiceNowVRM"
}
/**
* @export
* @enum {string}
*/
export declare enum FreshserviceIntegrationInfoModelTemplateTypeEnum {
    Standard = "Standard",
    Detailed = "Detailed"
}
/**
 * Check if a given object implements the FreshserviceIntegrationInfoModel interface.
 */
export declare function instanceOfFreshserviceIntegrationInfoModel(value: object): boolean;
export declare function FreshserviceIntegrationInfoModelFromJSON(json: any): FreshserviceIntegrationInfoModel;
export declare function FreshserviceIntegrationInfoModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): FreshserviceIntegrationInfoModel;
export declare function FreshserviceIntegrationInfoModelToJSON(value?: FreshserviceIntegrationInfoModel | null): any;
