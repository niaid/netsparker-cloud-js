"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.KafkaIntegrationInfoModelToJSON = exports.KafkaIntegrationInfoModelFromJSONTyped = exports.KafkaIntegrationInfoModelFromJSON = exports.instanceOfKafkaIntegrationInfoModel = exports.KafkaIntegrationInfoModelTemplateTypeEnum = exports.KafkaIntegrationInfoModelTypeEnum = exports.KafkaIntegrationInfoModelDataSerializationEnum = void 0;
const runtime_1 = require("../runtime");
const IntegrationCustomFieldVm_1 = require("./IntegrationCustomFieldVm");
const IntegrationWizardResultModel_1 = require("./IntegrationWizardResultModel");
/**
* @export
* @enum {string}
*/
var KafkaIntegrationInfoModelDataSerializationEnum;
(function (KafkaIntegrationInfoModelDataSerializationEnum) {
    KafkaIntegrationInfoModelDataSerializationEnum["JsonSerialized"] = "JsonSerialized";
    KafkaIntegrationInfoModelDataSerializationEnum["FlattenedJsonSerialized"] = "FlattenedJsonSerialized";
    KafkaIntegrationInfoModelDataSerializationEnum["AvroSerialized"] = "AvroSerialized";
})(KafkaIntegrationInfoModelDataSerializationEnum = exports.KafkaIntegrationInfoModelDataSerializationEnum || (exports.KafkaIntegrationInfoModelDataSerializationEnum = {}));
/**
* @export
* @enum {string}
*/
var KafkaIntegrationInfoModelTypeEnum;
(function (KafkaIntegrationInfoModelTypeEnum) {
    KafkaIntegrationInfoModelTypeEnum["Jira"] = "Jira";
    KafkaIntegrationInfoModelTypeEnum["GitHub"] = "GitHub";
    KafkaIntegrationInfoModelTypeEnum["Tfs"] = "TFS";
    KafkaIntegrationInfoModelTypeEnum["FogBugz"] = "FogBugz";
    KafkaIntegrationInfoModelTypeEnum["ServiceNow"] = "ServiceNow";
    KafkaIntegrationInfoModelTypeEnum["Slack"] = "Slack";
    KafkaIntegrationInfoModelTypeEnum["GitLab"] = "GitLab";
    KafkaIntegrationInfoModelTypeEnum["Bitbucket"] = "Bitbucket";
    KafkaIntegrationInfoModelTypeEnum["Unfuddle"] = "Unfuddle";
    KafkaIntegrationInfoModelTypeEnum["Zapier"] = "Zapier";
    KafkaIntegrationInfoModelTypeEnum["AzureDevOps"] = "AzureDevOps";
    KafkaIntegrationInfoModelTypeEnum["Redmine"] = "Redmine";
    KafkaIntegrationInfoModelTypeEnum["Bugzilla"] = "Bugzilla";
    KafkaIntegrationInfoModelTypeEnum["Kafka"] = "Kafka";
    KafkaIntegrationInfoModelTypeEnum["PagerDuty"] = "PagerDuty";
    KafkaIntegrationInfoModelTypeEnum["MicrosoftTeams"] = "MicrosoftTeams";
    KafkaIntegrationInfoModelTypeEnum["Clubhouse"] = "Clubhouse";
    KafkaIntegrationInfoModelTypeEnum["Trello"] = "Trello";
    KafkaIntegrationInfoModelTypeEnum["Asana"] = "Asana";
    KafkaIntegrationInfoModelTypeEnum["Webhook"] = "Webhook";
    KafkaIntegrationInfoModelTypeEnum["Kenna"] = "Kenna";
    KafkaIntegrationInfoModelTypeEnum["Freshservice"] = "Freshservice";
    KafkaIntegrationInfoModelTypeEnum["YouTrack"] = "YouTrack";
    KafkaIntegrationInfoModelTypeEnum["NetsparkerEnterprise"] = "NetsparkerEnterprise";
    KafkaIntegrationInfoModelTypeEnum["Splunk"] = "Splunk";
    KafkaIntegrationInfoModelTypeEnum["Mattermost"] = "Mattermost";
    KafkaIntegrationInfoModelTypeEnum["Hashicorp"] = "Hashicorp";
    KafkaIntegrationInfoModelTypeEnum["PivotalTracker"] = "PivotalTracker";
    KafkaIntegrationInfoModelTypeEnum["CyberArk"] = "CyberArk";
    KafkaIntegrationInfoModelTypeEnum["DefectDojo"] = "DefectDojo";
    KafkaIntegrationInfoModelTypeEnum["JazzTeam"] = "JazzTeam";
    KafkaIntegrationInfoModelTypeEnum["AzureKeyVault"] = "AzureKeyVault";
    KafkaIntegrationInfoModelTypeEnum["ServiceNowVrm"] = "ServiceNowVRM";
})(KafkaIntegrationInfoModelTypeEnum = exports.KafkaIntegrationInfoModelTypeEnum || (exports.KafkaIntegrationInfoModelTypeEnum = {}));
/**
* @export
* @enum {string}
*/
var KafkaIntegrationInfoModelTemplateTypeEnum;
(function (KafkaIntegrationInfoModelTemplateTypeEnum) {
    KafkaIntegrationInfoModelTemplateTypeEnum["Standard"] = "Standard";
    KafkaIntegrationInfoModelTemplateTypeEnum["Detailed"] = "Detailed";
})(KafkaIntegrationInfoModelTemplateTypeEnum = exports.KafkaIntegrationInfoModelTemplateTypeEnum || (exports.KafkaIntegrationInfoModelTemplateTypeEnum = {}));
/**
 * Check if a given object implements the KafkaIntegrationInfoModel interface.
 */
function instanceOfKafkaIntegrationInfoModel(value) {
    let isInstance = true;
    isInstance = isInstance && "topic" in value;
    isInstance = isInstance && "dataSerialization" in value;
    isInstance = isInstance && "titleFormat" in value;
    return isInstance;
}
exports.instanceOfKafkaIntegrationInfoModel = instanceOfKafkaIntegrationInfoModel;
function KafkaIntegrationInfoModelFromJSON(json) {
    return KafkaIntegrationInfoModelFromJSONTyped(json, false);
}
exports.KafkaIntegrationInfoModelFromJSON = KafkaIntegrationInfoModelFromJSON;
function KafkaIntegrationInfoModelFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'topic': json['Topic'],
        'dataSerialization': json['DataSerialization'],
        'schemaRegistryUrl': !(0, runtime_1.exists)(json, 'SchemaRegistryUrl') ? undefined : json['SchemaRegistryUrl'],
        'type': !(0, runtime_1.exists)(json, 'Type') ? undefined : json['Type'],
        'genericErrorMessage': !(0, runtime_1.exists)(json, 'GenericErrorMessage') ? undefined : json['GenericErrorMessage'],
        'identifier': !(0, runtime_1.exists)(json, 'Identifier') ? undefined : json['Identifier'],
        'testMessageBody': !(0, runtime_1.exists)(json, 'TestMessageBody') ? undefined : json['TestMessageBody'],
        'testMessageTitle': !(0, runtime_1.exists)(json, 'TestMessageTitle') ? undefined : json['TestMessageTitle'],
        'webhookUrl': !(0, runtime_1.exists)(json, 'WebhookUrl') ? undefined : json['WebhookUrl'],
        'name': !(0, runtime_1.exists)(json, 'Name') ? undefined : json['Name'],
        'integrationVersion': !(0, runtime_1.exists)(json, 'IntegrationVersion') ? undefined : json['IntegrationVersion'],
        'accountID': !(0, runtime_1.exists)(json, 'AccountID') ? undefined : json['AccountID'],
        'customFields': !(0, runtime_1.exists)(json, 'CustomFields') ? undefined : (json['CustomFields'].map(IntegrationCustomFieldVm_1.IntegrationCustomFieldVmFromJSON)),
        'templateType': !(0, runtime_1.exists)(json, 'TemplateType') ? undefined : json['TemplateType'],
        'reopenStatus': !(0, runtime_1.exists)(json, 'ReopenStatus') ? undefined : json['ReopenStatus'],
        'resolvedStatus': !(0, runtime_1.exists)(json, 'ResolvedStatus') ? undefined : json['ResolvedStatus'],
        'titleFormat': json['TitleFormat'],
        'integrationWizardResultModel': !(0, runtime_1.exists)(json, 'IntegrationWizardResultModel') ? undefined : (0, IntegrationWizardResultModel_1.IntegrationWizardResultModelFromJSON)(json['IntegrationWizardResultModel']),
    };
}
exports.KafkaIntegrationInfoModelFromJSONTyped = KafkaIntegrationInfoModelFromJSONTyped;
function KafkaIntegrationInfoModelToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'Topic': value.topic,
        'DataSerialization': value.dataSerialization,
        'SchemaRegistryUrl': value.schemaRegistryUrl,
        'Name': value.name,
        'IntegrationVersion': value.integrationVersion,
        'AccountID': value.accountID,
        'CustomFields': value.customFields === undefined ? undefined : (value.customFields.map(IntegrationCustomFieldVm_1.IntegrationCustomFieldVmToJSON)),
        'TemplateType': value.templateType,
        'ReopenStatus': value.reopenStatus,
        'ResolvedStatus': value.resolvedStatus,
        'TitleFormat': value.titleFormat,
        'IntegrationWizardResultModel': (0, IntegrationWizardResultModel_1.IntegrationWizardResultModelToJSON)(value.integrationWizardResultModel),
    };
}
exports.KafkaIntegrationInfoModelToJSON = KafkaIntegrationInfoModelToJSON;
//# sourceMappingURL=KafkaIntegrationInfoModel.js.map