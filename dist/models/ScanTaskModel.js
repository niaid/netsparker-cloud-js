"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ScanTaskModelToJSON = exports.ScanTaskModelFromJSONTyped = exports.ScanTaskModelFromJSON = exports.instanceOfScanTaskModel = exports.ScanTaskModelThreatLevelEnum = exports.ScanTaskModelStateEnum = exports.ScanTaskModelScanTypeEnum = exports.ScanTaskModelPhaseEnum = exports.ScanTaskModelGlobalThreatLevelEnum = exports.ScanTaskModelFailureReasonEnum = exports.ScanTaskModelWebsiteProtocolEnum = exports.ScanTaskModelUrlRewriteModeEnum = exports.ScanTaskModelScopeEnum = exports.ScanTaskModelAuthenticationProfileOptionEnum = void 0;
const UrlRewriteRuleModel_1 = require("./UrlRewriteRuleModel");
const PciScanTaskViewModel_1 = require("./PciScanTaskViewModel");
const VcsCommitInfo_1 = require("./VcsCommitInfo");
const BusinessLogicRecorderSettingModel_1 = require("./BusinessLogicRecorderSettingModel");
const ReducedScanTaskProfile_1 = require("./ReducedScanTaskProfile");
const AdditionalWebsiteModel_1 = require("./AdditionalWebsiteModel");
const ScanTimeWindowModel_1 = require("./ScanTimeWindowModel");
const UrlRewriteExcludedPathModel_1 = require("./UrlRewriteExcludedPathModel");
/**
 * @export
 */
exports.ScanTaskModelAuthenticationProfileOptionEnum = {
    DontUse: 'DontUse',
    UseMatchedProfile: 'UseMatchedProfile',
    SelectedProfile: 'SelectedProfile'
};
/**
 * @export
 */
exports.ScanTaskModelScopeEnum = {
    EnteredPathAndBelow: 'EnteredPathAndBelow',
    OnlyEnteredUrl: 'OnlyEnteredUrl',
    WholeDomain: 'WholeDomain'
};
/**
 * @export
 */
exports.ScanTaskModelUrlRewriteModeEnum = {
    None: 'None',
    Heuristic: 'Heuristic',
    Custom: 'Custom'
};
/**
 * @export
 */
exports.ScanTaskModelWebsiteProtocolEnum = {
    Http: 'Http',
    Https: 'Https'
};
/**
 * @export
 */
exports.ScanTaskModelFailureReasonEnum = {
    None: 'None',
    Request: 'Request',
    HeadRequest: 'HeadRequest',
    RedirectDetected: 'RedirectDetected',
    TimeoutDetected: 'TimeoutDetected',
    MaxLogoutExceeded: 'MaxLogoutExceeded',
    RequestFailed: 'RequestFailed',
    Response: 'Response',
    CrawlerRequest: 'CrawlerRequest',
    AttackerRequest: 'AttackerRequest',
    ReCrawlerRequest: 'ReCrawlerRequest',
    Finished: 'Finished',
    LinkNotFound: 'LinkNotFound',
    RecalculateAttackPossibilities: 'RecalculateAttackPossibilities',
    PhaseCrawlStarted: 'PhaseCrawlStarted',
    PhaseAttackStarted: 'PhaseAttackStarted',
    PhaseReCrawlStarted: 'PhaseReCrawlStarted',
    CrawlerPossibility: 'CrawlerPossibility',
    ReCrawlerPossibilities: 'ReCrawlerPossibilities',
    HostUnavailable: 'HostUnavailable',
    NameResolutionFailure: 'NameResolutionFailure',
    ProxyFailure: 'ProxyFailure',
    OutOfDiskSpace: 'OutOfDiskSpace',
    ProxyAuthenticationRequired: 'ProxyAuthenticationRequired',
    OAuth2EndpointError: 'OAuth2EndpointError',
    TargetLinkTimeoutDetected: 'TargetLinkTimeoutDetected',
    LoginFailed: 'LoginFailed',
    ScanTargetNotReachable: 'ScanTargetNotReachable',
    ScanPolicyNotFound: 'ScanPolicyNotFound',
    ReportPolicyNotFound: 'ReportPolicyNotFound',
    SecurityProtocolTypeNotSupported: 'SecurityProtocolTypeNotSupported',
    UnableToLoadScanSession: 'UnableToLoadScanSession',
    AgentNotAvailable: 'AgentNotAvailable',
    ScanNotAllowed: 'ScanNotAllowed',
    UnableToFindAutoSaveNdb: 'UnableToFindAutoSaveNdb',
    ErrorOccurredOnScanFailed: 'ErrorOccurredOnScanFailed',
    ErrorOccurredOnPause: 'ErrorOccurredOnPause',
    ErrorOccurredOnCancel: 'ErrorOccurredOnCancel',
    ErrorOccurredOnScanCompleted: 'ErrorOccurredOnScanCompleted',
    SevenZipNotFoundOrInstalled: 'SevenZipNotFoundOrInstalled',
    ErrorOccurredOnLaunchScan: 'ErrorOccurredOnLaunchScan',
    InvalidHeader: 'InvalidHeader',
    ErrorOccurredOnPreScanValidation: 'ErrorOccurredOnPreScanValidation',
    RawScanFileExpired: 'RawScanFileExpired',
    SecretsAndEncryptionIntegration: 'SecretsAndEncryptionIntegration',
    ArchiveMethodUnavailable: 'ArchiveMethodUnavailable'
};
/**
 * @export
 */
exports.ScanTaskModelGlobalThreatLevelEnum = {
    Unknown: 'Unknown',
    Secure: 'Secure',
    NeedsAttention: 'NeedsAttention',
    Insecure: 'Insecure',
    Critical: 'Critical'
};
/**
 * @export
 */
exports.ScanTaskModelPhaseEnum = {
    Pending: 'Pending',
    Crawling: 'Crawling',
    CrawlingAndAttacking: 'CrawlingAndAttacking',
    Attacking: 'Attacking',
    ReCrawling: 'ReCrawling',
    Complete: 'Complete'
};
/**
 * @export
 */
exports.ScanTaskModelScanTypeEnum = {
    Full: 'Full',
    Retest: 'Retest',
    Incremental: 'Incremental'
};
/**
 * @export
 */
exports.ScanTaskModelStateEnum = {
    Queued: 'Queued',
    Scanning: 'Scanning',
    Archiving: 'Archiving',
    Complete: 'Complete',
    Failed: 'Failed',
    Cancelled: 'Cancelled',
    Delayed: 'Delayed',
    Pausing: 'Pausing',
    Paused: 'Paused',
    Resuming: 'Resuming',
    AsyncArchiving: 'AsyncArchiving'
};
/**
 * @export
 */
exports.ScanTaskModelThreatLevelEnum = {
    Unknown: 'Unknown',
    Secure: 'Secure',
    NeedsAttention: 'NeedsAttention',
    Insecure: 'Insecure',
    Critical: 'Critical'
};
/**
 * Check if a given object implements the ScanTaskModel interface.
 */
function instanceOfScanTaskModel(value) {
    return true;
}
exports.instanceOfScanTaskModel = instanceOfScanTaskModel;
function ScanTaskModelFromJSON(json) {
    return ScanTaskModelFromJSONTyped(json, false);
}
exports.ScanTaskModelFromJSON = ScanTaskModelFromJSON;
function ScanTaskModelFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'additionalWebsites': json['AdditionalWebsites'] == null ? undefined : (json['AdditionalWebsites'].map(AdditionalWebsiteModel_1.AdditionalWebsiteModelFromJSON)),
        'agentId': json['AgentId'] == null ? undefined : json['AgentId'],
        'agentName': json['AgentName'] == null ? undefined : json['AgentName'],
        'cookies': json['Cookies'] == null ? undefined : json['Cookies'],
        'crawlAndAttack': json['CrawlAndAttack'] == null ? undefined : json['CrawlAndAttack'],
        'deletedOn': json['DeletedOn'] == null ? undefined : (new Date(json['DeletedOn'])),
        'enableHeuristicChecksInCustomUrlRewrite': json['EnableHeuristicChecksInCustomUrlRewrite'] == null ? undefined : json['EnableHeuristicChecksInCustomUrlRewrite'],
        'excludedLinks': json['ExcludedLinks'] == null ? undefined : json['ExcludedLinks'],
        'excludeLinks': json['ExcludeLinks'] == null ? undefined : json['ExcludeLinks'],
        'disallowedHttpMethods': json['DisallowedHttpMethods'] == null ? undefined : json['DisallowedHttpMethods'],
        'findAndFollowNewLinks': json['FindAndFollowNewLinks'] == null ? undefined : json['FindAndFollowNewLinks'],
        'importedLinks': json['ImportedLinks'] == null ? undefined : json['ImportedLinks'],
        'allImportedLinks': json['AllImportedLinks'] == null ? undefined : json['AllImportedLinks'],
        'desktopScanId': json['DesktopScanId'] == null ? undefined : json['DesktopScanId'],
        'initiatedTime': json['InitiatedTime'] == null ? undefined : json['InitiatedTime'],
        'initiatedDate': json['InitiatedDate'] == null ? undefined : json['InitiatedDate'],
        'initiatedAt': json['InitiatedAt'] == null ? undefined : (new Date(json['InitiatedAt'])),
        'maxDynamicSignatures': json['MaxDynamicSignatures'] == null ? undefined : json['MaxDynamicSignatures'],
        'maxScanDuration': json['MaxScanDuration'] == null ? undefined : json['MaxScanDuration'],
        'duration': json['Duration'] == null ? undefined : json['Duration'],
        'policyDescription': json['PolicyDescription'] == null ? undefined : json['PolicyDescription'],
        'policyId': json['PolicyId'] == null ? undefined : json['PolicyId'],
        'policyUserId': json['PolicyUserId'] == null ? undefined : json['PolicyUserId'],
        'policyIsDefault': json['PolicyIsDefault'] == null ? undefined : json['PolicyIsDefault'],
        'policyIsShared': json['PolicyIsShared'] == null ? undefined : json['PolicyIsShared'],
        'policyName': json['PolicyName'] == null ? undefined : json['PolicyName'],
        'authenticationProfileId': json['AuthenticationProfileId'] == null ? undefined : json['AuthenticationProfileId'],
        'authenticationProfileOption': json['AuthenticationProfileOption'] == null ? undefined : json['AuthenticationProfileOption'],
        'reportPolicyDescription': json['ReportPolicyDescription'] == null ? undefined : json['ReportPolicyDescription'],
        'reportPolicyId': json['ReportPolicyId'] == null ? undefined : json['ReportPolicyId'],
        'reportPolicyUserId': json['ReportPolicyUserId'] == null ? undefined : json['ReportPolicyUserId'],
        'reportPolicyIsDefault': json['ReportPolicyIsDefault'] == null ? undefined : json['ReportPolicyIsDefault'],
        'reportPolicyIsShared': json['ReportPolicyIsShared'] == null ? undefined : json['ReportPolicyIsShared'],
        'reportPolicyName': json['ReportPolicyName'] == null ? undefined : json['ReportPolicyName'],
        'scope': json['Scope'] == null ? undefined : json['Scope'],
        'subPathMaxDynamicSignatures': json['SubPathMaxDynamicSignatures'] == null ? undefined : json['SubPathMaxDynamicSignatures'],
        'targetPath': json['TargetPath'] == null ? undefined : json['TargetPath'],
        'targetUrl': json['TargetUrl'] == null ? undefined : json['TargetUrl'],
        'targetUrlRoot': json['TargetUrlRoot'] == null ? undefined : json['TargetUrlRoot'],
        'timeWindow': json['TimeWindow'] == null ? undefined : (0, ScanTimeWindowModel_1.ScanTimeWindowModelFromJSON)(json['TimeWindow']),
        'totalVulnerabilityCount': json['TotalVulnerabilityCount'] == null ? undefined : json['TotalVulnerabilityCount'],
        'urlRewriteAnalyzableExtensions': json['UrlRewriteAnalyzableExtensions'] == null ? undefined : json['UrlRewriteAnalyzableExtensions'],
        'urlRewriteBlockSeparators': json['UrlRewriteBlockSeparators'] == null ? undefined : json['UrlRewriteBlockSeparators'],
        'urlRewriteMode': json['UrlRewriteMode'] == null ? undefined : json['UrlRewriteMode'],
        'urlRewriteRules': json['UrlRewriteRules'] == null ? undefined : (json['UrlRewriteRules'].map(UrlRewriteRuleModel_1.UrlRewriteRuleModelFromJSON)),
        'urlRewriteExcludedLinks': json['UrlRewriteExcludedLinks'] == null ? undefined : (json['UrlRewriteExcludedLinks'].map(UrlRewriteExcludedPathModel_1.UrlRewriteExcludedPathModelFromJSON)),
        'userId': json['UserId'] == null ? undefined : json['UserId'],
        'vcsCommitInfo': json['VcsCommitInfo'] == null ? undefined : (0, VcsCommitInfo_1.VcsCommitInfoFromJSON)(json['VcsCommitInfo']),
        'websiteName': json['WebsiteName'] == null ? undefined : json['WebsiteName'],
        'websiteUrl': json['WebsiteUrl'] == null ? undefined : json['WebsiteUrl'],
        'websiteDescription': json['WebsiteDescription'] == null ? undefined : json['WebsiteDescription'],
        'websiteProtocol': json['WebsiteProtocol'] == null ? undefined : json['WebsiteProtocol'],
        'websiteIsDeleted': json['WebsiteIsDeleted'] == null ? undefined : json['WebsiteIsDeleted'],
        'isWebsiteLatestCompletedFullScanTask': json['IsWebsiteLatestCompletedFullScanTask'] == null ? undefined : json['IsWebsiteLatestCompletedFullScanTask'],
        'enablePciScanTask': json['EnablePciScanTask'] == null ? undefined : json['EnablePciScanTask'],
        'pciScanTask': json['PciScanTask'] == null ? undefined : (0, PciScanTaskViewModel_1.PciScanTaskViewModelFromJSON)(json['PciScanTask']),
        'userName': json['UserName'] == null ? undefined : json['UserName'],
        'queuedScanTaskExist': json['QueuedScanTaskExist'] == null ? undefined : json['QueuedScanTaskExist'],
        'scanTaskProfileId': json['ScanTaskProfileId'] == null ? undefined : json['ScanTaskProfileId'],
        'scanTaskProfile': json['ScanTaskProfile'] == null ? undefined : (0, ReducedScanTaskProfile_1.ReducedScanTaskProfileFromJSON)(json['ScanTaskProfile']),
        'websiteGroupIds': json['WebsiteGroupIds'] == null ? undefined : json['WebsiteGroupIds'],
        'comments': json['Comments'] == null ? undefined : json['Comments'],
        'businessLogicRecorderSetting': json['BusinessLogicRecorderSetting'] == null ? undefined : (0, BusinessLogicRecorderSettingModel_1.BusinessLogicRecorderSettingModelFromJSON)(json['BusinessLogicRecorderSetting']),
        'scanProfileChanged': json['ScanProfileChanged'] == null ? undefined : json['ScanProfileChanged'],
        'completedSteps': json['CompletedSteps'] == null ? undefined : json['CompletedSteps'],
        'estimatedLaunchTime': json['EstimatedLaunchTime'] == null ? undefined : json['EstimatedLaunchTime'],
        'estimatedSteps': json['EstimatedSteps'] == null ? undefined : json['EstimatedSteps'],
        'failureReason': json['FailureReason'] == null ? undefined : json['FailureReason'],
        'failureReasonDescription': json['FailureReasonDescription'] == null ? undefined : json['FailureReasonDescription'],
        'failureReasonString': json['FailureReasonString'] == null ? undefined : json['FailureReasonString'],
        'globalThreatLevel': json['GlobalThreatLevel'] == null ? undefined : json['GlobalThreatLevel'],
        'globalVulnerabilityCriticalCount': json['GlobalVulnerabilityCriticalCount'] == null ? undefined : json['GlobalVulnerabilityCriticalCount'],
        'globalVulnerabilityHighCount': json['GlobalVulnerabilityHighCount'] == null ? undefined : json['GlobalVulnerabilityHighCount'],
        'globalVulnerabilityInfoCount': json['GlobalVulnerabilityInfoCount'] == null ? undefined : json['GlobalVulnerabilityInfoCount'],
        'globalVulnerabilityBestPracticeCount': json['GlobalVulnerabilityBestPracticeCount'] == null ? undefined : json['GlobalVulnerabilityBestPracticeCount'],
        'globalVulnerabilityLowCount': json['GlobalVulnerabilityLowCount'] == null ? undefined : json['GlobalVulnerabilityLowCount'],
        'globalVulnerabilityMediumCount': json['GlobalVulnerabilityMediumCount'] == null ? undefined : json['GlobalVulnerabilityMediumCount'],
        'id': json['Id'] == null ? undefined : json['Id'],
        'isCompleted': json['IsCompleted'] == null ? undefined : json['IsCompleted'],
        'percentage': json['Percentage'] == null ? undefined : json['Percentage'],
        'phase': json['Phase'] == null ? undefined : json['Phase'],
        'scanTaskGroupId': json['ScanTaskGroupId'] == null ? undefined : json['ScanTaskGroupId'],
        'scanType': json['ScanType'] == null ? undefined : json['ScanType'],
        'scheduledScanId': json['ScheduledScanId'] == null ? undefined : json['ScheduledScanId'],
        'state': json['State'] == null ? undefined : json['State'],
        'stateChanged': json['StateChanged'] == null ? undefined : (new Date(json['StateChanged'])),
        'threatLevel': json['ThreatLevel'] == null ? undefined : json['ThreatLevel'],
        'vulnerabilityCriticalCount': json['VulnerabilityCriticalCount'] == null ? undefined : json['VulnerabilityCriticalCount'],
        'vulnerabilityHighCount': json['VulnerabilityHighCount'] == null ? undefined : json['VulnerabilityHighCount'],
        'vulnerabilityInfoCount': json['VulnerabilityInfoCount'] == null ? undefined : json['VulnerabilityInfoCount'],
        'vulnerabilityBestPracticeCount': json['VulnerabilityBestPracticeCount'] == null ? undefined : json['VulnerabilityBestPracticeCount'],
        'vulnerabilityLowCount': json['VulnerabilityLowCount'] == null ? undefined : json['VulnerabilityLowCount'],
        'vulnerabilityMediumCount': json['VulnerabilityMediumCount'] == null ? undefined : json['VulnerabilityMediumCount'],
        'websiteId': json['WebsiteId'] == null ? undefined : json['WebsiteId'],
        'initiated': json['Initiated'] == null ? undefined : (new Date(json['Initiated'])),
        'tags': json['Tags'] == null ? undefined : json['Tags'],
    };
}
exports.ScanTaskModelFromJSONTyped = ScanTaskModelFromJSONTyped;
function ScanTaskModelToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        'AdditionalWebsites': value['additionalWebsites'] == null ? undefined : (value['additionalWebsites'].map(AdditionalWebsiteModel_1.AdditionalWebsiteModelToJSON)),
        'AgentId': value['agentId'],
        'AgentName': value['agentName'],
        'Cookies': value['cookies'],
        'CrawlAndAttack': value['crawlAndAttack'],
        'DeletedOn': value['deletedOn'] == null ? undefined : ((value['deletedOn']).toISOString()),
        'EnableHeuristicChecksInCustomUrlRewrite': value['enableHeuristicChecksInCustomUrlRewrite'],
        'ExcludedLinks': value['excludedLinks'],
        'ExcludeLinks': value['excludeLinks'],
        'DisallowedHttpMethods': value['disallowedHttpMethods'],
        'FindAndFollowNewLinks': value['findAndFollowNewLinks'],
        'ImportedLinks': value['importedLinks'],
        'AllImportedLinks': value['allImportedLinks'],
        'DesktopScanId': value['desktopScanId'],
        'InitiatedTime': value['initiatedTime'],
        'InitiatedDate': value['initiatedDate'],
        'InitiatedAt': value['initiatedAt'] == null ? undefined : ((value['initiatedAt']).toISOString()),
        'MaxDynamicSignatures': value['maxDynamicSignatures'],
        'MaxScanDuration': value['maxScanDuration'],
        'Duration': value['duration'],
        'PolicyDescription': value['policyDescription'],
        'PolicyId': value['policyId'],
        'PolicyUserId': value['policyUserId'],
        'PolicyIsDefault': value['policyIsDefault'],
        'PolicyIsShared': value['policyIsShared'],
        'PolicyName': value['policyName'],
        'AuthenticationProfileId': value['authenticationProfileId'],
        'AuthenticationProfileOption': value['authenticationProfileOption'],
        'ReportPolicyDescription': value['reportPolicyDescription'],
        'ReportPolicyId': value['reportPolicyId'],
        'ReportPolicyUserId': value['reportPolicyUserId'],
        'ReportPolicyIsDefault': value['reportPolicyIsDefault'],
        'ReportPolicyIsShared': value['reportPolicyIsShared'],
        'ReportPolicyName': value['reportPolicyName'],
        'Scope': value['scope'],
        'SubPathMaxDynamicSignatures': value['subPathMaxDynamicSignatures'],
        'TargetPath': value['targetPath'],
        'TargetUrl': value['targetUrl'],
        'TargetUrlRoot': value['targetUrlRoot'],
        'TimeWindow': (0, ScanTimeWindowModel_1.ScanTimeWindowModelToJSON)(value['timeWindow']),
        'TotalVulnerabilityCount': value['totalVulnerabilityCount'],
        'UrlRewriteAnalyzableExtensions': value['urlRewriteAnalyzableExtensions'],
        'UrlRewriteBlockSeparators': value['urlRewriteBlockSeparators'],
        'UrlRewriteMode': value['urlRewriteMode'],
        'UrlRewriteRules': value['urlRewriteRules'] == null ? undefined : (value['urlRewriteRules'].map(UrlRewriteRuleModel_1.UrlRewriteRuleModelToJSON)),
        'UrlRewriteExcludedLinks': value['urlRewriteExcludedLinks'] == null ? undefined : (value['urlRewriteExcludedLinks'].map(UrlRewriteExcludedPathModel_1.UrlRewriteExcludedPathModelToJSON)),
        'UserId': value['userId'],
        'VcsCommitInfo': (0, VcsCommitInfo_1.VcsCommitInfoToJSON)(value['vcsCommitInfo']),
        'WebsiteName': value['websiteName'],
        'WebsiteUrl': value['websiteUrl'],
        'WebsiteDescription': value['websiteDescription'],
        'WebsiteProtocol': value['websiteProtocol'],
        'WebsiteIsDeleted': value['websiteIsDeleted'],
        'IsWebsiteLatestCompletedFullScanTask': value['isWebsiteLatestCompletedFullScanTask'],
        'EnablePciScanTask': value['enablePciScanTask'],
        'PciScanTask': (0, PciScanTaskViewModel_1.PciScanTaskViewModelToJSON)(value['pciScanTask']),
        'UserName': value['userName'],
        'QueuedScanTaskExist': value['queuedScanTaskExist'],
        'ScanTaskProfileId': value['scanTaskProfileId'],
        'ScanTaskProfile': (0, ReducedScanTaskProfile_1.ReducedScanTaskProfileToJSON)(value['scanTaskProfile']),
        'WebsiteGroupIds': value['websiteGroupIds'],
        'Comments': value['comments'],
        'BusinessLogicRecorderSetting': (0, BusinessLogicRecorderSettingModel_1.BusinessLogicRecorderSettingModelToJSON)(value['businessLogicRecorderSetting']),
        'ScanProfileChanged': value['scanProfileChanged'],
        'CompletedSteps': value['completedSteps'],
        'EstimatedLaunchTime': value['estimatedLaunchTime'],
        'EstimatedSteps': value['estimatedSteps'],
        'FailureReason': value['failureReason'],
        'FailureReasonDescription': value['failureReasonDescription'],
        'GlobalThreatLevel': value['globalThreatLevel'],
        'GlobalVulnerabilityCriticalCount': value['globalVulnerabilityCriticalCount'],
        'GlobalVulnerabilityHighCount': value['globalVulnerabilityHighCount'],
        'GlobalVulnerabilityInfoCount': value['globalVulnerabilityInfoCount'],
        'GlobalVulnerabilityBestPracticeCount': value['globalVulnerabilityBestPracticeCount'],
        'GlobalVulnerabilityLowCount': value['globalVulnerabilityLowCount'],
        'GlobalVulnerabilityMediumCount': value['globalVulnerabilityMediumCount'],
        'Id': value['id'],
        'Phase': value['phase'],
        'ScanTaskGroupId': value['scanTaskGroupId'],
        'ScanType': value['scanType'],
        'ScheduledScanId': value['scheduledScanId'],
        'State': value['state'],
        'StateChanged': value['stateChanged'] == null ? undefined : ((value['stateChanged']).toISOString()),
        'ThreatLevel': value['threatLevel'],
        'VulnerabilityCriticalCount': value['vulnerabilityCriticalCount'],
        'VulnerabilityHighCount': value['vulnerabilityHighCount'],
        'VulnerabilityInfoCount': value['vulnerabilityInfoCount'],
        'VulnerabilityBestPracticeCount': value['vulnerabilityBestPracticeCount'],
        'VulnerabilityLowCount': value['vulnerabilityLowCount'],
        'VulnerabilityMediumCount': value['vulnerabilityMediumCount'],
        'WebsiteId': value['websiteId'],
        'Initiated': value['initiated'] == null ? undefined : ((value['initiated']).toISOString()),
        'Tags': value['tags'],
    };
}
exports.ScanTaskModelToJSON = ScanTaskModelToJSON;
//# sourceMappingURL=ScanTaskModel.js.map