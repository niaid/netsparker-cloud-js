/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists } from '../runtime';
import { AdditionalWebsitesSettingModelFromJSON, AdditionalWebsitesSettingModelToJSON, } from './AdditionalWebsitesSettingModel';
import { AgentSelectionModelFromJSON, AgentSelectionModelToJSON, } from './AgentSelectionModel';
import { BasicAuthenticationSettingModelFromJSON, BasicAuthenticationSettingModelToJSON, } from './BasicAuthenticationSettingModel';
import { BusinessLogicRecorderSettingModelFromJSON, BusinessLogicRecorderSettingModelToJSON, } from './BusinessLogicRecorderSettingModel';
import { ClientCertificateAuthenticationViewModelFromJSON, ClientCertificateAuthenticationViewModelToJSON, } from './ClientCertificateAuthenticationViewModel';
import { FormAuthenticationSettingModelFromJSON, FormAuthenticationSettingModelToJSON, } from './FormAuthenticationSettingModel';
import { HeaderAuthenticationModelFromJSON, HeaderAuthenticationModelToJSON, } from './HeaderAuthenticationModel';
import { ImportedLinksSettingFromJSON, ImportedLinksSettingToJSON, } from './ImportedLinksSetting';
import { OAuth2SettingModelFromJSON, OAuth2SettingModelToJSON, } from './OAuth2SettingModel';
import { PreRequestScriptSettingModelFromJSON, PreRequestScriptSettingModelToJSON, } from './PreRequestScriptSettingModel';
import { ScanTimeWindowViewModelFromJSON, ScanTimeWindowViewModelToJSON, } from './ScanTimeWindowViewModel';
import { ScheduledScanRecurrenceViewModelFromJSON, ScheduledScanRecurrenceViewModelToJSON, } from './ScheduledScanRecurrenceViewModel';
import { ScheduledScanUpdateViewModelFromJSON, ScheduledScanUpdateViewModelToJSON, } from './ScheduledScanUpdateViewModel';
import { ScopeSettingFromJSON, ScopeSettingToJSON, } from './ScopeSetting';
import { SharkModelFromJSON, SharkModelToJSON, } from './SharkModel';
import { TagViewModelFromJSON, TagViewModelToJSON, } from './TagViewModel';
import { UrlRewriteSettingFromJSON, UrlRewriteSettingToJSON, } from './UrlRewriteSetting';
/**
 * @export
 */
export const UpdateScheduledScanModelScanTypeEnum = {
    Full: 'Full',
    Retest: 'Retest',
    Incremental: 'Incremental'
};
/**
 * @export
 */
export const UpdateScheduledScanModelScheduleRunTypeEnum = {
    Once: 'Once',
    Daily: 'Daily',
    Weekly: 'Weekly',
    Monthly: 'Monthly',
    Quarterly: 'Quarterly',
    Biannually: 'Biannually',
    Yearly: 'Yearly',
    Custom: 'Custom'
};
/**
 * @export
 */
export const UpdateScheduledScanModelCustomScriptTemplateTypeEnum = {
    Default: 'Default',
    SimpleLoginForm: 'SimpleLoginForm',
    SimpleLoginFormQuery: 'SimpleLoginFormQuery',
    SimpleLoginFormDelay: 'SimpleLoginFormDelay'
};
/**
 * @export
 */
export const UpdateScheduledScanModelCreateTypeEnum = {
    Website: 'Website',
    WebsiteGroup: 'WebsiteGroup'
};
/**
 * Check if a given object implements the UpdateScheduledScanModel interface.
 */
export function instanceOfUpdateScheduledScanModel(value) {
    let isInstance = true;
    return isInstance;
}
export function UpdateScheduledScanModelFromJSON(json) {
    return UpdateScheduledScanModelFromJSONTyped(json, false);
}
export function UpdateScheduledScanModelFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'id': !exists(json, 'Id') ? undefined : json['Id'],
        'occurencesCount': !exists(json, 'OccurencesCount') ? undefined : json['OccurencesCount'],
        'disabled': !exists(json, 'Disabled') ? undefined : json['Disabled'],
        'enableScheduling': !exists(json, 'EnableScheduling') ? undefined : json['EnableScheduling'],
        'name': !exists(json, 'Name') ? undefined : json['Name'],
        'nextExecutionTime': !exists(json, 'NextExecutionTime') ? undefined : json['NextExecutionTime'],
        'scanGroupId': !exists(json, 'ScanGroupId') ? undefined : json['ScanGroupId'],
        'scanType': !exists(json, 'ScanType') ? undefined : json['ScanType'],
        'scheduleRunType': !exists(json, 'ScheduleRunType') ? undefined : json['ScheduleRunType'],
        'customRecurrence': !exists(json, 'CustomRecurrence') ? undefined : ScheduledScanRecurrenceViewModelFromJSON(json['CustomRecurrence']),
        'customScriptTemplateType': !exists(json, 'CustomScriptTemplateType') ? undefined : json['CustomScriptTemplateType'],
        'isTargetUrlRequired': !exists(json, 'IsTargetUrlRequired') ? undefined : json['IsTargetUrlRequired'],
        'isGenerateOptimizedCss': !exists(json, 'IsGenerateOptimizedCss') ? undefined : json['IsGenerateOptimizedCss'],
        'accountTags': !exists(json, 'AccountTags') ? undefined : (json['AccountTags'].map(TagViewModelFromJSON)),
        'entityCurrentTags': !exists(json, 'EntityCurrentTags') ? undefined : json['EntityCurrentTags'],
        'scheduledTaskNames': !exists(json, 'ScheduledTaskNames') ? undefined : (json['ScheduledTaskNames'].map(ScheduledScanUpdateViewModelFromJSON)),
        'launchSettingId': !exists(json, 'LaunchSettingId') ? undefined : json['LaunchSettingId'],
        'additionalWebsites': !exists(json, 'AdditionalWebsites') ? undefined : AdditionalWebsitesSettingModelFromJSON(json['AdditionalWebsites']),
        'agentGroupId': !exists(json, 'AgentGroupId') ? undefined : json['AgentGroupId'],
        'agentId': !exists(json, 'AgentId') ? undefined : json['AgentId'],
        'basicAuthenticationSetting': !exists(json, 'BasicAuthenticationSetting') ? undefined : BasicAuthenticationSettingModelFromJSON(json['BasicAuthenticationSetting']),
        'canEdit': !exists(json, 'CanEdit') ? undefined : json['CanEdit'],
        'clientCertificateAuthentication': !exists(json, 'ClientCertificateAuthentication') ? undefined : ClientCertificateAuthenticationViewModelFromJSON(json['ClientCertificateAuthentication']),
        'cookies': !exists(json, 'Cookies') ? undefined : json['Cookies'],
        'comments': !exists(json, 'Comments') ? undefined : json['Comments'],
        'crawlAndAttack': !exists(json, 'CrawlAndAttack') ? undefined : json['CrawlAndAttack'],
        'createType': !exists(json, 'CreateType') ? undefined : json['CreateType'],
        'authenticationProfileOption': !exists(json, 'AuthenticationProfileOption') ? undefined : json['AuthenticationProfileOption'],
        'authenticationProfileName': !exists(json, 'AuthenticationProfileName') ? undefined : json['AuthenticationProfileName'],
        'findAndFollowNewLinks': !exists(json, 'FindAndFollowNewLinks') ? undefined : json['FindAndFollowNewLinks'],
        'formAuthenticationSetting': !exists(json, 'FormAuthenticationSetting') ? undefined : FormAuthenticationSettingModelFromJSON(json['FormAuthenticationSetting']),
        'headerAuthentication': !exists(json, 'HeaderAuthentication') ? undefined : HeaderAuthenticationModelFromJSON(json['HeaderAuthentication']),
        'shark': !exists(json, 'Shark') ? undefined : SharkModelFromJSON(json['Shark']),
        'importedLinks': !exists(json, 'ImportedLinks') ? undefined : ImportedLinksSettingFromJSON(json['ImportedLinks']),
        'isMaxScanDurationEnabled': !exists(json, 'IsMaxScanDurationEnabled') ? undefined : json['IsMaxScanDurationEnabled'],
        'isPrimary': !exists(json, 'IsPrimary') ? undefined : json['IsPrimary'],
        'isShared': !exists(json, 'IsShared') ? undefined : json['IsShared'],
        'maxScanDuration': !exists(json, 'MaxScanDuration') ? undefined : json['MaxScanDuration'],
        'policyId': !exists(json, 'PolicyId') ? undefined : json['PolicyId'],
        'policyName': !exists(json, 'PolicyName') ? undefined : json['PolicyName'],
        'profileId': !exists(json, 'ProfileId') ? undefined : json['ProfileId'],
        'profileName': !exists(json, 'ProfileName') ? undefined : json['ProfileName'],
        'reportPolicyId': !exists(json, 'ReportPolicyId') ? undefined : json['ReportPolicyId'],
        'reportPolicyName': !exists(json, 'ReportPolicyName') ? undefined : json['ReportPolicyName'],
        'saveScanProfile': !exists(json, 'SaveScanProfile') ? undefined : json['SaveScanProfile'],
        'scopeSetting': !exists(json, 'ScopeSetting') ? undefined : ScopeSettingFromJSON(json['ScopeSetting']),
        'selectedAgents': !exists(json, 'SelectedAgents') ? undefined : (json['SelectedAgents'].map(AgentSelectionModelFromJSON)),
        'selectedScanProfileId': !exists(json, 'SelectedScanProfileId') ? undefined : json['SelectedScanProfileId'],
        'selectedScanProfileName': !exists(json, 'SelectedScanProfileName') ? undefined : json['SelectedScanProfileName'],
        'targetUrl': !exists(json, 'TargetUrl') ? undefined : json['TargetUrl'],
        'description': !exists(json, 'Description') ? undefined : json['Description'],
        'timeWindow': !exists(json, 'TimeWindow') ? undefined : ScanTimeWindowViewModelFromJSON(json['TimeWindow']),
        'urlRewriteSetting': !exists(json, 'UrlRewriteSetting') ? undefined : UrlRewriteSettingFromJSON(json['UrlRewriteSetting']),
        'preRequestScriptSetting': !exists(json, 'PreRequestScriptSetting') ? undefined : PreRequestScriptSettingModelFromJSON(json['PreRequestScriptSetting']),
        'userId': !exists(json, 'UserId') ? undefined : json['UserId'],
        'websiteGroupId': !exists(json, 'WebsiteGroupId') ? undefined : json['WebsiteGroupId'],
        'enablePciScanTask': !exists(json, 'EnablePciScanTask') ? undefined : json['EnablePciScanTask'],
        'oAuth2Setting': !exists(json, 'OAuth2Setting') ? undefined : OAuth2SettingModelFromJSON(json['OAuth2Setting']),
        'businessLogicRecorder': !exists(json, 'BusinessLogicRecorder') ? undefined : BusinessLogicRecorderSettingModelFromJSON(json['BusinessLogicRecorder']),
    };
}
export function UpdateScheduledScanModelToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'Id': value.id,
        'OccurencesCount': value.occurencesCount,
        'Disabled': value.disabled,
        'EnableScheduling': value.enableScheduling,
        'Name': value.name,
        'NextExecutionTime': value.nextExecutionTime,
        'ScanGroupId': value.scanGroupId,
        'ScanType': value.scanType,
        'ScheduleRunType': value.scheduleRunType,
        'CustomRecurrence': ScheduledScanRecurrenceViewModelToJSON(value.customRecurrence),
        'IsGenerateOptimizedCss': value.isGenerateOptimizedCss,
        'AccountTags': value.accountTags === undefined ? undefined : (value.accountTags.map(TagViewModelToJSON)),
        'EntityCurrentTags': value.entityCurrentTags,
        'ScheduledTaskNames': value.scheduledTaskNames === undefined ? undefined : (value.scheduledTaskNames.map(ScheduledScanUpdateViewModelToJSON)),
        'LaunchSettingId': value.launchSettingId,
        'AdditionalWebsites': AdditionalWebsitesSettingModelToJSON(value.additionalWebsites),
        'AgentGroupId': value.agentGroupId,
        'AgentId': value.agentId,
        'BasicAuthenticationSetting': BasicAuthenticationSettingModelToJSON(value.basicAuthenticationSetting),
        'ClientCertificateAuthentication': ClientCertificateAuthenticationViewModelToJSON(value.clientCertificateAuthentication),
        'Cookies': value.cookies,
        'Comments': value.comments,
        'CrawlAndAttack': value.crawlAndAttack,
        'CreateType': value.createType,
        'AuthenticationProfileOption': value.authenticationProfileOption,
        'AuthenticationProfileName': value.authenticationProfileName,
        'FindAndFollowNewLinks': value.findAndFollowNewLinks,
        'FormAuthenticationSetting': FormAuthenticationSettingModelToJSON(value.formAuthenticationSetting),
        'HeaderAuthentication': HeaderAuthenticationModelToJSON(value.headerAuthentication),
        'Shark': SharkModelToJSON(value.shark),
        'ImportedLinks': ImportedLinksSettingToJSON(value.importedLinks),
        'IsMaxScanDurationEnabled': value.isMaxScanDurationEnabled,
        'IsPrimary': value.isPrimary,
        'IsShared': value.isShared,
        'MaxScanDuration': value.maxScanDuration,
        'PolicyId': value.policyId,
        'PolicyName': value.policyName,
        'ProfileId': value.profileId,
        'ProfileName': value.profileName,
        'ReportPolicyId': value.reportPolicyId,
        'ReportPolicyName': value.reportPolicyName,
        'SaveScanProfile': value.saveScanProfile,
        'ScopeSetting': ScopeSettingToJSON(value.scopeSetting),
        'SelectedAgents': value.selectedAgents === undefined ? undefined : (value.selectedAgents.map(AgentSelectionModelToJSON)),
        'SelectedScanProfileId': value.selectedScanProfileId,
        'SelectedScanProfileName': value.selectedScanProfileName,
        'TargetUrl': value.targetUrl,
        'Description': value.description,
        'TimeWindow': ScanTimeWindowViewModelToJSON(value.timeWindow),
        'UrlRewriteSetting': UrlRewriteSettingToJSON(value.urlRewriteSetting),
        'PreRequestScriptSetting': PreRequestScriptSettingModelToJSON(value.preRequestScriptSetting),
        'UserId': value.userId,
        'WebsiteGroupId': value.websiteGroupId,
        'EnablePciScanTask': value.enablePciScanTask,
        'OAuth2Setting': OAuth2SettingModelToJSON(value.oAuth2Setting),
        'BusinessLogicRecorder': BusinessLogicRecorderSettingModelToJSON(value.businessLogicRecorder),
    };
}
//# sourceMappingURL=UpdateScheduledScanModel.js.map