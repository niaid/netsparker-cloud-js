"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateScheduledScanModelToJSON = exports.UpdateScheduledScanModelFromJSONTyped = exports.UpdateScheduledScanModelFromJSON = exports.instanceOfUpdateScheduledScanModel = exports.UpdateScheduledScanModelCreateTypeEnum = exports.UpdateScheduledScanModelCustomScriptTemplateTypeEnum = exports.UpdateScheduledScanModelScheduleRunTypeEnum = exports.UpdateScheduledScanModelScanTypeEnum = void 0;
const HeaderAuthenticationModel_1 = require("./HeaderAuthenticationModel");
const PreRequestScriptSettingModel_1 = require("./PreRequestScriptSettingModel");
const TagViewModel_1 = require("./TagViewModel");
const FormAuthenticationSettingModel_1 = require("./FormAuthenticationSettingModel");
const ScheduledScanUpdateViewModel_1 = require("./ScheduledScanUpdateViewModel");
const ScheduledScanRecurrenceViewModel_1 = require("./ScheduledScanRecurrenceViewModel");
const BusinessLogicRecorderSettingModel_1 = require("./BusinessLogicRecorderSettingModel");
const ClientCertificateAuthenticationViewModel_1 = require("./ClientCertificateAuthenticationViewModel");
const OAuth2SettingModel_1 = require("./OAuth2SettingModel");
const AgentSelectionModel_1 = require("./AgentSelectionModel");
const ImportedLinksSetting_1 = require("./ImportedLinksSetting");
const ScanTimeWindowViewModel_1 = require("./ScanTimeWindowViewModel");
const BasicAuthenticationSettingModel_1 = require("./BasicAuthenticationSettingModel");
const UrlRewriteSetting_1 = require("./UrlRewriteSetting");
const SharkModel_1 = require("./SharkModel");
const AdditionalWebsitesSettingModel_1 = require("./AdditionalWebsitesSettingModel");
const ScopeSetting_1 = require("./ScopeSetting");
/**
 * @export
 */
exports.UpdateScheduledScanModelScanTypeEnum = {
    Full: 'Full',
    Retest: 'Retest',
    Incremental: 'Incremental'
};
/**
 * @export
 */
exports.UpdateScheduledScanModelScheduleRunTypeEnum = {
    Once: 'Once',
    Daily: 'Daily',
    Weekly: 'Weekly',
    Monthly: 'Monthly',
    Quarterly: 'Quarterly',
    Biannually: 'Biannually',
    Yearly: 'Yearly',
    Custom: 'Custom'
};
/**
 * @export
 */
exports.UpdateScheduledScanModelCustomScriptTemplateTypeEnum = {
    Default: 'Default',
    SimpleLoginForm: 'SimpleLoginForm',
    SimpleLoginFormQuery: 'SimpleLoginFormQuery',
    SimpleLoginFormDelay: 'SimpleLoginFormDelay'
};
/**
 * @export
 */
exports.UpdateScheduledScanModelCreateTypeEnum = {
    Website: 'Website',
    WebsiteGroup: 'WebsiteGroup'
};
/**
 * Check if a given object implements the UpdateScheduledScanModel interface.
 */
function instanceOfUpdateScheduledScanModel(value) {
    return true;
}
exports.instanceOfUpdateScheduledScanModel = instanceOfUpdateScheduledScanModel;
function UpdateScheduledScanModelFromJSON(json) {
    return UpdateScheduledScanModelFromJSONTyped(json, false);
}
exports.UpdateScheduledScanModelFromJSON = UpdateScheduledScanModelFromJSON;
function UpdateScheduledScanModelFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['Id'] == null ? undefined : json['Id'],
        'occurencesCount': json['OccurencesCount'] == null ? undefined : json['OccurencesCount'],
        'disabled': json['Disabled'] == null ? undefined : json['Disabled'],
        'enableScheduling': json['EnableScheduling'] == null ? undefined : json['EnableScheduling'],
        'name': json['Name'] == null ? undefined : json['Name'],
        'nextExecutionTime': json['NextExecutionTime'] == null ? undefined : json['NextExecutionTime'],
        'scanGroupId': json['ScanGroupId'] == null ? undefined : json['ScanGroupId'],
        'scanType': json['ScanType'] == null ? undefined : json['ScanType'],
        'scheduleRunType': json['ScheduleRunType'] == null ? undefined : json['ScheduleRunType'],
        'customRecurrence': json['CustomRecurrence'] == null ? undefined : (0, ScheduledScanRecurrenceViewModel_1.ScheduledScanRecurrenceViewModelFromJSON)(json['CustomRecurrence']),
        'customScriptTemplateType': json['CustomScriptTemplateType'] == null ? undefined : json['CustomScriptTemplateType'],
        'isTargetUrlRequired': json['IsTargetUrlRequired'] == null ? undefined : json['IsTargetUrlRequired'],
        'isGenerateOptimizedCss': json['IsGenerateOptimizedCss'] == null ? undefined : json['IsGenerateOptimizedCss'],
        'accountTags': json['AccountTags'] == null ? undefined : (json['AccountTags'].map(TagViewModel_1.TagViewModelFromJSON)),
        'entityCurrentTags': json['EntityCurrentTags'] == null ? undefined : json['EntityCurrentTags'],
        'scheduledTaskNames': json['ScheduledTaskNames'] == null ? undefined : (json['ScheduledTaskNames'].map(ScheduledScanUpdateViewModel_1.ScheduledScanUpdateViewModelFromJSON)),
        'launchSettingId': json['LaunchSettingId'] == null ? undefined : json['LaunchSettingId'],
        'additionalWebsites': json['AdditionalWebsites'] == null ? undefined : (0, AdditionalWebsitesSettingModel_1.AdditionalWebsitesSettingModelFromJSON)(json['AdditionalWebsites']),
        'agentGroupId': json['AgentGroupId'] == null ? undefined : json['AgentGroupId'],
        'agentId': json['AgentId'] == null ? undefined : json['AgentId'],
        'basicAuthenticationSetting': json['BasicAuthenticationSetting'] == null ? undefined : (0, BasicAuthenticationSettingModel_1.BasicAuthenticationSettingModelFromJSON)(json['BasicAuthenticationSetting']),
        'canEdit': json['CanEdit'] == null ? undefined : json['CanEdit'],
        'clientCertificateAuthentication': json['ClientCertificateAuthentication'] == null ? undefined : (0, ClientCertificateAuthenticationViewModel_1.ClientCertificateAuthenticationViewModelFromJSON)(json['ClientCertificateAuthentication']),
        'cookies': json['Cookies'] == null ? undefined : json['Cookies'],
        'comments': json['Comments'] == null ? undefined : json['Comments'],
        'crawlAndAttack': json['CrawlAndAttack'] == null ? undefined : json['CrawlAndAttack'],
        'createType': json['CreateType'] == null ? undefined : json['CreateType'],
        'authenticationProfileOption': json['AuthenticationProfileOption'] == null ? undefined : json['AuthenticationProfileOption'],
        'authenticationProfileName': json['AuthenticationProfileName'] == null ? undefined : json['AuthenticationProfileName'],
        'findAndFollowNewLinks': json['FindAndFollowNewLinks'] == null ? undefined : json['FindAndFollowNewLinks'],
        'formAuthenticationSetting': json['FormAuthenticationSetting'] == null ? undefined : (0, FormAuthenticationSettingModel_1.FormAuthenticationSettingModelFromJSON)(json['FormAuthenticationSetting']),
        'headerAuthentication': json['HeaderAuthentication'] == null ? undefined : (0, HeaderAuthenticationModel_1.HeaderAuthenticationModelFromJSON)(json['HeaderAuthentication']),
        'shark': json['Shark'] == null ? undefined : (0, SharkModel_1.SharkModelFromJSON)(json['Shark']),
        'importedLinks': json['ImportedLinks'] == null ? undefined : (0, ImportedLinksSetting_1.ImportedLinksSettingFromJSON)(json['ImportedLinks']),
        'isMaxScanDurationEnabled': json['IsMaxScanDurationEnabled'] == null ? undefined : json['IsMaxScanDurationEnabled'],
        'isPrimary': json['IsPrimary'] == null ? undefined : json['IsPrimary'],
        'isShared': json['IsShared'] == null ? undefined : json['IsShared'],
        'maxScanDuration': json['MaxScanDuration'] == null ? undefined : json['MaxScanDuration'],
        'policyId': json['PolicyId'] == null ? undefined : json['PolicyId'],
        'policyName': json['PolicyName'] == null ? undefined : json['PolicyName'],
        'profileId': json['ProfileId'] == null ? undefined : json['ProfileId'],
        'profileName': json['ProfileName'] == null ? undefined : json['ProfileName'],
        'reportPolicyId': json['ReportPolicyId'] == null ? undefined : json['ReportPolicyId'],
        'reportPolicyName': json['ReportPolicyName'] == null ? undefined : json['ReportPolicyName'],
        'saveScanProfile': json['SaveScanProfile'] == null ? undefined : json['SaveScanProfile'],
        'scopeSetting': json['ScopeSetting'] == null ? undefined : (0, ScopeSetting_1.ScopeSettingFromJSON)(json['ScopeSetting']),
        'selectedAgents': json['SelectedAgents'] == null ? undefined : (json['SelectedAgents'].map(AgentSelectionModel_1.AgentSelectionModelFromJSON)),
        'selectedScanProfileId': json['SelectedScanProfileId'] == null ? undefined : json['SelectedScanProfileId'],
        'selectedScanProfileName': json['SelectedScanProfileName'] == null ? undefined : json['SelectedScanProfileName'],
        'targetUrl': json['TargetUrl'] == null ? undefined : json['TargetUrl'],
        'description': json['Description'] == null ? undefined : json['Description'],
        'timeWindow': json['TimeWindow'] == null ? undefined : (0, ScanTimeWindowViewModel_1.ScanTimeWindowViewModelFromJSON)(json['TimeWindow']),
        'urlRewriteSetting': json['UrlRewriteSetting'] == null ? undefined : (0, UrlRewriteSetting_1.UrlRewriteSettingFromJSON)(json['UrlRewriteSetting']),
        'preRequestScriptSetting': json['PreRequestScriptSetting'] == null ? undefined : (0, PreRequestScriptSettingModel_1.PreRequestScriptSettingModelFromJSON)(json['PreRequestScriptSetting']),
        'userId': json['UserId'] == null ? undefined : json['UserId'],
        'websiteGroupId': json['WebsiteGroupId'] == null ? undefined : json['WebsiteGroupId'],
        'enablePciScanTask': json['EnablePciScanTask'] == null ? undefined : json['EnablePciScanTask'],
        'oAuth2Setting': json['OAuth2Setting'] == null ? undefined : (0, OAuth2SettingModel_1.OAuth2SettingModelFromJSON)(json['OAuth2Setting']),
        'businessLogicRecorder': json['BusinessLogicRecorder'] == null ? undefined : (0, BusinessLogicRecorderSettingModel_1.BusinessLogicRecorderSettingModelFromJSON)(json['BusinessLogicRecorder']),
    };
}
exports.UpdateScheduledScanModelFromJSONTyped = UpdateScheduledScanModelFromJSONTyped;
function UpdateScheduledScanModelToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        'Id': value['id'],
        'OccurencesCount': value['occurencesCount'],
        'Disabled': value['disabled'],
        'EnableScheduling': value['enableScheduling'],
        'Name': value['name'],
        'NextExecutionTime': value['nextExecutionTime'],
        'ScanGroupId': value['scanGroupId'],
        'ScanType': value['scanType'],
        'ScheduleRunType': value['scheduleRunType'],
        'CustomRecurrence': (0, ScheduledScanRecurrenceViewModel_1.ScheduledScanRecurrenceViewModelToJSON)(value['customRecurrence']),
        'IsGenerateOptimizedCss': value['isGenerateOptimizedCss'],
        'AccountTags': value['accountTags'] == null ? undefined : (value['accountTags'].map(TagViewModel_1.TagViewModelToJSON)),
        'EntityCurrentTags': value['entityCurrentTags'],
        'ScheduledTaskNames': value['scheduledTaskNames'] == null ? undefined : (value['scheduledTaskNames'].map(ScheduledScanUpdateViewModel_1.ScheduledScanUpdateViewModelToJSON)),
        'LaunchSettingId': value['launchSettingId'],
        'AdditionalWebsites': (0, AdditionalWebsitesSettingModel_1.AdditionalWebsitesSettingModelToJSON)(value['additionalWebsites']),
        'AgentGroupId': value['agentGroupId'],
        'AgentId': value['agentId'],
        'BasicAuthenticationSetting': (0, BasicAuthenticationSettingModel_1.BasicAuthenticationSettingModelToJSON)(value['basicAuthenticationSetting']),
        'ClientCertificateAuthentication': (0, ClientCertificateAuthenticationViewModel_1.ClientCertificateAuthenticationViewModelToJSON)(value['clientCertificateAuthentication']),
        'Cookies': value['cookies'],
        'Comments': value['comments'],
        'CrawlAndAttack': value['crawlAndAttack'],
        'CreateType': value['createType'],
        'AuthenticationProfileOption': value['authenticationProfileOption'],
        'AuthenticationProfileName': value['authenticationProfileName'],
        'FindAndFollowNewLinks': value['findAndFollowNewLinks'],
        'FormAuthenticationSetting': (0, FormAuthenticationSettingModel_1.FormAuthenticationSettingModelToJSON)(value['formAuthenticationSetting']),
        'HeaderAuthentication': (0, HeaderAuthenticationModel_1.HeaderAuthenticationModelToJSON)(value['headerAuthentication']),
        'Shark': (0, SharkModel_1.SharkModelToJSON)(value['shark']),
        'ImportedLinks': (0, ImportedLinksSetting_1.ImportedLinksSettingToJSON)(value['importedLinks']),
        'IsMaxScanDurationEnabled': value['isMaxScanDurationEnabled'],
        'IsPrimary': value['isPrimary'],
        'IsShared': value['isShared'],
        'MaxScanDuration': value['maxScanDuration'],
        'PolicyId': value['policyId'],
        'PolicyName': value['policyName'],
        'ProfileId': value['profileId'],
        'ProfileName': value['profileName'],
        'ReportPolicyId': value['reportPolicyId'],
        'ReportPolicyName': value['reportPolicyName'],
        'SaveScanProfile': value['saveScanProfile'],
        'ScopeSetting': (0, ScopeSetting_1.ScopeSettingToJSON)(value['scopeSetting']),
        'SelectedAgents': value['selectedAgents'] == null ? undefined : (value['selectedAgents'].map(AgentSelectionModel_1.AgentSelectionModelToJSON)),
        'SelectedScanProfileId': value['selectedScanProfileId'],
        'SelectedScanProfileName': value['selectedScanProfileName'],
        'TargetUrl': value['targetUrl'],
        'Description': value['description'],
        'TimeWindow': (0, ScanTimeWindowViewModel_1.ScanTimeWindowViewModelToJSON)(value['timeWindow']),
        'UrlRewriteSetting': (0, UrlRewriteSetting_1.UrlRewriteSettingToJSON)(value['urlRewriteSetting']),
        'PreRequestScriptSetting': (0, PreRequestScriptSettingModel_1.PreRequestScriptSettingModelToJSON)(value['preRequestScriptSetting']),
        'UserId': value['userId'],
        'WebsiteGroupId': value['websiteGroupId'],
        'EnablePciScanTask': value['enablePciScanTask'],
        'OAuth2Setting': (0, OAuth2SettingModel_1.OAuth2SettingModelToJSON)(value['oAuth2Setting']),
        'BusinessLogicRecorder': (0, BusinessLogicRecorderSettingModel_1.BusinessLogicRecorderSettingModelToJSON)(value['businessLogicRecorder']),
    };
}
exports.UpdateScheduledScanModelToJSON = UpdateScheduledScanModelToJSON;
//# sourceMappingURL=UpdateScheduledScanModel.js.map