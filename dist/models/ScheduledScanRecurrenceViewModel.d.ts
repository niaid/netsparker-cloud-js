/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Scheduled scan recurrence view model.
 * @export
 * @interface ScheduledScanRecurrenceViewModel
 */
export interface ScheduledScanRecurrenceViewModel {
    /**
     * The {Invicti.Dates.Recurring.Enums.RepeatTypes}.
     * @type {string}
     * @memberof ScheduledScanRecurrenceViewModel
     */
    repeatType?: ScheduledScanRecurrenceViewModelRepeatTypeEnum;
    /**
     * The interval.
     * @type {number}
     * @memberof ScheduledScanRecurrenceViewModel
     */
    interval?: number;
    /**
     * The start date.
     * @type {Date}
     * @memberof ScheduledScanRecurrenceViewModel
     */
    startDate?: Date;
    /**
     * The ending type.
     * @type {string}
     * @memberof ScheduledScanRecurrenceViewModel
     */
    endingType?: ScheduledScanRecurrenceViewModelEndingTypeEnum;
    /**
     * The day of weeks.
     * @type {Array<string>}
     * @memberof ScheduledScanRecurrenceViewModel
     */
    daysOfWeek?: Array<ScheduledScanRecurrenceViewModelDaysOfWeekEnum>;
    /**
     * The months of year.
     * @type {Array<string>}
     * @memberof ScheduledScanRecurrenceViewModel
     */
    monthsOfYear?: Array<ScheduledScanRecurrenceViewModelMonthsOfYearEnum>;
    /**
     * The ordinals.
     * @type {string}
     * @memberof ScheduledScanRecurrenceViewModel
     */
    ordinal?: ScheduledScanRecurrenceViewModelOrdinalEnum;
    /**
     * The ending date.
     * @type {string}
     * @memberof ScheduledScanRecurrenceViewModel
     */
    endOn?: string;
    /**
     * The limit of the scheduled scan executions.
     * @type {number}
     * @memberof ScheduledScanRecurrenceViewModel
     */
    endOnOccurences?: number;
    /**
     * The day of month.
     * @type {number}
     * @memberof ScheduledScanRecurrenceViewModel
     */
    dayOfMonth?: number;
    /**
     * The ending date.
     * @type {Date}
     * @memberof ScheduledScanRecurrenceViewModel
     */
    endOnDate?: Date;
    /**
     * The recurrence builder.
     * @type {string}
     * @memberof ScheduledScanRecurrenceViewModel
     */
    dayOfWeek?: ScheduledScanRecurrenceViewModelDayOfWeekEnum;
}
/**
 * @export
 */
export declare const ScheduledScanRecurrenceViewModelRepeatTypeEnum: {
    readonly Days: "Days";
    readonly Weeks: "Weeks";
    readonly Months: "Months";
    readonly Years: "Years";
};
export type ScheduledScanRecurrenceViewModelRepeatTypeEnum = typeof ScheduledScanRecurrenceViewModelRepeatTypeEnum[keyof typeof ScheduledScanRecurrenceViewModelRepeatTypeEnum];
/**
 * @export
 */
export declare const ScheduledScanRecurrenceViewModelEndingTypeEnum: {
    readonly Never: "Never";
    readonly Date: "Date";
    readonly Occurences: "Occurences";
};
export type ScheduledScanRecurrenceViewModelEndingTypeEnum = typeof ScheduledScanRecurrenceViewModelEndingTypeEnum[keyof typeof ScheduledScanRecurrenceViewModelEndingTypeEnum];
/**
 * @export
 */
export declare const ScheduledScanRecurrenceViewModelDaysOfWeekEnum: {
    readonly Sunday: "Sunday";
    readonly Monday: "Monday";
    readonly Tuesday: "Tuesday";
    readonly Wednesday: "Wednesday";
    readonly Thursday: "Thursday";
    readonly Friday: "Friday";
    readonly Saturday: "Saturday";
};
export type ScheduledScanRecurrenceViewModelDaysOfWeekEnum = typeof ScheduledScanRecurrenceViewModelDaysOfWeekEnum[keyof typeof ScheduledScanRecurrenceViewModelDaysOfWeekEnum];
/**
 * @export
 */
export declare const ScheduledScanRecurrenceViewModelMonthsOfYearEnum: {
    readonly January: "January";
    readonly February: "February";
    readonly March: "March";
    readonly April: "April";
    readonly May: "May";
    readonly June: "June";
    readonly July: "July";
    readonly August: "August";
    readonly September: "September";
    readonly October: "October";
    readonly November: "November";
    readonly December: "December";
};
export type ScheduledScanRecurrenceViewModelMonthsOfYearEnum = typeof ScheduledScanRecurrenceViewModelMonthsOfYearEnum[keyof typeof ScheduledScanRecurrenceViewModelMonthsOfYearEnum];
/**
 * @export
 */
export declare const ScheduledScanRecurrenceViewModelOrdinalEnum: {
    readonly First: "First";
    readonly Second: "Second";
    readonly Third: "Third";
    readonly Fourth: "Fourth";
    readonly Last: "Last";
};
export type ScheduledScanRecurrenceViewModelOrdinalEnum = typeof ScheduledScanRecurrenceViewModelOrdinalEnum[keyof typeof ScheduledScanRecurrenceViewModelOrdinalEnum];
/**
 * @export
 */
export declare const ScheduledScanRecurrenceViewModelDayOfWeekEnum: {
    readonly Sunday: "Sunday";
    readonly Monday: "Monday";
    readonly Tuesday: "Tuesday";
    readonly Wednesday: "Wednesday";
    readonly Thursday: "Thursday";
    readonly Friday: "Friday";
    readonly Saturday: "Saturday";
};
export type ScheduledScanRecurrenceViewModelDayOfWeekEnum = typeof ScheduledScanRecurrenceViewModelDayOfWeekEnum[keyof typeof ScheduledScanRecurrenceViewModelDayOfWeekEnum];
/**
 * Check if a given object implements the ScheduledScanRecurrenceViewModel interface.
 */
export declare function instanceOfScheduledScanRecurrenceViewModel(value: object): boolean;
export declare function ScheduledScanRecurrenceViewModelFromJSON(json: any): ScheduledScanRecurrenceViewModel;
export declare function ScheduledScanRecurrenceViewModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScheduledScanRecurrenceViewModel;
export declare function ScheduledScanRecurrenceViewModelToJSON(value?: ScheduledScanRecurrenceViewModel | null): any;
