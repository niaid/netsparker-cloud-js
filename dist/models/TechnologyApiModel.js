/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists } from '../runtime';
/**
 * Check if a given object implements the TechnologyApiModel interface.
 */
export function instanceOfTechnologyApiModel(value) {
    let isInstance = true;
    return isInstance;
}
export function TechnologyApiModelFromJSON(json) {
    return TechnologyApiModelFromJSONTyped(json, false);
}
export function TechnologyApiModelFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'category': !exists(json, 'Category') ? undefined : json['Category'],
        'displayName': !exists(json, 'DisplayName') ? undefined : json['DisplayName'],
        'endOfLife': !exists(json, 'EndOfLife') ? undefined : json['EndOfLife'],
        'id': !exists(json, 'Id') ? undefined : json['Id'],
        'identifiedVersion': !exists(json, 'IdentifiedVersion') ? undefined : json['IdentifiedVersion'],
        'isNotificationDisabled': !exists(json, 'IsNotificationDisabled') ? undefined : json['IsNotificationDisabled'],
        'isOutofDate': !exists(json, 'IsOutofDate') ? undefined : json['IsOutofDate'],
        'issueCriticalCount': !exists(json, 'IssueCriticalCount') ? undefined : json['IssueCriticalCount'],
        'issueHighCount': !exists(json, 'IssueHighCount') ? undefined : json['IssueHighCount'],
        'issueInfoCount': !exists(json, 'IssueInfoCount') ? undefined : json['IssueInfoCount'],
        'issueLowCount': !exists(json, 'IssueLowCount') ? undefined : json['IssueLowCount'],
        'issueMediumCount': !exists(json, 'IssueMediumCount') ? undefined : json['IssueMediumCount'],
        'lastSeenDate': !exists(json, 'LastSeenDate') ? undefined : json['LastSeenDate'],
        'latestVersion': !exists(json, 'LatestVersion') ? undefined : json['LatestVersion'],
        'name': !exists(json, 'Name') ? undefined : json['Name'],
        'scanTaskId': !exists(json, 'ScanTaskId') ? undefined : json['ScanTaskId'],
        'websiteId': !exists(json, 'WebsiteId') ? undefined : json['WebsiteId'],
        'websiteName': !exists(json, 'WebsiteName') ? undefined : json['WebsiteName'],
        'overallLatestVersion': !exists(json, 'OverallLatestVersion') ? undefined : json['OverallLatestVersion'],
    };
}
export function TechnologyApiModelToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'Category': value.category,
        'DisplayName': value.displayName,
        'EndOfLife': value.endOfLife,
        'Id': value.id,
        'IdentifiedVersion': value.identifiedVersion,
        'IsNotificationDisabled': value.isNotificationDisabled,
        'IsOutofDate': value.isOutofDate,
        'IssueCriticalCount': value.issueCriticalCount,
        'IssueHighCount': value.issueHighCount,
        'IssueInfoCount': value.issueInfoCount,
        'IssueLowCount': value.issueLowCount,
        'IssueMediumCount': value.issueMediumCount,
        'LastSeenDate': value.lastSeenDate,
        'LatestVersion': value.latestVersion,
        'Name': value.name,
        'ScanTaskId': value.scanTaskId,
        'WebsiteId': value.websiteId,
        'WebsiteName': value.websiteName,
        'OverallLatestVersion': value.overallLatestVersion,
    };
}
//# sourceMappingURL=TechnologyApiModel.js.map