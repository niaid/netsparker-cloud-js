/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { IntegrationCustomFieldVm } from './IntegrationCustomFieldVm';
import type { IntegrationWizardResultModel } from './IntegrationWizardResultModel';
import type { TrelloBoard } from './TrelloBoard';
import type { TrelloLabel } from './TrelloLabel';
import type { TrelloList } from './TrelloList';
import type { TrelloMember } from './TrelloMember';
/**
 * The Trello integration info
 * @export
 * @interface TrelloIntegrationInfoModel
 */
export interface TrelloIntegrationInfoModel {
    /**
     * The API Key for API requests.
     * @type {string}
     * @memberof TrelloIntegrationInfoModel
     */
    apiKey: string;
    /**
     * The Token ID identifier.
     * @type {string}
     * @memberof TrelloIntegrationInfoModel
     */
    token: string;
    /**
     * The List identifier.
     * @type {string}
     * @memberof TrelloIntegrationInfoModel
     */
    listId: string;
    /**
     *
     * @type {IntegrationWizardResultModel}
     * @memberof TrelloIntegrationInfoModel
     */
    integrationWizardResultModel?: IntegrationWizardResultModel;
    /**
     * The Board identifier.
     * @type {string}
     * @memberof TrelloIntegrationInfoModel
     */
    boardId: string;
    /**
     * The TrelloBoard List.
     * @type {Array<TrelloBoard>}
     * @memberof TrelloIntegrationInfoModel
     */
    boardIds?: Array<TrelloBoard>;
    /**
     * The TrelloList List.
     * @type {Array<TrelloList>}
     * @memberof TrelloIntegrationInfoModel
     */
    lists?: Array<TrelloList>;
    /**
     * The TrelloMember List.
     * @type {Array<TrelloMember>}
     * @memberof TrelloIntegrationInfoModel
     */
    members?: Array<TrelloMember>;
    /**
     * The TrelloLabel List.
     * @type {Array<TrelloLabel>}
     * @memberof TrelloIntegrationInfoModel
     */
    labels?: Array<TrelloLabel>;
    /**
     * Comma-separated Member  identifiers.
     * @type {Array<string>}
     * @memberof TrelloIntegrationInfoModel
     */
    memberIds?: Array<string>;
    /**
     * Comma-separated Label identifiers.
     * @type {Array<string>}
     * @memberof TrelloIntegrationInfoModel
     */
    labelIds?: Array<string>;
    /**
     * Comma-separated Label to convert string identifiers.
     * @type {string}
     * @memberof TrelloIntegrationInfoModel
     */
    readonly labelIdsSelected?: string;
    /**
     * Comma-separated Member to convert string identifiers.
     * @type {string}
     * @memberof TrelloIntegrationInfoModel
     */
    readonly memberIdsSelected?: string;
    /**
     * The days when incident is due from the time that issue is created on.
     * @type {number}
     * @memberof TrelloIntegrationInfoModel
     */
    dueDays: number;
    /**
     *
     * @type {string}
     * @memberof TrelloIntegrationInfoModel
     */
    readonly type?: TrelloIntegrationInfoModelTypeEnum;
    /**
     *
     * @type {string}
     * @memberof TrelloIntegrationInfoModel
     */
    readonly genericErrorMessage?: string;
    /**
     *
     * @type {string}
     * @memberof TrelloIntegrationInfoModel
     */
    readonly identifier?: string;
    /**
     *
     * @type {string}
     * @memberof TrelloIntegrationInfoModel
     */
    readonly testMessageBody?: string;
    /**
     *
     * @type {string}
     * @memberof TrelloIntegrationInfoModel
     */
    readonly testMessageTitle?: string;
    /**
     *
     * @type {string}
     * @memberof TrelloIntegrationInfoModel
     */
    readonly webhookUrl?: string;
    /**
     *
     * @type {string}
     * @memberof TrelloIntegrationInfoModel
     */
    name?: string;
    /**
     *
     * @type {number}
     * @memberof TrelloIntegrationInfoModel
     */
    integrationVersion?: number;
    /**
     *
     * @type {string}
     * @memberof TrelloIntegrationInfoModel
     */
    accountID?: string;
    /**
     *
     * @type {Array<IntegrationCustomFieldVm>}
     * @memberof TrelloIntegrationInfoModel
     */
    customFields?: Array<IntegrationCustomFieldVm>;
    /**
     *
     * @type {string}
     * @memberof TrelloIntegrationInfoModel
     */
    templateType?: TrelloIntegrationInfoModelTemplateTypeEnum;
    /**
     *
     * @type {string}
     * @memberof TrelloIntegrationInfoModel
     */
    reopenStatus?: string;
    /**
     *
     * @type {string}
     * @memberof TrelloIntegrationInfoModel
     */
    resolvedStatus?: string;
    /**
     *
     * @type {string}
     * @memberof TrelloIntegrationInfoModel
     */
    titleFormat: string;
}
/**
 * @export
 */
export declare const TrelloIntegrationInfoModelTypeEnum: {
    readonly Jira: "Jira";
    readonly GitHub: "GitHub";
    readonly Tfs: "TFS";
    readonly FogBugz: "FogBugz";
    readonly ServiceNow: "ServiceNow";
    readonly Slack: "Slack";
    readonly GitLab: "GitLab";
    readonly Bitbucket: "Bitbucket";
    readonly Unfuddle: "Unfuddle";
    readonly Zapier: "Zapier";
    readonly AzureDevOps: "AzureDevOps";
    readonly Redmine: "Redmine";
    readonly Bugzilla: "Bugzilla";
    readonly Kafka: "Kafka";
    readonly PagerDuty: "PagerDuty";
    readonly MicrosoftTeams: "MicrosoftTeams";
    readonly Clubhouse: "Clubhouse";
    readonly Trello: "Trello";
    readonly Asana: "Asana";
    readonly Webhook: "Webhook";
    readonly Kenna: "Kenna";
    readonly Freshservice: "Freshservice";
    readonly YouTrack: "YouTrack";
    readonly NetsparkerEnterprise: "NetsparkerEnterprise";
    readonly Splunk: "Splunk";
    readonly Mattermost: "Mattermost";
    readonly Hashicorp: "Hashicorp";
    readonly PivotalTracker: "PivotalTracker";
    readonly CyberArk: "CyberArk";
    readonly DefectDojo: "DefectDojo";
    readonly JazzTeam: "JazzTeam";
    readonly AzureKeyVault: "AzureKeyVault";
    readonly ServiceNowVrm: "ServiceNowVRM";
};
export type TrelloIntegrationInfoModelTypeEnum = typeof TrelloIntegrationInfoModelTypeEnum[keyof typeof TrelloIntegrationInfoModelTypeEnum];
/**
 * @export
 */
export declare const TrelloIntegrationInfoModelTemplateTypeEnum: {
    readonly Standard: "Standard";
    readonly Detailed: "Detailed";
};
export type TrelloIntegrationInfoModelTemplateTypeEnum = typeof TrelloIntegrationInfoModelTemplateTypeEnum[keyof typeof TrelloIntegrationInfoModelTemplateTypeEnum];
/**
 * Check if a given object implements the TrelloIntegrationInfoModel interface.
 */
export declare function instanceOfTrelloIntegrationInfoModel(value: object): boolean;
export declare function TrelloIntegrationInfoModelFromJSON(json: any): TrelloIntegrationInfoModel;
export declare function TrelloIntegrationInfoModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrelloIntegrationInfoModel;
export declare function TrelloIntegrationInfoModelToJSON(value?: TrelloIntegrationInfoModel | null): any;
