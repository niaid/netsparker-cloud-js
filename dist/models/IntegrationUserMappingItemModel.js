/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists } from '../runtime';
/**
 * @export
 */
export const IntegrationUserMappingItemModelIntegrationSystemEnum = {
    Teamcity: 'Teamcity',
    Jenkins: 'Jenkins',
    Bamboo: 'Bamboo',
    GitLab: 'GitLab',
    AzureDevOps: 'AzureDevOps',
    Jira: 'Jira',
    CircleCi: 'CircleCI',
    TravisCi: 'TravisCI',
    UrbanCodeDeploy: 'UrbanCodeDeploy',
    GitHubActions: 'GitHubActions'
};
/**
 * @export
 */
export const IntegrationUserMappingItemModelResultEnum = {
    NotFound: 'NotFound',
    BadRequest: 'BadRequest',
    Duplicate: 'Duplicate',
    Saved: 'Saved',
    Edited: 'Edited',
    Deleted: 'Deleted',
    Exist: 'Exist'
};
/**
 * Check if a given object implements the IntegrationUserMappingItemModel interface.
 */
export function instanceOfIntegrationUserMappingItemModel(value) {
    let isInstance = true;
    isInstance = isInstance && "integrationSystem" in value;
    isInstance = isInstance && "integrationUserName" in value;
    isInstance = isInstance && "userId" in value;
    return isInstance;
}
export function IntegrationUserMappingItemModelFromJSON(json) {
    return IntegrationUserMappingItemModelFromJSONTyped(json, false);
}
export function IntegrationUserMappingItemModelFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'email': !exists(json, 'Email') ? undefined : json['Email'],
        'id': !exists(json, 'Id') ? undefined : json['Id'],
        'integrationSystem': json['IntegrationSystem'],
        'integrationUserName': json['IntegrationUserName'],
        'isEdit': !exists(json, 'IsEdit') ? undefined : json['IsEdit'],
        'name': !exists(json, 'Name') ? undefined : json['Name'],
        'nameEmail': !exists(json, 'NameEmail') ? undefined : json['NameEmail'],
        'result': !exists(json, 'Result') ? undefined : json['Result'],
        'userId': json['UserId'],
    };
}
export function IntegrationUserMappingItemModelToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'Email': value.email,
        'Id': value.id,
        'IntegrationSystem': value.integrationSystem,
        'IntegrationUserName': value.integrationUserName,
        'IsEdit': value.isEdit,
        'Name': value.name,
        'Result': value.result,
        'UserId': value.userId,
    };
}
//# sourceMappingURL=IntegrationUserMappingItemModel.js.map