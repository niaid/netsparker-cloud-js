"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FormValueSettingModelToJSON = exports.FormValueSettingModelFromJSONTyped = exports.FormValueSettingModelFromJSON = exports.instanceOfFormValueSettingModel = exports.FormValueSettingModelMatchTargetValueEnum = exports.FormValueSettingModelMatchTargetEnum = exports.FormValueSettingModelMatchEnum = void 0;
/**
 * @export
 */
exports.FormValueSettingModelMatchEnum = {
    RegEx: 'RegEx',
    Exact: 'Exact',
    Contains: 'Contains',
    Starts: 'Starts',
    Ends: 'Ends'
};
/**
 * @export
 */
exports.FormValueSettingModelMatchTargetEnum = {
    Name: 'Name',
    Label: 'Label',
    Placeholder: 'Placeholder',
    Id: 'Id'
};
/**
 * @export
 */
exports.FormValueSettingModelMatchTargetValueEnum = {
    Name: 'Name',
    Label: 'Label',
    Placeholder: 'Placeholder',
    Id: 'Id'
};
/**
 * Check if a given object implements the FormValueSettingModel interface.
 */
function instanceOfFormValueSettingModel(value) {
    if (!('matchTargetValue' in value))
        return false;
    if (!('name' in value))
        return false;
    if (!('value' in value))
        return false;
    return true;
}
exports.instanceOfFormValueSettingModel = instanceOfFormValueSettingModel;
function FormValueSettingModelFromJSON(json) {
    return FormValueSettingModelFromJSONTyped(json, false);
}
exports.FormValueSettingModelFromJSON = FormValueSettingModelFromJSON;
function FormValueSettingModelFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'force': json['Force'] == null ? undefined : json['Force'],
        'match': json['Match'] == null ? undefined : json['Match'],
        'matchTarget': json['MatchTarget'] == null ? undefined : json['MatchTarget'],
        'matchTargetValue': json['MatchTargetValue'],
        'name': json['Name'],
        'pattern': json['Pattern'] == null ? undefined : json['Pattern'],
        'type': json['Type'] == null ? undefined : json['Type'],
        'value': json['Value'],
    };
}
exports.FormValueSettingModelFromJSONTyped = FormValueSettingModelFromJSONTyped;
function FormValueSettingModelToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        'Force': value['force'],
        'Match': value['match'],
        'MatchTarget': value['matchTarget'],
        'MatchTargetValue': value['matchTargetValue'],
        'Name': value['name'],
        'Pattern': value['pattern'],
        'Type': value['type'],
        'Value': value['value'],
    };
}
exports.FormValueSettingModelToJSON = FormValueSettingModelToJSON;
//# sourceMappingURL=FormValueSettingModel.js.map