"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DiscoveryApiModelToJSON = exports.DiscoveryApiModelFromJSONTyped = exports.DiscoveryApiModelFromJSON = exports.instanceOfDiscoveryApiModel = exports.DiscoveryApiModelDiscoverySourceTypeEnum = exports.DiscoveryApiModelStatusEnum = void 0;
const runtime_1 = require("../runtime");
const DiscoveryConnectionsApiModel_1 = require("./DiscoveryConnectionsApiModel");
/**
* @export
* @enum {string}
*/
var DiscoveryApiModelStatusEnum;
(function (DiscoveryApiModelStatusEnum) {
    DiscoveryApiModelStatusEnum["Discovered"] = "Discovered";
    DiscoveryApiModelStatusEnum["Ignored"] = "Ignored";
    DiscoveryApiModelStatusEnum["Created"] = "Created";
})(DiscoveryApiModelStatusEnum = exports.DiscoveryApiModelStatusEnum || (exports.DiscoveryApiModelStatusEnum = {}));
/**
* @export
* @enum {string}
*/
var DiscoveryApiModelDiscoverySourceTypeEnum;
(function (DiscoveryApiModelDiscoverySourceTypeEnum) {
    DiscoveryApiModelDiscoverySourceTypeEnum["RadarDeepInfo"] = "RadarDeepInfo";
    DiscoveryApiModelDiscoverySourceTypeEnum["Aws"] = "Aws";
})(DiscoveryApiModelDiscoverySourceTypeEnum = exports.DiscoveryApiModelDiscoverySourceTypeEnum || (exports.DiscoveryApiModelDiscoverySourceTypeEnum = {}));
/**
 * Check if a given object implements the DiscoveryApiModel interface.
 */
function instanceOfDiscoveryApiModel(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfDiscoveryApiModel = instanceOfDiscoveryApiModel;
function DiscoveryApiModelFromJSON(json) {
    return DiscoveryApiModelFromJSONTyped(json, false);
}
exports.DiscoveryApiModelFromJSON = DiscoveryApiModelFromJSON;
function DiscoveryApiModelFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'id': !(0, runtime_1.exists)(json, 'Id') ? undefined : json['Id'],
        'subDomain': !(0, runtime_1.exists)(json, 'SubDomain') ? undefined : json['SubDomain'],
        'secondLevelDomain': !(0, runtime_1.exists)(json, 'SecondLevelDomain') ? undefined : json['SecondLevelDomain'],
        'secondLevelDomainCount': !(0, runtime_1.exists)(json, 'SecondLevelDomainCount') ? undefined : json['SecondLevelDomainCount'],
        'topLevelDomain': !(0, runtime_1.exists)(json, 'TopLevelDomain') ? undefined : json['TopLevelDomain'],
        'topLevelDomainCount': !(0, runtime_1.exists)(json, 'TopLevelDomainCount') ? undefined : json['TopLevelDomainCount'],
        'authority': !(0, runtime_1.exists)(json, 'Authority') ? undefined : json['Authority'],
        'https': !(0, runtime_1.exists)(json, 'Https') ? undefined : json['Https'],
        'ipAddress': !(0, runtime_1.exists)(json, 'IpAddress') ? undefined : json['IpAddress'],
        'ipAddressCount': !(0, runtime_1.exists)(json, 'IpAddressCount') ? undefined : json['IpAddressCount'],
        'organizationName': !(0, runtime_1.exists)(json, 'OrganizationName') ? undefined : json['OrganizationName'],
        'organizationNameCount': !(0, runtime_1.exists)(json, 'OrganizationNameCount') ? undefined : json['OrganizationNameCount'],
        'copyright': !(0, runtime_1.exists)(json, 'Copyright') ? undefined : json['Copyright'],
        'accountId': !(0, runtime_1.exists)(json, 'AccountId') ? undefined : json['AccountId'],
        'websiteId': !(0, runtime_1.exists)(json, 'WebsiteId') ? undefined : json['WebsiteId'],
        'websiteName': !(0, runtime_1.exists)(json, 'WebsiteName') ? undefined : json['WebsiteName'],
        'distance': !(0, runtime_1.exists)(json, 'Distance') ? undefined : json['Distance'],
        'status': !(0, runtime_1.exists)(json, 'Status') ? undefined : json['Status'],
        'tags': !(0, runtime_1.exists)(json, 'Tags') ? undefined : json['Tags'],
        'port': !(0, runtime_1.exists)(json, 'Port') ? undefined : json['Port'],
        'discoverySourceType': !(0, runtime_1.exists)(json, 'DiscoverySourceType') ? undefined : json['DiscoverySourceType'],
        'discoveryConnectionsDetail': !(0, runtime_1.exists)(json, 'DiscoveryConnectionsDetail') ? undefined : (0, DiscoveryConnectionsApiModel_1.DiscoveryConnectionsApiModelFromJSON)(json['DiscoveryConnectionsDetail']),
    };
}
exports.DiscoveryApiModelFromJSONTyped = DiscoveryApiModelFromJSONTyped;
function DiscoveryApiModelToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'Id': value.id,
        'SubDomain': value.subDomain,
        'SecondLevelDomain': value.secondLevelDomain,
        'SecondLevelDomainCount': value.secondLevelDomainCount,
        'TopLevelDomain': value.topLevelDomain,
        'TopLevelDomainCount': value.topLevelDomainCount,
        'Authority': value.authority,
        'Https': value.https,
        'IpAddress': value.ipAddress,
        'OrganizationName': value.organizationName,
        'OrganizationNameCount': value.organizationNameCount,
        'Copyright': value.copyright,
        'AccountId': value.accountId,
        'WebsiteId': value.websiteId,
        'WebsiteName': value.websiteName,
        'Distance': value.distance,
        'Status': value.status,
        'Tags': value.tags,
        'Port': value.port,
        'DiscoverySourceType': value.discoverySourceType,
        'DiscoveryConnectionsDetail': (0, DiscoveryConnectionsApiModel_1.DiscoveryConnectionsApiModelToJSON)(value.discoveryConnectionsDetail),
    };
}
exports.DiscoveryApiModelToJSON = DiscoveryApiModelToJSON;
//# sourceMappingURL=DiscoveryApiModel.js.map