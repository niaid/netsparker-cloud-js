"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FormAuthenticationCyberArkVaultSettingToJSON = exports.FormAuthenticationCyberArkVaultSettingFromJSONTyped = exports.FormAuthenticationCyberArkVaultSettingFromJSON = exports.instanceOfFormAuthenticationCyberArkVaultSetting = exports.FormAuthenticationCyberArkVaultSettingAgentModeEnum = void 0;
const runtime_1 = require("../runtime");
/**
 * @export
 */
exports.FormAuthenticationCyberArkVaultSettingAgentModeEnum = {
    Cloud: 'Cloud',
    Internal: 'Internal'
};
/**
 * Check if a given object implements the FormAuthenticationCyberArkVaultSetting interface.
 */
function instanceOfFormAuthenticationCyberArkVaultSetting(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfFormAuthenticationCyberArkVaultSetting = instanceOfFormAuthenticationCyberArkVaultSetting;
function FormAuthenticationCyberArkVaultSettingFromJSON(json) {
    return FormAuthenticationCyberArkVaultSettingFromJSONTyped(json, false);
}
exports.FormAuthenticationCyberArkVaultSettingFromJSON = FormAuthenticationCyberArkVaultSettingFromJSON;
function FormAuthenticationCyberArkVaultSettingFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'integrationId': !(0, runtime_1.exists)(json, 'IntegrationId') ? undefined : json['IntegrationId'],
        'cyberArkUseStaticUsername': !(0, runtime_1.exists)(json, 'CyberArkUseStaticUsername') ? undefined : json['CyberArkUseStaticUsername'],
        'cyberArkStaticUsername': !(0, runtime_1.exists)(json, 'CyberArkStaticUsername') ? undefined : json['CyberArkStaticUsername'],
        'cyberArkUserNameQuery': !(0, runtime_1.exists)(json, 'CyberArkUserNameQuery') ? undefined : json['CyberArkUserNameQuery'],
        'cyberArkPasswordQuery': !(0, runtime_1.exists)(json, 'CyberArkPasswordQuery') ? undefined : json['CyberArkPasswordQuery'],
        'url': !(0, runtime_1.exists)(json, 'Url') ? undefined : json['Url'],
        'certificateFilePassword': !(0, runtime_1.exists)(json, 'CertificateFilePassword') ? undefined : json['CertificateFilePassword'],
        'certificateFileKey': !(0, runtime_1.exists)(json, 'CertificateFileKey') ? undefined : json['CertificateFileKey'],
        'agentMode': !(0, runtime_1.exists)(json, 'AgentMode') ? undefined : json['AgentMode'],
    };
}
exports.FormAuthenticationCyberArkVaultSettingFromJSONTyped = FormAuthenticationCyberArkVaultSettingFromJSONTyped;
function FormAuthenticationCyberArkVaultSettingToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'IntegrationId': value.integrationId,
        'CyberArkUseStaticUsername': value.cyberArkUseStaticUsername,
        'CyberArkStaticUsername': value.cyberArkStaticUsername,
        'CyberArkUserNameQuery': value.cyberArkUserNameQuery,
        'CyberArkPasswordQuery': value.cyberArkPasswordQuery,
        'Url': value.url,
        'CertificateFilePassword': value.certificateFilePassword,
        'CertificateFileKey': value.certificateFileKey,
        'AgentMode': value.agentMode,
    };
}
exports.FormAuthenticationCyberArkVaultSettingToJSON = FormAuthenticationCyberArkVaultSettingToJSON;
//# sourceMappingURL=FormAuthenticationCyberArkVaultSetting.js.map