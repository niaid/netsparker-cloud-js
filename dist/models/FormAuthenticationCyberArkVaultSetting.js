"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FormAuthenticationCyberArkVaultSettingToJSON = exports.FormAuthenticationCyberArkVaultSettingFromJSONTyped = exports.FormAuthenticationCyberArkVaultSettingFromJSON = exports.instanceOfFormAuthenticationCyberArkVaultSetting = exports.FormAuthenticationCyberArkVaultSettingAgentModeEnum = void 0;
/**
 * @export
 */
exports.FormAuthenticationCyberArkVaultSettingAgentModeEnum = {
    Cloud: 'Cloud',
    Internal: 'Internal'
};
/**
 * Check if a given object implements the FormAuthenticationCyberArkVaultSetting interface.
 */
function instanceOfFormAuthenticationCyberArkVaultSetting(value) {
    return true;
}
exports.instanceOfFormAuthenticationCyberArkVaultSetting = instanceOfFormAuthenticationCyberArkVaultSetting;
function FormAuthenticationCyberArkVaultSettingFromJSON(json) {
    return FormAuthenticationCyberArkVaultSettingFromJSONTyped(json, false);
}
exports.FormAuthenticationCyberArkVaultSettingFromJSON = FormAuthenticationCyberArkVaultSettingFromJSON;
function FormAuthenticationCyberArkVaultSettingFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'integrationId': json['IntegrationId'] == null ? undefined : json['IntegrationId'],
        'cyberArkUseStaticUsername': json['CyberArkUseStaticUsername'] == null ? undefined : json['CyberArkUseStaticUsername'],
        'cyberArkStaticUsername': json['CyberArkStaticUsername'] == null ? undefined : json['CyberArkStaticUsername'],
        'cyberArkUserNameQuery': json['CyberArkUserNameQuery'] == null ? undefined : json['CyberArkUserNameQuery'],
        'cyberArkPasswordQuery': json['CyberArkPasswordQuery'] == null ? undefined : json['CyberArkPasswordQuery'],
        'url': json['Url'] == null ? undefined : json['Url'],
        'certificateFilePassword': json['CertificateFilePassword'] == null ? undefined : json['CertificateFilePassword'],
        'certificateFileKey': json['CertificateFileKey'] == null ? undefined : json['CertificateFileKey'],
        'agentMode': json['AgentMode'] == null ? undefined : json['AgentMode'],
    };
}
exports.FormAuthenticationCyberArkVaultSettingFromJSONTyped = FormAuthenticationCyberArkVaultSettingFromJSONTyped;
function FormAuthenticationCyberArkVaultSettingToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        'IntegrationId': value['integrationId'],
        'CyberArkUseStaticUsername': value['cyberArkUseStaticUsername'],
        'CyberArkStaticUsername': value['cyberArkStaticUsername'],
        'CyberArkUserNameQuery': value['cyberArkUserNameQuery'],
        'CyberArkPasswordQuery': value['cyberArkPasswordQuery'],
        'Url': value['url'],
        'CertificateFilePassword': value['certificateFilePassword'],
        'CertificateFileKey': value['certificateFileKey'],
        'AgentMode': value['agentMode'],
    };
}
exports.FormAuthenticationCyberArkVaultSettingToJSON = FormAuthenticationCyberArkVaultSettingToJSON;
//# sourceMappingURL=FormAuthenticationCyberArkVaultSetting.js.map