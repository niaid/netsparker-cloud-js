"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FormAuthenticationHashicorpVaultSecretSettingToJSON = exports.FormAuthenticationHashicorpVaultSecretSettingFromJSONTyped = exports.FormAuthenticationHashicorpVaultSecretSettingFromJSON = exports.instanceOfFormAuthenticationHashicorpVaultSecretSetting = exports.FormAuthenticationHashicorpVaultSecretSettingVersionEnum = void 0;
const runtime_1 = require("../runtime");
/**
* @export
* @enum {string}
*/
var FormAuthenticationHashicorpVaultSecretSettingVersionEnum;
(function (FormAuthenticationHashicorpVaultSecretSettingVersionEnum) {
    FormAuthenticationHashicorpVaultSecretSettingVersionEnum["V1"] = "V1";
    FormAuthenticationHashicorpVaultSecretSettingVersionEnum["V2"] = "V2";
})(FormAuthenticationHashicorpVaultSecretSettingVersionEnum = exports.FormAuthenticationHashicorpVaultSecretSettingVersionEnum || (exports.FormAuthenticationHashicorpVaultSecretSettingVersionEnum = {}));
/**
 * Check if a given object implements the FormAuthenticationHashicorpVaultSecretSetting interface.
 */
function instanceOfFormAuthenticationHashicorpVaultSecretSetting(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfFormAuthenticationHashicorpVaultSecretSetting = instanceOfFormAuthenticationHashicorpVaultSecretSetting;
function FormAuthenticationHashicorpVaultSecretSettingFromJSON(json) {
    return FormAuthenticationHashicorpVaultSecretSettingFromJSONTyped(json, false);
}
exports.FormAuthenticationHashicorpVaultSecretSettingFromJSON = FormAuthenticationHashicorpVaultSecretSettingFromJSON;
function FormAuthenticationHashicorpVaultSecretSettingFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'integrationId': !(0, runtime_1.exists)(json, 'IntegrationId') ? undefined : json['IntegrationId'],
        'version': !(0, runtime_1.exists)(json, 'Version') ? undefined : json['Version'],
        'secretEngine': !(0, runtime_1.exists)(json, 'SecretEngine') ? undefined : json['SecretEngine'],
        'secret': !(0, runtime_1.exists)(json, 'Secret') ? undefined : json['Secret'],
        'useStaticUsername': !(0, runtime_1.exists)(json, 'UseStaticUsername') ? undefined : json['UseStaticUsername'],
        'staticUsername': !(0, runtime_1.exists)(json, 'StaticUsername') ? undefined : json['StaticUsername'],
        'usernameKey': !(0, runtime_1.exists)(json, 'UsernameKey') ? undefined : json['UsernameKey'],
        'passwordKey': !(0, runtime_1.exists)(json, 'PasswordKey') ? undefined : json['PasswordKey'],
    };
}
exports.FormAuthenticationHashicorpVaultSecretSettingFromJSONTyped = FormAuthenticationHashicorpVaultSecretSettingFromJSONTyped;
function FormAuthenticationHashicorpVaultSecretSettingToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'IntegrationId': value.integrationId,
        'Version': value.version,
        'SecretEngine': value.secretEngine,
        'Secret': value.secret,
        'UseStaticUsername': value.useStaticUsername,
        'StaticUsername': value.staticUsername,
        'UsernameKey': value.usernameKey,
        'PasswordKey': value.passwordKey,
    };
}
exports.FormAuthenticationHashicorpVaultSecretSettingToJSON = FormAuthenticationHashicorpVaultSecretSettingToJSON;
//# sourceMappingURL=FormAuthenticationHashicorpVaultSecretSetting.js.map