/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Represents a Form Authentication persona.
 * @export
 * @interface FormAuthenticationPersona
 */
export interface FormAuthenticationPersona {
    /**
     * Gets or sets a value indicating whether this persona is the active one to use for a scan.
     * @type {boolean}
     * @memberof FormAuthenticationPersona
     */
    isActive?: boolean;
    /**
     * Gets or sets the password.
     * @type {string}
     * @memberof FormAuthenticationPersona
     */
    password?: string;
    /**
     * Gets or sets the user name.
     * @type {string}
     * @memberof FormAuthenticationPersona
     */
    userName?: string;
    /**
     * Gets or sets OtpType.
     * @type {string}
     * @memberof FormAuthenticationPersona
     */
    otpType?: FormAuthenticationPersonaOtpTypeEnum;
    /**
     * Gets or sets secret key.
     * @type {string}
     * @memberof FormAuthenticationPersona
     */
    secretKey?: string;
    /**
     * Gets or sets digit.
     * @type {number}
     * @memberof FormAuthenticationPersona
     */
    digit?: number;
    /**
     * Gets or sets period (seconds).
     * @type {number}
     * @memberof FormAuthenticationPersona
     */
    period?: number;
    /**
     * Gets or sets hash algorithm.
     * @type {string}
     * @memberof FormAuthenticationPersona
     */
    algorithm?: FormAuthenticationPersonaAlgorithmEnum;
    /**
     * Gets or sets the type of form authentication.
     * @type {string}
     * @memberof FormAuthenticationPersona
     */
    formAuthType?: FormAuthenticationPersonaFormAuthTypeEnum;
    /**
     * Gets or sets the integration id.
     * @type {string}
     * @memberof FormAuthenticationPersona
     */
    integrationId?: string;
    /**
     * Gets or sets the KV Secret engine version.
     * @type {string}
     * @memberof FormAuthenticationPersona
     */
    version?: FormAuthenticationPersonaVersionEnum;
    /**
     * Gets or sets the secret engine.
     * @type {string}
     * @memberof FormAuthenticationPersona
     */
    secretEngine?: string;
    /**
     * Gets or sets the secret.
     * @type {string}
     * @memberof FormAuthenticationPersona
     */
    secret?: string;
    /**
     * Gets or sets the username is static or not.
     * @type {boolean}
     * @memberof FormAuthenticationPersona
     */
    useStaticUsername?: boolean;
    /**
     * Gets or sets the static username.
     * @type {string}
     * @memberof FormAuthenticationPersona
     */
    staticUsername?: string;
    /**
     * Gets or sets the username key.
     * @type {string}
     * @memberof FormAuthenticationPersona
     */
    usernameKey?: string;
    /**
     * Gets or sets the password key.
     * @type {string}
     * @memberof FormAuthenticationPersona
     */
    passwordKey?: string;
    /**
     * Gets or sets the username is static or not.
     * @type {boolean}
     * @memberof FormAuthenticationPersona
     */
    cyberArkUseStaticUsername?: boolean;
    /**
     * Gets or sets the AppID.
     * @type {string}
     * @memberof FormAuthenticationPersona
     */
    cyberArkStaticUsername?: string;
    /**
     * Gets or sets the Query.
     * @type {string}
     * @memberof FormAuthenticationPersona
     */
    cyberArkUserNameQuery?: string;
    /**
     * Gets or sets the Query.
     * @type {string}
     * @memberof FormAuthenticationPersona
     */
    cyberArkPasswordQuery?: string;
    /**
     * Gets or sets the Azure username is static or not.
     * @type {boolean}
     * @memberof FormAuthenticationPersona
     */
    azureUseStaticUsername?: boolean;
    /**
     * Gets or sets the Azure AppID.
     * @type {string}
     * @memberof FormAuthenticationPersona
     */
    azureStaticUsername?: string;
    /**
     * Gets or sets the Azure Secret.
     * @type {string}
     * @memberof FormAuthenticationPersona
     */
    azureSecret?: string;
    /**
     * Gets or sets the Azure Vault Name.
     * @type {string}
     * @memberof FormAuthenticationPersona
     */
    azureVaultName?: string;
    /**
     * Gets or sets the Azure username key.
     * @type {string}
     * @memberof FormAuthenticationPersona
     */
    azureUsernameKey?: string;
    /**
     * Gets or sets the Azure password key.
     * @type {string}
     * @memberof FormAuthenticationPersona
     */
    azurePasswordKey?: string;
    /**
     * Gets or sets the user name that not modified by user on client side.
     * @type {string}
     * @memberof FormAuthenticationPersona
     */
    originalUserName?: string;
    /**
     * Gets or sets a value indicating whether the placeholders is replaced with actual credentials.
     * @type {boolean}
     * @memberof FormAuthenticationPersona
     */
    isReplacedCredentials?: boolean;
    /**
     *
     * @type {number}
     * @memberof FormAuthenticationPersona
     */
    index?: number;
}
/**
* @export
* @enum {string}
*/
export declare enum FormAuthenticationPersonaOtpTypeEnum {
    Totp = "Totp",
    Hotp = "Hotp"
}
/**
* @export
* @enum {string}
*/
export declare enum FormAuthenticationPersonaAlgorithmEnum {
    Sha1 = "Sha1",
    Sha256 = "Sha256",
    Sha512 = "Sha512"
}
/**
* @export
* @enum {string}
*/
export declare enum FormAuthenticationPersonaFormAuthTypeEnum {
    Manual = "Manual",
    Integration = "Integration"
}
/**
* @export
* @enum {string}
*/
export declare enum FormAuthenticationPersonaVersionEnum {
    V1 = "V1",
    V2 = "V2"
}
/**
 * Check if a given object implements the FormAuthenticationPersona interface.
 */
export declare function instanceOfFormAuthenticationPersona(value: object): boolean;
export declare function FormAuthenticationPersonaFromJSON(json: any): FormAuthenticationPersona;
export declare function FormAuthenticationPersonaFromJSONTyped(json: any, ignoreDiscriminator: boolean): FormAuthenticationPersona;
export declare function FormAuthenticationPersonaToJSON(value?: FormAuthenticationPersona | null): any;
