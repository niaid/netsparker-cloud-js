/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { ServiceNowIncidentFieldPairValue } from './ServiceNowIncidentFieldPairValue';
import type { ServiceNowIncidentMapping } from './ServiceNowIncidentMapping';
import type { ServiceNowIntegrationInfoModelFieldMappingsDictionary } from './ServiceNowIntegrationInfoModelFieldMappingsDictionary';
import type { IntegrationWizardResultModel } from './IntegrationWizardResultModel';
import type { IntegrationCustomFieldVm } from './IntegrationCustomFieldVm';
/**
 * The ServiceNow integration info
 * @export
 * @interface ServiceNowIntegrationInfoModel
 */
export interface ServiceNowIntegrationInfoModel {
    /**
     * Gets or sets the assigned to ID.
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    assignedToId?: string;
    /**
     * Gets or sets the caller ID.
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    callerId?: string;
    /**
     * Gets or sets the category to assign cases to.
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    serviceNowCategoryTypes?: ServiceNowIntegrationInfoModelServiceNowCategoryTypesEnum;
    /**
     * Gets or sets the category to assign cases to.
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    categoryTypes?: string;
    /**
     * Gets or sets the type of the issue.
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    readonly reopenStatus?: string;
    /**
     * Gets or sets the category types
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    serviceNowReopenCategoryType?: ServiceNowIntegrationInfoModelServiceNowReopenCategoryTypeEnum;
    /**
     * Gets or sets the category types
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    serviceNowOnHoldReasonType?: ServiceNowIntegrationInfoModelServiceNowOnHoldReasonTypeEnum;
    /**
     * if this option selected , after retesting change the status of fixed vulnerabilities to Closed..
     * @type {boolean}
     * @memberof ServiceNowIntegrationInfoModel
     */
    closeTheFixedVulnerabilities?: boolean;
    /**
     * Gets or sets the category to assign cases to.
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    category?: string;
    /**
     * Gets or sets the due date.
     * @type {number}
     * @memberof ServiceNowIntegrationInfoModel
     */
    dueDays?: number;
    /**
     * The severity of the incident.
     * @type {number}
     * @memberof ServiceNowIntegrationInfoModel
     */
    severity?: number;
    /**
     * Gets or sets the ServiceNow password for the user.
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    password: string;
    /**
     * Gets or sets the type of the issue. Need to be overriden for webhooks supported integrations
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    readonly resolvedStatus?: string;
    /**
     * Gets or sets the ServiceNow resolved type of the issue.
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    resolvedStatusServiceNow?: ServiceNowIntegrationInfoModelResolvedStatusServiceNowEnum;
    /**
     * Gets or sets the URL.
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    url: string;
    /**
     * Gets FogBugz web hook URL.
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    readonly webhookUrl?: string;
    /**
     * Gets or sets the username.
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    username: string;
    /**
     *
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    templateType?: ServiceNowIntegrationInfoModelTemplateTypeEnum;
    /**
     *
     * @type {ServiceNowIntegrationInfoModelFieldMappingsDictionary}
     * @memberof ServiceNowIntegrationInfoModel
     */
    fieldMappingsDictionary?: ServiceNowIntegrationInfoModelFieldMappingsDictionary;
    /**
     * Returns ServiceNow incident field pairs.
     * @type {{ [key: string]: ServiceNowIncidentFieldPairValue; }}
     * @memberof ServiceNowIntegrationInfoModel
     */
    incidentFieldPairs?: {
        [key: string]: ServiceNowIncidentFieldPairValue;
    };
    /**
     * Returns whether servicenow integration is created with improved version .
     * @type {boolean}
     * @memberof ServiceNowIntegrationInfoModel
     */
    isImprovedVersion?: boolean;
    /**
     * Returns ServiceNow incident field mappings.
     * @type {Array<ServiceNowIncidentMapping>}
     * @memberof ServiceNowIntegrationInfoModel
     */
    fieldMappings?: Array<ServiceNowIncidentMapping>;
    /**
     *
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    readonly type?: ServiceNowIntegrationInfoModelTypeEnum;
    /**
     *
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    readonly genericErrorMessage?: string;
    /**
     *
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    readonly identifier?: string;
    /**
     *
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    readonly testMessageBody?: string;
    /**
     *
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    readonly testMessageTitle?: string;
    /**
     *
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    name?: string;
    /**
     *
     * @type {number}
     * @memberof ServiceNowIntegrationInfoModel
     */
    integrationVersion?: number;
    /**
     *
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    accountID?: string;
    /**
     *
     * @type {Array<IntegrationCustomFieldVm>}
     * @memberof ServiceNowIntegrationInfoModel
     */
    customFields?: Array<IntegrationCustomFieldVm>;
    /**
     *
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    titleFormat: string;
    /**
     *
     * @type {IntegrationWizardResultModel}
     * @memberof ServiceNowIntegrationInfoModel
     */
    integrationWizardResultModel?: IntegrationWizardResultModel;
    /**
     *
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof ServiceNowIntegrationInfoModel
     */
    state?: ServiceNowIntegrationInfoModelStateEnum;
}
/**
 * @export
 */
export declare const ServiceNowIntegrationInfoModelServiceNowCategoryTypesEnum: {
    readonly Inquiry: "Inquiry";
    readonly Software: "Software";
    readonly Hardware: "Hardware";
    readonly Network: "Network";
    readonly Database: "Database";
};
export type ServiceNowIntegrationInfoModelServiceNowCategoryTypesEnum = typeof ServiceNowIntegrationInfoModelServiceNowCategoryTypesEnum[keyof typeof ServiceNowIntegrationInfoModelServiceNowCategoryTypesEnum];
/**
 * @export
 */
export declare const ServiceNowIntegrationInfoModelServiceNowReopenCategoryTypeEnum: {
    readonly New: "New";
    readonly InProgress: "In_Progress";
    readonly OnHold: "On_Hold";
};
export type ServiceNowIntegrationInfoModelServiceNowReopenCategoryTypeEnum = typeof ServiceNowIntegrationInfoModelServiceNowReopenCategoryTypeEnum[keyof typeof ServiceNowIntegrationInfoModelServiceNowReopenCategoryTypeEnum];
/**
 * @export
 */
export declare const ServiceNowIntegrationInfoModelServiceNowOnHoldReasonTypeEnum: {
    readonly AwaitingCaller: "AwaitingCaller";
    readonly AwaitingChange: "AwaitingChange";
    readonly AwaitingProblem: "AwaitingProblem";
    readonly AwaitingVendor: "AwaitingVendor";
};
export type ServiceNowIntegrationInfoModelServiceNowOnHoldReasonTypeEnum = typeof ServiceNowIntegrationInfoModelServiceNowOnHoldReasonTypeEnum[keyof typeof ServiceNowIntegrationInfoModelServiceNowOnHoldReasonTypeEnum];
/**
 * @export
 */
export declare const ServiceNowIntegrationInfoModelResolvedStatusServiceNowEnum: {
    readonly Resolved: "Resolved";
    readonly Closed: "Closed";
};
export type ServiceNowIntegrationInfoModelResolvedStatusServiceNowEnum = typeof ServiceNowIntegrationInfoModelResolvedStatusServiceNowEnum[keyof typeof ServiceNowIntegrationInfoModelResolvedStatusServiceNowEnum];
/**
 * @export
 */
export declare const ServiceNowIntegrationInfoModelTemplateTypeEnum: {
    readonly Standard: "Standard";
    readonly Detailed: "Detailed";
};
export type ServiceNowIntegrationInfoModelTemplateTypeEnum = typeof ServiceNowIntegrationInfoModelTemplateTypeEnum[keyof typeof ServiceNowIntegrationInfoModelTemplateTypeEnum];
/**
 * @export
 */
export declare const ServiceNowIntegrationInfoModelTypeEnum: {
    readonly Jira: "Jira";
    readonly GitHub: "GitHub";
    readonly Tfs: "TFS";
    readonly FogBugz: "FogBugz";
    readonly ServiceNow: "ServiceNow";
    readonly Slack: "Slack";
    readonly GitLab: "GitLab";
    readonly Bitbucket: "Bitbucket";
    readonly Unfuddle: "Unfuddle";
    readonly Zapier: "Zapier";
    readonly AzureDevOps: "AzureDevOps";
    readonly Redmine: "Redmine";
    readonly Bugzilla: "Bugzilla";
    readonly Kafka: "Kafka";
    readonly PagerDuty: "PagerDuty";
    readonly MicrosoftTeams: "MicrosoftTeams";
    readonly Clubhouse: "Clubhouse";
    readonly Trello: "Trello";
    readonly Asana: "Asana";
    readonly Webhook: "Webhook";
    readonly Kenna: "Kenna";
    readonly Freshservice: "Freshservice";
    readonly YouTrack: "YouTrack";
    readonly NetsparkerEnterprise: "NetsparkerEnterprise";
    readonly Splunk: "Splunk";
    readonly Mattermost: "Mattermost";
    readonly Hashicorp: "Hashicorp";
    readonly PivotalTracker: "PivotalTracker";
    readonly CyberArk: "CyberArk";
    readonly DefectDojo: "DefectDojo";
    readonly JazzTeam: "JazzTeam";
    readonly AzureKeyVault: "AzureKeyVault";
    readonly ServiceNowVrm: "ServiceNowVRM";
};
export type ServiceNowIntegrationInfoModelTypeEnum = typeof ServiceNowIntegrationInfoModelTypeEnum[keyof typeof ServiceNowIntegrationInfoModelTypeEnum];
/**
 * @export
 */
export declare const ServiceNowIntegrationInfoModelStateEnum: {
    readonly Active: "Active";
    readonly Suspended: "Suspended";
};
export type ServiceNowIntegrationInfoModelStateEnum = typeof ServiceNowIntegrationInfoModelStateEnum[keyof typeof ServiceNowIntegrationInfoModelStateEnum];
/**
 * Check if a given object implements the ServiceNowIntegrationInfoModel interface.
 */
export declare function instanceOfServiceNowIntegrationInfoModel(value: object): boolean;
export declare function ServiceNowIntegrationInfoModelFromJSON(json: any): ServiceNowIntegrationInfoModel;
export declare function ServiceNowIntegrationInfoModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServiceNowIntegrationInfoModel;
export declare function ServiceNowIntegrationInfoModelToJSON(value?: Omit<ServiceNowIntegrationInfoModel, 'ReopenStatus' | 'ResolvedStatus' | 'WebhookUrl' | 'Type' | 'GenericErrorMessage' | 'Identifier' | 'TestMessageBody' | 'TestMessageTitle'> | null): any;
