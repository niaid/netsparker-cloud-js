"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuditLogDtoToJSON = exports.AuditLogDtoFromJSONTyped = exports.AuditLogDtoFromJSON = exports.instanceOfAuditLogDto = exports.AuditLogDtoTypeEnum = exports.AuditLogDtoEndpointTypeEnum = void 0;
const runtime_1 = require("../runtime");
/**
* @export
* @enum {string}
*/
var AuditLogDtoEndpointTypeEnum;
(function (AuditLogDtoEndpointTypeEnum) {
    AuditLogDtoEndpointTypeEnum["Web"] = "Web";
    AuditLogDtoEndpointTypeEnum["Api"] = "Api";
    AuditLogDtoEndpointTypeEnum["BackgroundTask"] = "BackgroundTask";
})(AuditLogDtoEndpointTypeEnum = exports.AuditLogDtoEndpointTypeEnum || (exports.AuditLogDtoEndpointTypeEnum = {}));
/**
* @export
* @enum {string}
*/
var AuditLogDtoTypeEnum;
(function (AuditLogDtoTypeEnum) {
    AuditLogDtoTypeEnum["Signin"] = "Signin";
    AuditLogDtoTypeEnum["Signout"] = "Signout";
    AuditLogDtoTypeEnum["Signup"] = "Signup";
    AuditLogDtoTypeEnum["ResentConfirmationEmail"] = "ResentConfirmationEmail";
    AuditLogDtoTypeEnum["EmailConfirmed"] = "EmailConfirmed";
    AuditLogDtoTypeEnum["PasswordResetRequested"] = "PasswordResetRequested";
    AuditLogDtoTypeEnum["PasswordResetSucceeded"] = "PasswordResetSucceeded";
    AuditLogDtoTypeEnum["PasswordChanged"] = "PasswordChanged";
    AuditLogDtoTypeEnum["UserAccountUpdated"] = "UserAccountUpdated";
    AuditLogDtoTypeEnum["UserCreated"] = "UserCreated";
    AuditLogDtoTypeEnum["UserUpdated"] = "UserUpdated";
    AuditLogDtoTypeEnum["AccessTokenReset"] = "AccessTokenReset";
    AuditLogDtoTypeEnum["ScanStarted"] = "ScanStarted";
    AuditLogDtoTypeEnum["ScanCancelled"] = "ScanCancelled";
    AuditLogDtoTypeEnum["WebsiteGroupCreated"] = "WebsiteGroupCreated";
    AuditLogDtoTypeEnum["WebsiteGroupDeleted"] = "WebsiteGroupDeleted";
    AuditLogDtoTypeEnum["WebsiteGroupUpdated"] = "WebsiteGroupUpdated";
    AuditLogDtoTypeEnum["WebsiteCreated"] = "WebsiteCreated";
    AuditLogDtoTypeEnum["WebsiteUpdated"] = "WebsiteUpdated";
    AuditLogDtoTypeEnum["WebsiteDeleted"] = "WebsiteDeleted";
    AuditLogDtoTypeEnum["ScheduledScanDeleted"] = "ScheduledScanDeleted";
    AuditLogDtoTypeEnum["ScheduledScanCreated"] = "ScheduledScanCreated";
    AuditLogDtoTypeEnum["ScheduledScanUpdated"] = "ScheduledScanUpdated";
    AuditLogDtoTypeEnum["ScanPolicyCreated"] = "ScanPolicyCreated";
    AuditLogDtoTypeEnum["ScanPolicyUpdated"] = "ScanPolicyUpdated";
    AuditLogDtoTypeEnum["ScanPolicyDeleted"] = "ScanPolicyDeleted";
    AuditLogDtoTypeEnum["CheckedUpdates"] = "CheckedUpdates";
    AuditLogDtoTypeEnum["ScanDeleted"] = "ScanDeleted";
    AuditLogDtoTypeEnum["SigninAs"] = "SigninAs";
    AuditLogDtoTypeEnum["TwoFactorAuthenticationDisabled"] = "TwoFactorAuthenticationDisabled";
    AuditLogDtoTypeEnum["TwoFactorAuthenticationConfigured"] = "TwoFactorAuthenticationConfigured";
    AuditLogDtoTypeEnum["TwoFactorAuthenticationRecoveryCodesViewed"] = "TwoFactorAuthenticationRecoveryCodesViewed";
    AuditLogDtoTypeEnum["TwoFactorAuthenticationEnforcementChanged"] = "TwoFactorAuthenticationEnforcementChanged";
    AuditLogDtoTypeEnum["SigninWithRecoveryCode"] = "SigninWithRecoveryCode";
    AuditLogDtoTypeEnum["IssueCreated"] = "IssueCreated";
    AuditLogDtoTypeEnum["IssueUpdated"] = "IssueUpdated";
    AuditLogDtoTypeEnum["DeleteUser"] = "DeleteUser";
    AuditLogDtoTypeEnum["StartVerification"] = "StartVerification";
    AuditLogDtoTypeEnum["VerifyOwnership"] = "VerifyOwnership";
    AuditLogDtoTypeEnum["ScanPaused"] = "ScanPaused";
    AuditLogDtoTypeEnum["ScanResumed"] = "ScanResumed";
    AuditLogDtoTypeEnum["AccountLicenseUpdated"] = "AccountLicenseUpdated";
    AuditLogDtoTypeEnum["InvitationLicenseUpdated"] = "InvitationLicenseUpdated";
    AuditLogDtoTypeEnum["MarkedLateConfirmation"] = "MarkedLateConfirmation";
    AuditLogDtoTypeEnum["ConfirmSupportAccessRequest"] = "ConfirmSupportAccessRequest";
    AuditLogDtoTypeEnum["AgentGroupCreated"] = "AgentGroupCreated";
    AuditLogDtoTypeEnum["AgentGroupUpdated"] = "AgentGroupUpdated";
    AuditLogDtoTypeEnum["AgentGroupDeleted"] = "AgentGroupDeleted";
    AuditLogDtoTypeEnum["IpRestrictionAdded"] = "IpRestrictionAdded";
    AuditLogDtoTypeEnum["IpRestrictionUpdated"] = "IpRestrictionUpdated";
    AuditLogDtoTypeEnum["IpRestrictionDeleted"] = "IpRestrictionDeleted";
    AuditLogDtoTypeEnum["IpRestrictionsStatusChanged"] = "IpRestrictionsStatusChanged";
    AuditLogDtoTypeEnum["RawScanFileRetentionPeriodEnabled"] = "RawScanFileRetentionPeriodEnabled";
    AuditLogDtoTypeEnum["RawScanFileRetentionPeriodDisabled"] = "RawScanFileRetentionPeriodDisabled";
    AuditLogDtoTypeEnum["AccountUpdated"] = "AccountUpdated";
    AuditLogDtoTypeEnum["ScanNotificationRuleCreated"] = "ScanNotificationRuleCreated";
    AuditLogDtoTypeEnum["ScanNotificationRuleUpdated"] = "ScanNotificationRuleUpdated";
    AuditLogDtoTypeEnum["ScanNotificationRuleDeleted"] = "ScanNotificationRuleDeleted";
    AuditLogDtoTypeEnum["ScanNotificationRulePrioritiesUpdated"] = "ScanNotificationRulePrioritiesUpdated";
    AuditLogDtoTypeEnum["ReportPolicyCreated"] = "ReportPolicyCreated";
    AuditLogDtoTypeEnum["ReportPolicyUpdated"] = "ReportPolicyUpdated";
    AuditLogDtoTypeEnum["ReportPolicyDeleted"] = "ReportPolicyDeleted";
    AuditLogDtoTypeEnum["AgentDeleted"] = "AgentDeleted";
    AuditLogDtoTypeEnum["DeleteAccount"] = "DeleteAccount";
    AuditLogDtoTypeEnum["NsScanImported"] = "NsScanImported";
    AuditLogDtoTypeEnum["AccountsMerged"] = "AccountsMerged";
    AuditLogDtoTypeEnum["TooManyRequests"] = "TooManyRequests";
    AuditLogDtoTypeEnum["SupportEditedUser"] = "SupportEditedUser";
    AuditLogDtoTypeEnum["AgentsAutoUpdateSettingChanged"] = "AgentsAutoUpdateSettingChanged";
    AuditLogDtoTypeEnum["WebsiteGroupTechContactChanged"] = "WebsiteGroupTechContactChanged";
    AuditLogDtoTypeEnum["CreateInvitation"] = "CreateInvitation";
    AuditLogDtoTypeEnum["DeleteInvitation"] = "DeleteInvitation";
    AuditLogDtoTypeEnum["ScanProfileCreated"] = "ScanProfileCreated";
    AuditLogDtoTypeEnum["ScanProfileUpdated"] = "ScanProfileUpdated";
    AuditLogDtoTypeEnum["ScanProfileDeleted"] = "ScanProfileDeleted";
    AuditLogDtoTypeEnum["GeneralSettingsUpdated"] = "GeneralSettingsUpdated";
    AuditLogDtoTypeEnum["SecuritySettingsUpdated"] = "SecuritySettingsUpdated";
    AuditLogDtoTypeEnum["DatabaseSettingsUpdated"] = "DatabaseSettingsUpdated";
    AuditLogDtoTypeEnum["EmailSettingsUpdated"] = "EmailSettingsUpdated";
    AuditLogDtoTypeEnum["SmsSettingsUpdated"] = "SmsSettingsUpdated";
    AuditLogDtoTypeEnum["CloudProviderUpdated"] = "CloudProviderUpdated";
    AuditLogDtoTypeEnum["SingleSignOnUpdated"] = "SingleSignOnUpdated";
    AuditLogDtoTypeEnum["IpRestrictionsUpdated"] = "IpRestrictionsUpdated";
    AuditLogDtoTypeEnum["TechnologyNotificationChanged"] = "TechnologyNotificationChanged";
    AuditLogDtoTypeEnum["LoginAttemptFailed"] = "LoginAttemptFailed";
    AuditLogDtoTypeEnum["IpRestrictedSessionsStatusChanged"] = "IpRestrictedSessionsStatusChanged";
    AuditLogDtoTypeEnum["U2FSecurityKeyConfigured"] = "U2FSecurityKeyConfigured";
    AuditLogDtoTypeEnum["U2FSecurityKeyReConfigured"] = "U2FSecurityKeyReConfigured";
    AuditLogDtoTypeEnum["AgentTokenReset"] = "AgentTokenReset";
    AuditLogDtoTypeEnum["AddOrUpdateTag"] = "AddOrUpdateTag";
    AuditLogDtoTypeEnum["EncryptionKeysUpdated"] = "EncryptionKeysUpdated";
    AuditLogDtoTypeEnum["EncryptionKeysDownloaded"] = "EncryptionKeysDownloaded";
    AuditLogDtoTypeEnum["RoleCreated"] = "RoleCreated";
    AuditLogDtoTypeEnum["RoleUpdated"] = "RoleUpdated";
    AuditLogDtoTypeEnum["RoleDelete"] = "RoleDelete";
    AuditLogDtoTypeEnum["TeamCreated"] = "TeamCreated";
    AuditLogDtoTypeEnum["TeamUpdated"] = "TeamUpdated";
    AuditLogDtoTypeEnum["TeamDelete"] = "TeamDelete";
    AuditLogDtoTypeEnum["DefectDojoReportImported"] = "DefectDojoReportImported";
    AuditLogDtoTypeEnum["DefectDojoReportImportFailed"] = "DefectDojoReportImportFailed";
    AuditLogDtoTypeEnum["ScanDataRetentionPeriodEnabled"] = "ScanDataRetentionPeriodEnabled";
    AuditLogDtoTypeEnum["ScanDataRetentionPeriodDisabled"] = "ScanDataRetentionPeriodDisabled";
    AuditLogDtoTypeEnum["ScanQueuedAgain"] = "ScanQueuedAgain";
    AuditLogDtoTypeEnum["ScanFailed"] = "ScanFailed";
    AuditLogDtoTypeEnum["AgentCommandDelete"] = "AgentCommandDelete";
    AuditLogDtoTypeEnum["ImportWebsite"] = "ImportWebsite";
})(AuditLogDtoTypeEnum = exports.AuditLogDtoTypeEnum || (exports.AuditLogDtoTypeEnum = {}));
/**
 * Check if a given object implements the AuditLogDto interface.
 */
function instanceOfAuditLogDto(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfAuditLogDto = instanceOfAuditLogDto;
function AuditLogDtoFromJSON(json) {
    return AuditLogDtoFromJSONTyped(json, false);
}
exports.AuditLogDtoFromJSON = AuditLogDtoFromJSON;
function AuditLogDtoFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'accountId': !(0, runtime_1.exists)(json, 'AccountId') ? undefined : json['AccountId'],
        'createdAt': !(0, runtime_1.exists)(json, 'CreatedAt') ? undefined : (new Date(json['CreatedAt'])),
        'endpointType': !(0, runtime_1.exists)(json, 'EndpointType') ? undefined : json['EndpointType'],
        'id': !(0, runtime_1.exists)(json, 'Id') ? undefined : json['Id'],
        'type': !(0, runtime_1.exists)(json, 'Type') ? undefined : json['Type'],
        'userEmail': !(0, runtime_1.exists)(json, 'UserEmail') ? undefined : json['UserEmail'],
        'userId': !(0, runtime_1.exists)(json, 'UserId') ? undefined : json['UserId'],
        'userName': !(0, runtime_1.exists)(json, 'UserName') ? undefined : json['UserName'],
        'message': !(0, runtime_1.exists)(json, 'Message') ? undefined : json['Message'],
        'requestData': !(0, runtime_1.exists)(json, 'RequestData') ? undefined : json['RequestData'],
    };
}
exports.AuditLogDtoFromJSONTyped = AuditLogDtoFromJSONTyped;
function AuditLogDtoToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'AccountId': value.accountId,
        'CreatedAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'EndpointType': value.endpointType,
        'Id': value.id,
        'Type': value.type,
        'UserEmail': value.userEmail,
        'UserId': value.userId,
        'UserName': value.userName,
        'Message': value.message,
        'RequestData': value.requestData,
    };
}
exports.AuditLogDtoToJSON = AuditLogDtoToJSON;
//# sourceMappingURL=AuditLogDto.js.map