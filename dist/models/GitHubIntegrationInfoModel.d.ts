/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { IntegrationCustomFieldVm } from './IntegrationCustomFieldVm';
import type { IntegrationWizardResultModel } from './IntegrationWizardResultModel';
/**
 * The GitHub integration info
 * @export
 * @interface GitHubIntegrationInfoModel
 */
export interface GitHubIntegrationInfoModel {
    /**
     * Gets or sets the access token.
     * @type {string}
     * @memberof GitHubIntegrationInfoModel
     */
    accessToken: string;
    /**
     * The Server URL.
     * @type {string}
     * @memberof GitHubIntegrationInfoModel
     */
    serverUrl: string;
    /**
     * Gets or sets the assignee.
     * @type {string}
     * @memberof GitHubIntegrationInfoModel
     */
    assignee?: string;
    /**
     * Gets or sets the labels.
     * @type {string}
     * @memberof GitHubIntegrationInfoModel
     */
    labels?: string;
    /**
     * Gets or sets the repository.
     * @type {string}
     * @memberof GitHubIntegrationInfoModel
     */
    repository: string;
    /**
     * Gets or sets the username.
     * @type {string}
     * @memberof GitHubIntegrationInfoModel
     */
    username: string;
    /**
     * Gets or sets the organization.
     * @type {string}
     * @memberof GitHubIntegrationInfoModel
     */
    organization?: string;
    /**
     *
     * @type {string}
     * @memberof GitHubIntegrationInfoModel
     */
    readonly type?: GitHubIntegrationInfoModelTypeEnum;
    /**
     *
     * @type {string}
     * @memberof GitHubIntegrationInfoModel
     */
    readonly genericErrorMessage?: string;
    /**
     *
     * @type {string}
     * @memberof GitHubIntegrationInfoModel
     */
    readonly identifier?: string;
    /**
     *
     * @type {string}
     * @memberof GitHubIntegrationInfoModel
     */
    readonly testMessageBody?: string;
    /**
     *
     * @type {string}
     * @memberof GitHubIntegrationInfoModel
     */
    readonly testMessageTitle?: string;
    /**
     *
     * @type {string}
     * @memberof GitHubIntegrationInfoModel
     */
    readonly webhookUrl?: string;
    /**
     *
     * @type {string}
     * @memberof GitHubIntegrationInfoModel
     */
    name?: string;
    /**
     *
     * @type {number}
     * @memberof GitHubIntegrationInfoModel
     */
    integrationVersion?: number;
    /**
     *
     * @type {string}
     * @memberof GitHubIntegrationInfoModel
     */
    accountID?: string;
    /**
     *
     * @type {Array<IntegrationCustomFieldVm>}
     * @memberof GitHubIntegrationInfoModel
     */
    customFields?: Array<IntegrationCustomFieldVm>;
    /**
     *
     * @type {string}
     * @memberof GitHubIntegrationInfoModel
     */
    templateType?: GitHubIntegrationInfoModelTemplateTypeEnum;
    /**
     *
     * @type {string}
     * @memberof GitHubIntegrationInfoModel
     */
    reopenStatus?: string;
    /**
     *
     * @type {string}
     * @memberof GitHubIntegrationInfoModel
     */
    resolvedStatus?: string;
    /**
     *
     * @type {string}
     * @memberof GitHubIntegrationInfoModel
     */
    titleFormat: string;
    /**
     *
     * @type {IntegrationWizardResultModel}
     * @memberof GitHubIntegrationInfoModel
     */
    integrationWizardResultModel?: IntegrationWizardResultModel;
}
/**
* @export
* @enum {string}
*/
export declare enum GitHubIntegrationInfoModelTypeEnum {
    Jira = "Jira",
    GitHub = "GitHub",
    Tfs = "TFS",
    FogBugz = "FogBugz",
    ServiceNow = "ServiceNow",
    Slack = "Slack",
    GitLab = "GitLab",
    Bitbucket = "Bitbucket",
    Unfuddle = "Unfuddle",
    Zapier = "Zapier",
    AzureDevOps = "AzureDevOps",
    Redmine = "Redmine",
    Bugzilla = "Bugzilla",
    Kafka = "Kafka",
    PagerDuty = "PagerDuty",
    MicrosoftTeams = "MicrosoftTeams",
    Clubhouse = "Clubhouse",
    Trello = "Trello",
    Asana = "Asana",
    Webhook = "Webhook",
    Kenna = "Kenna",
    Freshservice = "Freshservice",
    YouTrack = "YouTrack",
    NetsparkerEnterprise = "NetsparkerEnterprise",
    Splunk = "Splunk",
    Mattermost = "Mattermost",
    Hashicorp = "Hashicorp",
    PivotalTracker = "PivotalTracker",
    CyberArk = "CyberArk",
    DefectDojo = "DefectDojo",
    JazzTeam = "JazzTeam",
    AzureKeyVault = "AzureKeyVault",
    ServiceNowVrm = "ServiceNowVRM"
}
/**
* @export
* @enum {string}
*/
export declare enum GitHubIntegrationInfoModelTemplateTypeEnum {
    Standard = "Standard",
    Detailed = "Detailed"
}
/**
 * Check if a given object implements the GitHubIntegrationInfoModel interface.
 */
export declare function instanceOfGitHubIntegrationInfoModel(value: object): boolean;
export declare function GitHubIntegrationInfoModelFromJSON(json: any): GitHubIntegrationInfoModel;
export declare function GitHubIntegrationInfoModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): GitHubIntegrationInfoModel;
export declare function GitHubIntegrationInfoModelToJSON(value?: GitHubIntegrationInfoModel | null): any;
