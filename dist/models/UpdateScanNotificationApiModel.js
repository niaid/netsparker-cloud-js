"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateScanNotificationApiModelToJSON = exports.UpdateScanNotificationApiModelFromJSONTyped = exports.UpdateScanNotificationApiModelFromJSON = exports.instanceOfUpdateScanNotificationApiModel = exports.UpdateScanNotificationApiModelScopeEnum = exports.UpdateScanNotificationApiModelEventEnum = void 0;
const runtime_1 = require("../runtime");
const NewScanNotificationRecipientApiModel_1 = require("./NewScanNotificationRecipientApiModel");
const NotificationEmailSmsFilterApi_1 = require("./NotificationEmailSmsFilterApi");
const NotificationIntegrationFilterApi_1 = require("./NotificationIntegrationFilterApi");
/**
 * @export
 */
exports.UpdateScanNotificationApiModelEventEnum = {
    NewScan: 'NewScan',
    ScanCompleted: 'ScanCompleted',
    ScanCancelled: 'ScanCancelled',
    ScanFailed: 'ScanFailed',
    ScheduledScanLaunchFailed: 'ScheduledScanLaunchFailed',
    OutOfDateTechnology: 'OutOfDateTechnology'
};
/**
 * @export
 */
exports.UpdateScanNotificationApiModelScopeEnum = {
    AnyWebsite: 'AnyWebsite',
    WebsiteGroup: 'WebsiteGroup',
    Website: 'Website'
};
/**
 * Check if a given object implements the UpdateScanNotificationApiModel interface.
 */
function instanceOfUpdateScanNotificationApiModel(value) {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "recipients" in value;
    isInstance = isInstance && "disabled" in value;
    isInstance = isInstance && "event" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "scope" in value;
    return isInstance;
}
exports.instanceOfUpdateScanNotificationApiModel = instanceOfUpdateScanNotificationApiModel;
function UpdateScanNotificationApiModelFromJSON(json) {
    return UpdateScanNotificationApiModelFromJSONTyped(json, false);
}
exports.UpdateScanNotificationApiModelFromJSON = UpdateScanNotificationApiModelFromJSON;
function UpdateScanNotificationApiModelFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'id': json['Id'],
        'recipients': (0, NewScanNotificationRecipientApiModel_1.NewScanNotificationRecipientApiModelFromJSON)(json['Recipients']),
        'websiteGroupName': !(0, runtime_1.exists)(json, 'WebsiteGroupName') ? undefined : json['WebsiteGroupName'],
        'websiteRootUrl': !(0, runtime_1.exists)(json, 'WebsiteRootUrl') ? undefined : json['WebsiteRootUrl'],
        'emailSmsFilter': !(0, runtime_1.exists)(json, 'EmailSmsFilter') ? undefined : (0, NotificationEmailSmsFilterApi_1.NotificationEmailSmsFilterApiFromJSON)(json['EmailSmsFilter']),
        'integrationFilter': !(0, runtime_1.exists)(json, 'IntegrationFilter') ? undefined : (0, NotificationIntegrationFilterApi_1.NotificationIntegrationFilterApiFromJSON)(json['IntegrationFilter']),
        'disabled': json['Disabled'],
        'scanTaskGroupId': !(0, runtime_1.exists)(json, 'ScanTaskGroupId') ? undefined : json['ScanTaskGroupId'],
        'event': json['Event'],
        'name': json['Name'],
        'scope': json['Scope'],
    };
}
exports.UpdateScanNotificationApiModelFromJSONTyped = UpdateScanNotificationApiModelFromJSONTyped;
function UpdateScanNotificationApiModelToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'Id': value.id,
        'Recipients': (0, NewScanNotificationRecipientApiModel_1.NewScanNotificationRecipientApiModelToJSON)(value.recipients),
        'WebsiteGroupName': value.websiteGroupName,
        'WebsiteRootUrl': value.websiteRootUrl,
        'EmailSmsFilter': (0, NotificationEmailSmsFilterApi_1.NotificationEmailSmsFilterApiToJSON)(value.emailSmsFilter),
        'IntegrationFilter': (0, NotificationIntegrationFilterApi_1.NotificationIntegrationFilterApiToJSON)(value.integrationFilter),
        'Disabled': value.disabled,
        'ScanTaskGroupId': value.scanTaskGroupId,
        'Event': value.event,
        'Name': value.name,
        'Scope': value.scope,
    };
}
exports.UpdateScanNotificationApiModelToJSON = UpdateScanNotificationApiModelToJSON;
//# sourceMappingURL=UpdateScanNotificationApiModel.js.map