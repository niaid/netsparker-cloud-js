/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists } from '../runtime';
import { AuthorizationTokenRuleFromJSON, AuthorizationTokenRuleToJSON, } from './AuthorizationTokenRule';
import { FormAuthenticationAzureKeyVaultSettingFromJSON, FormAuthenticationAzureKeyVaultSettingToJSON, } from './FormAuthenticationAzureKeyVaultSetting';
import { FormAuthenticationCustomScriptFromJSON, FormAuthenticationCustomScriptToJSON, } from './FormAuthenticationCustomScript';
import { FormAuthenticationCyberArkVaultSettingFromJSON, FormAuthenticationCyberArkVaultSettingToJSON, } from './FormAuthenticationCyberArkVaultSetting';
import { FormAuthenticationHashicorpVaultSettingFromJSON, FormAuthenticationHashicorpVaultSettingToJSON, } from './FormAuthenticationHashicorpVaultSetting';
import { OtpSettingsFromJSON, OtpSettingsToJSON, } from './OtpSettings';
/**
 * @export
 */
export const FormAuthenticationSettingApiModelFormAuthTypeEnum = {
    Manual: 'Manual',
    Integration: 'Integration'
};
/**
 * @export
 */
export const FormAuthenticationSettingApiModelFormAuthIntegrationTypeEnum = {
    HashiCorp: 'HashiCorp',
    CyberArk: 'CyberArk',
    AzureKeyVault: 'AzureKeyVault'
};
/**
 * Check if a given object implements the FormAuthenticationSettingApiModel interface.
 */
export function instanceOfFormAuthenticationSettingApiModel(value) {
    let isInstance = true;
    return isInstance;
}
export function FormAuthenticationSettingApiModelFromJSON(json) {
    return FormAuthenticationSettingApiModelFromJSONTyped(json, false);
}
export function FormAuthenticationSettingApiModelFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'customScripts': !exists(json, 'CustomScripts') ? undefined : (json['CustomScripts'].map(FormAuthenticationCustomScriptFromJSON)),
        'detectBearerToken': !exists(json, 'DetectBearerToken') ? undefined : json['DetectBearerToken'],
        'detectAuthorizationTokens': !exists(json, 'DetectAuthorizationTokens') ? undefined : json['DetectAuthorizationTokens'],
        'authorizationTokenRules': !exists(json, 'AuthorizationTokenRules') ? undefined : (json['AuthorizationTokenRules'].map(AuthorizationTokenRuleFromJSON)),
        'disableLogoutDetection': !exists(json, 'DisableLogoutDetection') ? undefined : json['DisableLogoutDetection'],
        'loginFormUrl': !exists(json, 'LoginFormUrl') ? undefined : json['LoginFormUrl'],
        'loginRequiredUrl': !exists(json, 'LoginRequiredUrl') ? undefined : json['LoginRequiredUrl'],
        'logoutKeywordPatterns': !exists(json, 'LogoutKeywordPatterns') ? undefined : json['LogoutKeywordPatterns'],
        'logoutRedirectPattern': !exists(json, 'LogoutRedirectPattern') ? undefined : json['LogoutRedirectPattern'],
        'overrideTargetUrlWithAuthenticatedPage': !exists(json, 'OverrideTargetUrlWithAuthenticatedPage') ? undefined : json['OverrideTargetUrlWithAuthenticatedPage'],
        'password': !exists(json, 'Password') ? undefined : json['Password'],
        'userName': !exists(json, 'UserName') ? undefined : json['UserName'],
        'formAuthType': !exists(json, 'FormAuthType') ? undefined : json['FormAuthType'],
        'formAuthIntegrationType': !exists(json, 'FormAuthIntegrationType') ? undefined : json['FormAuthIntegrationType'],
        'otpSettings': !exists(json, 'OtpSettings') ? undefined : OtpSettingsFromJSON(json['OtpSettings']),
        'hashicorpVaultSetting': !exists(json, 'HashicorpVaultSetting') ? undefined : FormAuthenticationHashicorpVaultSettingFromJSON(json['HashicorpVaultSetting']),
        'cyberArkVaultSetting': !exists(json, 'CyberArkVaultSetting') ? undefined : FormAuthenticationCyberArkVaultSettingFromJSON(json['CyberArkVaultSetting']),
        'azureKeyVaultSetting': !exists(json, 'AzureKeyVaultSetting') ? undefined : FormAuthenticationAzureKeyVaultSettingFromJSON(json['AzureKeyVaultSetting']),
    };
}
export function FormAuthenticationSettingApiModelToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'CustomScripts': value.customScripts === undefined ? undefined : (value.customScripts.map(FormAuthenticationCustomScriptToJSON)),
        'DetectBearerToken': value.detectBearerToken,
        'DetectAuthorizationTokens': value.detectAuthorizationTokens,
        'AuthorizationTokenRules': value.authorizationTokenRules === undefined ? undefined : (value.authorizationTokenRules.map(AuthorizationTokenRuleToJSON)),
        'DisableLogoutDetection': value.disableLogoutDetection,
        'LoginFormUrl': value.loginFormUrl,
        'LoginRequiredUrl': value.loginRequiredUrl,
        'LogoutKeywordPatterns': value.logoutKeywordPatterns,
        'LogoutRedirectPattern': value.logoutRedirectPattern,
        'OverrideTargetUrlWithAuthenticatedPage': value.overrideTargetUrlWithAuthenticatedPage,
        'Password': value.password,
        'UserName': value.userName,
        'FormAuthType': value.formAuthType,
        'FormAuthIntegrationType': value.formAuthIntegrationType,
        'OtpSettings': OtpSettingsToJSON(value.otpSettings),
        'HashicorpVaultSetting': FormAuthenticationHashicorpVaultSettingToJSON(value.hashicorpVaultSetting),
        'CyberArkVaultSetting': FormAuthenticationCyberArkVaultSettingToJSON(value.cyberArkVaultSetting),
        'AzureKeyVaultSetting': FormAuthenticationAzureKeyVaultSettingToJSON(value.azureKeyVaultSetting),
    };
}
//# sourceMappingURL=FormAuthenticationSettingApiModel.js.map