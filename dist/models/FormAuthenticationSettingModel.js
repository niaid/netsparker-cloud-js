/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists, mapValues } from '../runtime';
import { AuthorizationTokenRuleFromJSON, AuthorizationTokenRuleToJSON, } from './AuthorizationTokenRule';
import { FormAuthenticationCustomScriptFromJSON, FormAuthenticationCustomScriptToJSON, } from './FormAuthenticationCustomScript';
import { FormAuthenticationPersonaFromJSON, FormAuthenticationPersonaToJSON, } from './FormAuthenticationPersona';
import { LogoutKeywordPatternModelFromJSON, LogoutKeywordPatternModelToJSON, } from './LogoutKeywordPatternModel';
import { ScanNotificationIntegrationViewModelFromJSON, ScanNotificationIntegrationViewModelToJSON, } from './ScanNotificationIntegrationViewModel';
/**
 * Check if a given object implements the FormAuthenticationSettingModel interface.
 */
export function instanceOfFormAuthenticationSettingModel(value) {
    let isInstance = true;
    return isInstance;
}
export function FormAuthenticationSettingModelFromJSON(json) {
    return FormAuthenticationSettingModelFromJSONTyped(json, false);
}
export function FormAuthenticationSettingModelFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'integrations': !exists(json, 'Integrations') ? undefined : (mapValues(json['Integrations'], ScanNotificationIntegrationViewModelFromJSON)),
        'customScripts': !exists(json, 'CustomScripts') ? undefined : (json['CustomScripts'].map(FormAuthenticationCustomScriptFromJSON)),
        'interactiveLoginRequired': !exists(json, 'InteractiveLoginRequired') ? undefined : json['InteractiveLoginRequired'],
        'defaultPersonaValidation': !exists(json, 'DefaultPersonaValidation') ? undefined : json['DefaultPersonaValidation'],
        'detectBearerToken': !exists(json, 'DetectBearerToken') ? undefined : json['DetectBearerToken'],
        'disableLogoutDetection': !exists(json, 'DisableLogoutDetection') ? undefined : json['DisableLogoutDetection'],
        'isEnabled': !exists(json, 'IsEnabled') ? undefined : json['IsEnabled'],
        'isNotVerified': !exists(json, 'IsNotVerified') ? undefined : json['IsNotVerified'],
        'loginFormUrl': !exists(json, 'LoginFormUrl') ? undefined : json['LoginFormUrl'],
        'loginRequiredUrl': !exists(json, 'LoginRequiredUrl') ? undefined : json['LoginRequiredUrl'],
        'logoutKeywordPatterns': !exists(json, 'LogoutKeywordPatterns') ? undefined : (json['LogoutKeywordPatterns'].map(LogoutKeywordPatternModelFromJSON)),
        'logoutKeywordPatternsValue': !exists(json, 'LogoutKeywordPatternsValue') ? undefined : json['LogoutKeywordPatternsValue'],
        'logoutRedirectPattern': !exists(json, 'LogoutRedirectPattern') ? undefined : json['LogoutRedirectPattern'],
        'overrideTargetUrl': !exists(json, 'OverrideTargetUrl') ? undefined : json['OverrideTargetUrl'],
        'personas': !exists(json, 'Personas') ? undefined : (json['Personas'].map(FormAuthenticationPersonaFromJSON)),
        'personasValidation': !exists(json, 'PersonasValidation') ? undefined : json['PersonasValidation'],
        'authorizationTokenRules': !exists(json, 'AuthorizationTokenRules') ? undefined : (json['AuthorizationTokenRules'].map(AuthorizationTokenRuleFromJSON)),
    };
}
export function FormAuthenticationSettingModelToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'Integrations': value.integrations === undefined ? undefined : (mapValues(value.integrations, ScanNotificationIntegrationViewModelToJSON)),
        'CustomScripts': value.customScripts === undefined ? undefined : (value.customScripts.map(FormAuthenticationCustomScriptToJSON)),
        'InteractiveLoginRequired': value.interactiveLoginRequired,
        'DetectBearerToken': value.detectBearerToken,
        'DisableLogoutDetection': value.disableLogoutDetection,
        'IsEnabled': value.isEnabled,
        'LoginFormUrl': value.loginFormUrl,
        'LoginRequiredUrl': value.loginRequiredUrl,
        'LogoutKeywordPatterns': value.logoutKeywordPatterns === undefined ? undefined : (value.logoutKeywordPatterns.map(LogoutKeywordPatternModelToJSON)),
        'LogoutKeywordPatternsValue': value.logoutKeywordPatternsValue,
        'LogoutRedirectPattern': value.logoutRedirectPattern,
        'OverrideTargetUrl': value.overrideTargetUrl,
        'Personas': value.personas === undefined ? undefined : (value.personas.map(FormAuthenticationPersonaToJSON)),
        'AuthorizationTokenRules': value.authorizationTokenRules === undefined ? undefined : (value.authorizationTokenRules.map(AuthorizationTokenRuleToJSON)),
    };
}
//# sourceMappingURL=FormAuthenticationSettingModel.js.map