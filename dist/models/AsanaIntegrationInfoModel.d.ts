/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { AsanaProject } from './AsanaProject';
import type { AsanaTag } from './AsanaTag';
import type { AsanaUser } from './AsanaUser';
import type { AsanaWorkspace } from './AsanaWorkspace';
import type { IntegrationCustomFieldVm } from './IntegrationCustomFieldVm';
import type { IntegrationWizardResultModel } from './IntegrationWizardResultModel';
/**
 * The Asana integration info
 * @export
 * @interface AsanaIntegrationInfoModel
 */
export interface AsanaIntegrationInfoModel {
    /**
     * Access Token
     * @type {string}
     * @memberof AsanaIntegrationInfoModel
     */
    accessToken: string;
    /**
     * The Project identifier.
     * @type {string}
     * @memberof AsanaIntegrationInfoModel
     */
    projectId: string;
    /**
     * The Workspace identifier.
     * @type {string}
     * @memberof AsanaIntegrationInfoModel
     */
    workspaceId?: string;
    /**
     * The user to assign issues to. Accepted values are email adress,user identifier or me.
     * @type {string}
     * @memberof AsanaIntegrationInfoModel
     */
    assignee?: string;
    /**
     * The Follower identifiers.
     * @type {Array<string>}
     * @memberof AsanaIntegrationInfoModel
     */
    followerIds?: Array<string>;
    /**
     * The number of days in which the card is due, date from the time that the card was created.
     * @type {number}
     * @memberof AsanaIntegrationInfoModel
     */
    dueDays: number;
    /**
     * Comma-separated Tag identifiers.
     * @type {Array<string>}
     * @memberof AsanaIntegrationInfoModel
     */
    tagIds?: Array<string>;
    /**
     * The Workspace List.
     * @type {Array<AsanaWorkspace>}
     * @memberof AsanaIntegrationInfoModel
     */
    workspaceList?: Array<AsanaWorkspace>;
    /**
     * The Project List.
     * @type {Array<AsanaProject>}
     * @memberof AsanaIntegrationInfoModel
     */
    projectList?: Array<AsanaProject>;
    /**
     * The Assignee List.
     * @type {Array<AsanaUser>}
     * @memberof AsanaIntegrationInfoModel
     */
    assigneeList?: Array<AsanaUser>;
    /**
     * The Follower List.
     * @type {Array<AsanaUser>}
     * @memberof AsanaIntegrationInfoModel
     */
    followerList?: Array<AsanaUser>;
    /**
     * The Tag List.
     * @type {Array<AsanaTag>}
     * @memberof AsanaIntegrationInfoModel
     */
    tagList?: Array<AsanaTag>;
    /**
     * The Follower identifiers.
     * @type {string}
     * @memberof AsanaIntegrationInfoModel
     */
    readonly followersSelected?: string;
    /**
     * Comma-separated Tag identifiers.
     * @type {string}
     * @memberof AsanaIntegrationInfoModel
     */
    readonly tagsSelected?: string;
    /**
     *
     * @type {IntegrationWizardResultModel}
     * @memberof AsanaIntegrationInfoModel
     */
    integrationWizardResultModel?: IntegrationWizardResultModel;
    /**
     *
     * @type {string}
     * @memberof AsanaIntegrationInfoModel
     */
    readonly type?: AsanaIntegrationInfoModelTypeEnum;
    /**
     *
     * @type {string}
     * @memberof AsanaIntegrationInfoModel
     */
    readonly genericErrorMessage?: string;
    /**
     *
     * @type {string}
     * @memberof AsanaIntegrationInfoModel
     */
    readonly identifier?: string;
    /**
     *
     * @type {string}
     * @memberof AsanaIntegrationInfoModel
     */
    readonly testMessageBody?: string;
    /**
     *
     * @type {string}
     * @memberof AsanaIntegrationInfoModel
     */
    readonly testMessageTitle?: string;
    /**
     *
     * @type {string}
     * @memberof AsanaIntegrationInfoModel
     */
    readonly webhookUrl?: string;
    /**
     *
     * @type {string}
     * @memberof AsanaIntegrationInfoModel
     */
    name?: string;
    /**
     *
     * @type {number}
     * @memberof AsanaIntegrationInfoModel
     */
    integrationVersion?: number;
    /**
     *
     * @type {string}
     * @memberof AsanaIntegrationInfoModel
     */
    accountID?: string;
    /**
     *
     * @type {Array<IntegrationCustomFieldVm>}
     * @memberof AsanaIntegrationInfoModel
     */
    customFields?: Array<IntegrationCustomFieldVm>;
    /**
     *
     * @type {string}
     * @memberof AsanaIntegrationInfoModel
     */
    templateType?: AsanaIntegrationInfoModelTemplateTypeEnum;
    /**
     *
     * @type {string}
     * @memberof AsanaIntegrationInfoModel
     */
    reopenStatus?: string;
    /**
     *
     * @type {string}
     * @memberof AsanaIntegrationInfoModel
     */
    resolvedStatus?: string;
    /**
     *
     * @type {string}
     * @memberof AsanaIntegrationInfoModel
     */
    titleFormat: string;
}
/**
 * @export
 */
export declare const AsanaIntegrationInfoModelTypeEnum: {
    readonly NetsparkerEnterprise: "NetsparkerEnterprise";
    readonly Webhook: "Webhook";
    readonly Zapier: "Zapier";
    readonly Slack: "Slack";
    readonly Mattermost: "Mattermost";
    readonly MicrosoftTeams: "MicrosoftTeams";
    readonly AzureDevOps: "AzureDevOps";
    readonly Bitbucket: "Bitbucket";
    readonly Bugzilla: "Bugzilla";
    readonly Clubhouse: "Clubhouse";
    readonly DefectDojo: "DefectDojo";
    readonly PivotalTracker: "PivotalTracker";
    readonly Jira: "Jira";
    readonly FogBugz: "FogBugz";
    readonly GitHub: "GitHub";
    readonly PagerDuty: "PagerDuty";
    readonly Kafka: "Kafka";
    readonly Kenna: "Kenna";
    readonly Redmine: "Redmine";
    readonly ServiceNow: "ServiceNow";
    readonly Tfs: "TFS";
    readonly Unfuddle: "Unfuddle";
    readonly YouTrack: "YouTrack";
    readonly Freshservice: "Freshservice";
    readonly Splunk: "Splunk";
    readonly JazzTeam: "JazzTeam";
    readonly ServiceNowVrm: "ServiceNowVRM";
    readonly Asana: "Asana";
    readonly Trello: "Trello";
    readonly Hashicorp: "Hashicorp";
    readonly CyberArk: "CyberArk";
    readonly AzureKeyVault: "AzureKeyVault";
    readonly GitLab: "GitLab";
};
export type AsanaIntegrationInfoModelTypeEnum = typeof AsanaIntegrationInfoModelTypeEnum[keyof typeof AsanaIntegrationInfoModelTypeEnum];
/**
 * @export
 */
export declare const AsanaIntegrationInfoModelTemplateTypeEnum: {
    readonly Standard: "Standard";
    readonly Detailed: "Detailed";
};
export type AsanaIntegrationInfoModelTemplateTypeEnum = typeof AsanaIntegrationInfoModelTemplateTypeEnum[keyof typeof AsanaIntegrationInfoModelTemplateTypeEnum];
/**
 * Check if a given object implements the AsanaIntegrationInfoModel interface.
 */
export declare function instanceOfAsanaIntegrationInfoModel(value: object): boolean;
export declare function AsanaIntegrationInfoModelFromJSON(json: any): AsanaIntegrationInfoModel;
export declare function AsanaIntegrationInfoModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): AsanaIntegrationInfoModel;
export declare function AsanaIntegrationInfoModelToJSON(value?: AsanaIntegrationInfoModel | null): any;
