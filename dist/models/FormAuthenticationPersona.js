"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FormAuthenticationPersonaToJSON = exports.FormAuthenticationPersonaFromJSONTyped = exports.FormAuthenticationPersonaFromJSON = exports.instanceOfFormAuthenticationPersona = exports.FormAuthenticationPersonaVersionEnum = exports.FormAuthenticationPersonaFormAuthTypeEnum = exports.FormAuthenticationPersonaAlgorithmEnum = exports.FormAuthenticationPersonaOtpTypeEnum = void 0;
/**
 * @export
 */
exports.FormAuthenticationPersonaOtpTypeEnum = {
    Totp: 'Totp',
    Hotp: 'Hotp'
};
/**
 * @export
 */
exports.FormAuthenticationPersonaAlgorithmEnum = {
    Sha1: 'Sha1',
    Sha256: 'Sha256',
    Sha512: 'Sha512'
};
/**
 * @export
 */
exports.FormAuthenticationPersonaFormAuthTypeEnum = {
    Manual: 'Manual',
    Integration: 'Integration'
};
/**
 * @export
 */
exports.FormAuthenticationPersonaVersionEnum = {
    V1: 'V1',
    V2: 'V2'
};
/**
 * Check if a given object implements the FormAuthenticationPersona interface.
 */
function instanceOfFormAuthenticationPersona(value) {
    return true;
}
exports.instanceOfFormAuthenticationPersona = instanceOfFormAuthenticationPersona;
function FormAuthenticationPersonaFromJSON(json) {
    return FormAuthenticationPersonaFromJSONTyped(json, false);
}
exports.FormAuthenticationPersonaFromJSON = FormAuthenticationPersonaFromJSON;
function FormAuthenticationPersonaFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'isActive': json['IsActive'] == null ? undefined : json['IsActive'],
        'password': json['Password'] == null ? undefined : json['Password'],
        'userName': json['UserName'] == null ? undefined : json['UserName'],
        'otpType': json['OtpType'] == null ? undefined : json['OtpType'],
        'secretKey': json['SecretKey'] == null ? undefined : json['SecretKey'],
        'digit': json['Digit'] == null ? undefined : json['Digit'],
        'period': json['Period'] == null ? undefined : json['Period'],
        'algorithm': json['Algorithm'] == null ? undefined : json['Algorithm'],
        'formAuthType': json['FormAuthType'] == null ? undefined : json['FormAuthType'],
        'integrationId': json['IntegrationId'] == null ? undefined : json['IntegrationId'],
        'version': json['Version'] == null ? undefined : json['Version'],
        'secretEngine': json['SecretEngine'] == null ? undefined : json['SecretEngine'],
        'secret': json['Secret'] == null ? undefined : json['Secret'],
        'useStaticUsername': json['UseStaticUsername'] == null ? undefined : json['UseStaticUsername'],
        'staticUsername': json['StaticUsername'] == null ? undefined : json['StaticUsername'],
        'usernameKey': json['UsernameKey'] == null ? undefined : json['UsernameKey'],
        'passwordKey': json['PasswordKey'] == null ? undefined : json['PasswordKey'],
        'cyberArkUseStaticUsername': json['CyberArkUseStaticUsername'] == null ? undefined : json['CyberArkUseStaticUsername'],
        'cyberArkStaticUsername': json['CyberArkStaticUsername'] == null ? undefined : json['CyberArkStaticUsername'],
        'cyberArkUserNameQuery': json['CyberArkUserNameQuery'] == null ? undefined : json['CyberArkUserNameQuery'],
        'cyberArkPasswordQuery': json['CyberArkPasswordQuery'] == null ? undefined : json['CyberArkPasswordQuery'],
        'azureUseStaticUsername': json['AzureUseStaticUsername'] == null ? undefined : json['AzureUseStaticUsername'],
        'azureStaticUsername': json['AzureStaticUsername'] == null ? undefined : json['AzureStaticUsername'],
        'azureSecret': json['AzureSecret'] == null ? undefined : json['AzureSecret'],
        'azureVaultName': json['AzureVaultName'] == null ? undefined : json['AzureVaultName'],
        'azureUsernameKey': json['AzureUsernameKey'] == null ? undefined : json['AzureUsernameKey'],
        'azurePasswordKey': json['AzurePasswordKey'] == null ? undefined : json['AzurePasswordKey'],
        'originalUserName': json['OriginalUserName'] == null ? undefined : json['OriginalUserName'],
        'isReplacedCredentials': json['IsReplacedCredentials'] == null ? undefined : json['IsReplacedCredentials'],
        'index': json['Index'] == null ? undefined : json['Index'],
    };
}
exports.FormAuthenticationPersonaFromJSONTyped = FormAuthenticationPersonaFromJSONTyped;
function FormAuthenticationPersonaToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        'IsActive': value['isActive'],
        'Password': value['password'],
        'UserName': value['userName'],
        'OtpType': value['otpType'],
        'SecretKey': value['secretKey'],
        'Digit': value['digit'],
        'Period': value['period'],
        'Algorithm': value['algorithm'],
        'FormAuthType': value['formAuthType'],
        'IntegrationId': value['integrationId'],
        'Version': value['version'],
        'SecretEngine': value['secretEngine'],
        'Secret': value['secret'],
        'UseStaticUsername': value['useStaticUsername'],
        'StaticUsername': value['staticUsername'],
        'UsernameKey': value['usernameKey'],
        'PasswordKey': value['passwordKey'],
        'CyberArkUseStaticUsername': value['cyberArkUseStaticUsername'],
        'CyberArkStaticUsername': value['cyberArkStaticUsername'],
        'CyberArkUserNameQuery': value['cyberArkUserNameQuery'],
        'CyberArkPasswordQuery': value['cyberArkPasswordQuery'],
        'AzureUseStaticUsername': value['azureUseStaticUsername'],
        'AzureStaticUsername': value['azureStaticUsername'],
        'AzureSecret': value['azureSecret'],
        'AzureVaultName': value['azureVaultName'],
        'AzureUsernameKey': value['azureUsernameKey'],
        'AzurePasswordKey': value['azurePasswordKey'],
        'OriginalUserName': value['originalUserName'],
        'IsReplacedCredentials': value['isReplacedCredentials'],
        'Index': value['index'],
    };
}
exports.FormAuthenticationPersonaToJSON = FormAuthenticationPersonaToJSON;
//# sourceMappingURL=FormAuthenticationPersona.js.map