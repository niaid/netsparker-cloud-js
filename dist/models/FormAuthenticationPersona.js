"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FormAuthenticationPersonaToJSON = exports.FormAuthenticationPersonaFromJSONTyped = exports.FormAuthenticationPersonaFromJSON = exports.instanceOfFormAuthenticationPersona = exports.FormAuthenticationPersonaVersionEnum = exports.FormAuthenticationPersonaFormAuthTypeEnum = exports.FormAuthenticationPersonaAlgorithmEnum = exports.FormAuthenticationPersonaOtpTypeEnum = void 0;
const runtime_1 = require("../runtime");
/**
 * @export
 */
exports.FormAuthenticationPersonaOtpTypeEnum = {
    Totp: 'Totp',
    Hotp: 'Hotp'
};
/**
 * @export
 */
exports.FormAuthenticationPersonaAlgorithmEnum = {
    Sha1: 'Sha1',
    Sha256: 'Sha256',
    Sha512: 'Sha512'
};
/**
 * @export
 */
exports.FormAuthenticationPersonaFormAuthTypeEnum = {
    Manual: 'Manual',
    Integration: 'Integration'
};
/**
 * @export
 */
exports.FormAuthenticationPersonaVersionEnum = {
    V1: 'V1',
    V2: 'V2'
};
/**
 * Check if a given object implements the FormAuthenticationPersona interface.
 */
function instanceOfFormAuthenticationPersona(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfFormAuthenticationPersona = instanceOfFormAuthenticationPersona;
function FormAuthenticationPersonaFromJSON(json) {
    return FormAuthenticationPersonaFromJSONTyped(json, false);
}
exports.FormAuthenticationPersonaFromJSON = FormAuthenticationPersonaFromJSON;
function FormAuthenticationPersonaFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'isActive': !(0, runtime_1.exists)(json, 'IsActive') ? undefined : json['IsActive'],
        'password': !(0, runtime_1.exists)(json, 'Password') ? undefined : json['Password'],
        'userName': !(0, runtime_1.exists)(json, 'UserName') ? undefined : json['UserName'],
        'otpType': !(0, runtime_1.exists)(json, 'OtpType') ? undefined : json['OtpType'],
        'secretKey': !(0, runtime_1.exists)(json, 'SecretKey') ? undefined : json['SecretKey'],
        'digit': !(0, runtime_1.exists)(json, 'Digit') ? undefined : json['Digit'],
        'period': !(0, runtime_1.exists)(json, 'Period') ? undefined : json['Period'],
        'algorithm': !(0, runtime_1.exists)(json, 'Algorithm') ? undefined : json['Algorithm'],
        'formAuthType': !(0, runtime_1.exists)(json, 'FormAuthType') ? undefined : json['FormAuthType'],
        'integrationId': !(0, runtime_1.exists)(json, 'IntegrationId') ? undefined : json['IntegrationId'],
        'version': !(0, runtime_1.exists)(json, 'Version') ? undefined : json['Version'],
        'secretEngine': !(0, runtime_1.exists)(json, 'SecretEngine') ? undefined : json['SecretEngine'],
        'secret': !(0, runtime_1.exists)(json, 'Secret') ? undefined : json['Secret'],
        'useStaticUsername': !(0, runtime_1.exists)(json, 'UseStaticUsername') ? undefined : json['UseStaticUsername'],
        'staticUsername': !(0, runtime_1.exists)(json, 'StaticUsername') ? undefined : json['StaticUsername'],
        'usernameKey': !(0, runtime_1.exists)(json, 'UsernameKey') ? undefined : json['UsernameKey'],
        'passwordKey': !(0, runtime_1.exists)(json, 'PasswordKey') ? undefined : json['PasswordKey'],
        'cyberArkUseStaticUsername': !(0, runtime_1.exists)(json, 'CyberArkUseStaticUsername') ? undefined : json['CyberArkUseStaticUsername'],
        'cyberArkStaticUsername': !(0, runtime_1.exists)(json, 'CyberArkStaticUsername') ? undefined : json['CyberArkStaticUsername'],
        'cyberArkUserNameQuery': !(0, runtime_1.exists)(json, 'CyberArkUserNameQuery') ? undefined : json['CyberArkUserNameQuery'],
        'cyberArkPasswordQuery': !(0, runtime_1.exists)(json, 'CyberArkPasswordQuery') ? undefined : json['CyberArkPasswordQuery'],
        'azureUseStaticUsername': !(0, runtime_1.exists)(json, 'AzureUseStaticUsername') ? undefined : json['AzureUseStaticUsername'],
        'azureStaticUsername': !(0, runtime_1.exists)(json, 'AzureStaticUsername') ? undefined : json['AzureStaticUsername'],
        'azureSecret': !(0, runtime_1.exists)(json, 'AzureSecret') ? undefined : json['AzureSecret'],
        'azureVaultName': !(0, runtime_1.exists)(json, 'AzureVaultName') ? undefined : json['AzureVaultName'],
        'azureUsernameKey': !(0, runtime_1.exists)(json, 'AzureUsernameKey') ? undefined : json['AzureUsernameKey'],
        'azurePasswordKey': !(0, runtime_1.exists)(json, 'AzurePasswordKey') ? undefined : json['AzurePasswordKey'],
        'originalUserName': !(0, runtime_1.exists)(json, 'OriginalUserName') ? undefined : json['OriginalUserName'],
        'isReplacedCredentials': !(0, runtime_1.exists)(json, 'IsReplacedCredentials') ? undefined : json['IsReplacedCredentials'],
        'index': !(0, runtime_1.exists)(json, 'Index') ? undefined : json['Index'],
    };
}
exports.FormAuthenticationPersonaFromJSONTyped = FormAuthenticationPersonaFromJSONTyped;
function FormAuthenticationPersonaToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'IsActive': value.isActive,
        'Password': value.password,
        'UserName': value.userName,
        'OtpType': value.otpType,
        'SecretKey': value.secretKey,
        'Digit': value.digit,
        'Period': value.period,
        'Algorithm': value.algorithm,
        'FormAuthType': value.formAuthType,
        'IntegrationId': value.integrationId,
        'Version': value.version,
        'SecretEngine': value.secretEngine,
        'Secret': value.secret,
        'UseStaticUsername': value.useStaticUsername,
        'StaticUsername': value.staticUsername,
        'UsernameKey': value.usernameKey,
        'PasswordKey': value.passwordKey,
        'CyberArkUseStaticUsername': value.cyberArkUseStaticUsername,
        'CyberArkStaticUsername': value.cyberArkStaticUsername,
        'CyberArkUserNameQuery': value.cyberArkUserNameQuery,
        'CyberArkPasswordQuery': value.cyberArkPasswordQuery,
        'AzureUseStaticUsername': value.azureUseStaticUsername,
        'AzureStaticUsername': value.azureStaticUsername,
        'AzureSecret': value.azureSecret,
        'AzureVaultName': value.azureVaultName,
        'AzureUsernameKey': value.azureUsernameKey,
        'AzurePasswordKey': value.azurePasswordKey,
        'OriginalUserName': value.originalUserName,
        'IsReplacedCredentials': value.isReplacedCredentials,
        'Index': value.index,
    };
}
exports.FormAuthenticationPersonaToJSON = FormAuthenticationPersonaToJSON;
//# sourceMappingURL=FormAuthenticationPersona.js.map