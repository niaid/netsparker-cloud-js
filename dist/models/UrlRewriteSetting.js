"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.UrlRewriteSettingToJSON = exports.UrlRewriteSettingFromJSONTyped = exports.UrlRewriteSettingFromJSON = exports.instanceOfUrlRewriteSetting = exports.UrlRewriteSettingUrlRewriteModeEnum = void 0;
const UrlRewriteRuleModel_1 = require("./UrlRewriteRuleModel");
const UrlRewriteExcludedPathModel_1 = require("./UrlRewriteExcludedPathModel");
/**
 * @export
 */
exports.UrlRewriteSettingUrlRewriteModeEnum = {
    None: 'None',
    Heuristic: 'Heuristic',
    Custom: 'Custom'
};
/**
 * Check if a given object implements the UrlRewriteSetting interface.
 */
function instanceOfUrlRewriteSetting(value) {
    if (!('maxDynamicSignatures' in value))
        return false;
    if (!('subPathMaxDynamicSignatures' in value))
        return false;
    if (!('urlRewriteBlockSeparators' in value))
        return false;
    return true;
}
exports.instanceOfUrlRewriteSetting = instanceOfUrlRewriteSetting;
function UrlRewriteSettingFromJSON(json) {
    return UrlRewriteSettingFromJSONTyped(json, false);
}
exports.UrlRewriteSettingFromJSON = UrlRewriteSettingFromJSON;
function UrlRewriteSettingFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'enableHeuristicChecksInCustomUrlRewrite': json['EnableHeuristicChecksInCustomUrlRewrite'] == null ? undefined : json['EnableHeuristicChecksInCustomUrlRewrite'],
        'maxDynamicSignatures': json['MaxDynamicSignatures'],
        'subPathMaxDynamicSignatures': json['SubPathMaxDynamicSignatures'],
        'urlRewriteAnalyzableExtensions': json['UrlRewriteAnalyzableExtensions'] == null ? undefined : json['UrlRewriteAnalyzableExtensions'],
        'urlRewriteBlockSeparators': json['UrlRewriteBlockSeparators'],
        'urlRewriteMode': json['UrlRewriteMode'] == null ? undefined : json['UrlRewriteMode'],
        'urlRewriteRules': json['UrlRewriteRules'] == null ? undefined : (json['UrlRewriteRules'].map(UrlRewriteRuleModel_1.UrlRewriteRuleModelFromJSON)),
        'urlRewriteExcludedLinks': json['UrlRewriteExcludedLinks'] == null ? undefined : (json['UrlRewriteExcludedLinks'].map(UrlRewriteExcludedPathModel_1.UrlRewriteExcludedPathModelFromJSON)),
    };
}
exports.UrlRewriteSettingFromJSONTyped = UrlRewriteSettingFromJSONTyped;
function UrlRewriteSettingToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        'EnableHeuristicChecksInCustomUrlRewrite': value['enableHeuristicChecksInCustomUrlRewrite'],
        'MaxDynamicSignatures': value['maxDynamicSignatures'],
        'SubPathMaxDynamicSignatures': value['subPathMaxDynamicSignatures'],
        'UrlRewriteAnalyzableExtensions': value['urlRewriteAnalyzableExtensions'],
        'UrlRewriteBlockSeparators': value['urlRewriteBlockSeparators'],
        'UrlRewriteMode': value['urlRewriteMode'],
        'UrlRewriteRules': value['urlRewriteRules'] == null ? undefined : (value['urlRewriteRules'].map(UrlRewriteRuleModel_1.UrlRewriteRuleModelToJSON)),
        'UrlRewriteExcludedLinks': value['urlRewriteExcludedLinks'] == null ? undefined : (value['urlRewriteExcludedLinks'].map(UrlRewriteExcludedPathModel_1.UrlRewriteExcludedPathModelToJSON)),
    };
}
exports.UrlRewriteSettingToJSON = UrlRewriteSettingToJSON;
//# sourceMappingURL=UrlRewriteSetting.js.map