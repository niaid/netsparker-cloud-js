"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.OtpSettingsToJSON = exports.OtpSettingsFromJSONTyped = exports.OtpSettingsFromJSON = exports.instanceOfOtpSettings = exports.OtpSettingsAlgorithmEnum = exports.OtpSettingsOtpTypeEnum = void 0;
const runtime_1 = require("../runtime");
/**
 * @export
 */
exports.OtpSettingsOtpTypeEnum = {
    Totp: 'Totp',
    Hotp: 'Hotp'
};
/**
 * @export
 */
exports.OtpSettingsAlgorithmEnum = {
    Sha1: 'Sha1',
    Sha256: 'Sha256',
    Sha512: 'Sha512'
};
/**
 * Check if a given object implements the OtpSettings interface.
 */
function instanceOfOtpSettings(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfOtpSettings = instanceOfOtpSettings;
function OtpSettingsFromJSON(json) {
    return OtpSettingsFromJSONTyped(json, false);
}
exports.OtpSettingsFromJSON = OtpSettingsFromJSON;
function OtpSettingsFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'otpType': !(0, runtime_1.exists)(json, 'OtpType') ? undefined : json['OtpType'],
        'secretKey': !(0, runtime_1.exists)(json, 'SecretKey') ? undefined : json['SecretKey'],
        'digit': !(0, runtime_1.exists)(json, 'Digit') ? undefined : json['Digit'],
        'period': !(0, runtime_1.exists)(json, 'Period') ? undefined : json['Period'],
        'algorithm': !(0, runtime_1.exists)(json, 'Algorithm') ? undefined : json['Algorithm'],
    };
}
exports.OtpSettingsFromJSONTyped = OtpSettingsFromJSONTyped;
function OtpSettingsToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'OtpType': value.otpType,
        'SecretKey': value.secretKey,
        'Digit': value.digit,
        'Period': value.period,
        'Algorithm': value.algorithm,
    };
}
exports.OtpSettingsToJSON = OtpSettingsToJSON;
//# sourceMappingURL=OtpSettings.js.map