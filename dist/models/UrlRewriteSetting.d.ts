/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { UrlRewriteExcludedPathModel } from './UrlRewriteExcludedPathModel';
import type { UrlRewriteRuleModel } from './UrlRewriteRuleModel';
/**
 * Represents a class that carries out url rewrite settings.
 * @export
 * @interface UrlRewriteSetting
 */
export interface UrlRewriteSetting {
    /**
     * Gets or sets a value indicating whether Heuristic URL Rewrite support is enabled together with custom URL Rewrite
     * support.
     * @type {boolean}
     * @memberof UrlRewriteSetting
     */
    enableHeuristicChecksInCustomUrlRewrite?: boolean;
    /**
     * Gets or sets the root path maximum dynamic signatures for heuristic URL Rewrite detection.
     * @type {number}
     * @memberof UrlRewriteSetting
     */
    maxDynamicSignatures: number;
    /**
     * Gets or sets the sub path maximum dynamic signatures for heuristic URL Rewrite detection.
     * @type {number}
     * @memberof UrlRewriteSetting
     */
    subPathMaxDynamicSignatures: number;
    /**
     * Gets or sets the extensions that will be analyzed for heuristic URL Rewrite detection.
     * @type {string}
     * @memberof UrlRewriteSetting
     */
    urlRewriteAnalyzableExtensions?: string;
    /**
     * Gets or sets the block separators for heuristic URL Rewrite detection.
     * @type {string}
     * @memberof UrlRewriteSetting
     */
    urlRewriteBlockSeparators: string;
    /**
     * Gets or sets the URL Rewrite mode.
     * @type {string}
     * @memberof UrlRewriteSetting
     */
    urlRewriteMode?: UrlRewriteSettingUrlRewriteModeEnum;
    /**
     * Gets or sets the URL Rewrite rules.
     * @type {Array<UrlRewriteRuleModel>}
     * @memberof UrlRewriteSetting
     */
    urlRewriteRules?: Array<UrlRewriteRuleModel>;
    /**
     * Gets or sets the URL rewrite excluded rules.
     * @type {Array<UrlRewriteExcludedPathModel>}
     * @memberof UrlRewriteSetting
     */
    urlRewriteExcludedLinks?: Array<UrlRewriteExcludedPathModel>;
}
/**
 * @export
 */
export declare const UrlRewriteSettingUrlRewriteModeEnum: {
    readonly None: "None";
    readonly Heuristic: "Heuristic";
    readonly Custom: "Custom";
};
export type UrlRewriteSettingUrlRewriteModeEnum = typeof UrlRewriteSettingUrlRewriteModeEnum[keyof typeof UrlRewriteSettingUrlRewriteModeEnum];
/**
 * Check if a given object implements the UrlRewriteSetting interface.
 */
export declare function instanceOfUrlRewriteSetting(value: object): boolean;
export declare function UrlRewriteSettingFromJSON(json: any): UrlRewriteSetting;
export declare function UrlRewriteSettingFromJSONTyped(json: any, ignoreDiscriminator: boolean): UrlRewriteSetting;
export declare function UrlRewriteSettingToJSON(value?: UrlRewriteSetting | null): any;
