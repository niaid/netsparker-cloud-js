/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { AsanaIntegrationInfoModel } from './AsanaIntegrationInfoModel';
import type { AzureDevOpsIntegrationInfoModel } from './AzureDevOpsIntegrationInfoModel';
import type { AzureKeyVaultIntegrationInfoModel } from './AzureKeyVaultIntegrationInfoModel';
import type { BitbucketIntegrationInfoModel } from './BitbucketIntegrationInfoModel';
import type { BugzillaIntegrationInfoModel } from './BugzillaIntegrationInfoModel';
import type { ClubhouseIntegrationInfoModel } from './ClubhouseIntegrationInfoModel';
import type { CyberArkVaultIntegrationInfoModel } from './CyberArkVaultIntegrationInfoModel';
import type { DefectDojoIntegrationInfoModel } from './DefectDojoIntegrationInfoModel';
import type { FogBugzIntegrationInfoModel } from './FogBugzIntegrationInfoModel';
import type { FreshserviceIntegrationInfoModel } from './FreshserviceIntegrationInfoModel';
import type { GitHubIntegrationInfoModel } from './GitHubIntegrationInfoModel';
import type { GitLabIntegrationInfoModel } from './GitLabIntegrationInfoModel';
import type { HashicorpVaultIntegrationInfoModel } from './HashicorpVaultIntegrationInfoModel';
import type { IntegrationCustomFieldVm } from './IntegrationCustomFieldVm';
import type { JazzTeamIntegrationInfoModel } from './JazzTeamIntegrationInfoModel';
import type { JiraIntegrationInfoModel } from './JiraIntegrationInfoModel';
import type { KafkaIntegrationInfoModel } from './KafkaIntegrationInfoModel';
import type { KennaIntegrationInfoModel } from './KennaIntegrationInfoModel';
import type { MattermostIntegrationInfoModel } from './MattermostIntegrationInfoModel';
import type { MicrosoftTeamsIntegrationInfoModel } from './MicrosoftTeamsIntegrationInfoModel';
import type { PagerDutyIntegrationInfoModel } from './PagerDutyIntegrationInfoModel';
import type { PivotalTrackerIntegrationInfoModel } from './PivotalTrackerIntegrationInfoModel';
import type { RedmineIntegrationInfoModel } from './RedmineIntegrationInfoModel';
import type { ServiceNowIntegrationInfoModel } from './ServiceNowIntegrationInfoModel';
import type { ServiceNowVRMModel } from './ServiceNowVRMModel';
import type { SlackIntegrationInfoModel } from './SlackIntegrationInfoModel';
import type { TFSIntegrationInfoModel } from './TFSIntegrationInfoModel';
import type { TrelloIntegrationInfoModel } from './TrelloIntegrationInfoModel';
import type { UnfuddleIntegrationInfoModel } from './UnfuddleIntegrationInfoModel';
import type { WebhookIntegrationInfoModel } from './WebhookIntegrationInfoModel';
import type { YouTrackIntegrationInfoModel } from './YouTrackIntegrationInfoModel';
import type { ZapierIntegrationInfoModel } from './ZapierIntegrationInfoModel';
/**
 *
 * @export
 * @interface ScanNotificationIntegrationViewModel
 */
export interface ScanNotificationIntegrationViewModel {
    /**
     *
     * @type {string}
     * @memberof ScanNotificationIntegrationViewModel
     */
    id?: string;
    /**
     *
     * @type {string}
     * @memberof ScanNotificationIntegrationViewModel
     */
    name: string;
    /**
     * Gets or sets a value indicating whether the notification integration not found in case of an update.
     * @type {boolean}
     * @memberof ScanNotificationIntegrationViewModel
     */
    notFound?: boolean;
    /**
     *
     * @type {string}
     * @memberof ScanNotificationIntegrationViewModel
     */
    type?: ScanNotificationIntegrationViewModelTypeEnum;
    /**
     *
     * @type {string}
     * @memberof ScanNotificationIntegrationViewModel
     */
    readonly category?: ScanNotificationIntegrationViewModelCategoryEnum;
    /**
     *
     * @type {AsanaIntegrationInfoModel}
     * @memberof ScanNotificationIntegrationViewModel
     */
    asanaInfo?: AsanaIntegrationInfoModel;
    /**
     *
     * @type {AzureDevOpsIntegrationInfoModel}
     * @memberof ScanNotificationIntegrationViewModel
     */
    azureDevopsInfo?: AzureDevOpsIntegrationInfoModel;
    /**
     *
     * @type {BitbucketIntegrationInfoModel}
     * @memberof ScanNotificationIntegrationViewModel
     */
    bitbucketInfo?: BitbucketIntegrationInfoModel;
    /**
     *
     * @type {BugzillaIntegrationInfoModel}
     * @memberof ScanNotificationIntegrationViewModel
     */
    bugzilla?: BugzillaIntegrationInfoModel;
    /**
     *
     * @type {PagerDutyIntegrationInfoModel}
     * @memberof ScanNotificationIntegrationViewModel
     */
    pagerDutyInfo?: PagerDutyIntegrationInfoModel;
    /**
     *
     * @type {RedmineIntegrationInfoModel}
     * @memberof ScanNotificationIntegrationViewModel
     */
    redmineInfo?: RedmineIntegrationInfoModel;
    /**
     *
     * @type {ServiceNowIntegrationInfoModel}
     * @memberof ScanNotificationIntegrationViewModel
     */
    serviceNowInfo?: ServiceNowIntegrationInfoModel;
    /**
     *
     * @type {ServiceNowVRMModel}
     * @memberof ScanNotificationIntegrationViewModel
     */
    serviceNowVRMInfo?: ServiceNowVRMModel;
    /**
     *
     * @type {SlackIntegrationInfoModel}
     * @memberof ScanNotificationIntegrationViewModel
     */
    slackInfo?: SlackIntegrationInfoModel;
    /**
     *
     * @type {MattermostIntegrationInfoModel}
     * @memberof ScanNotificationIntegrationViewModel
     */
    mattermostInfo?: MattermostIntegrationInfoModel;
    /**
     *
     * @type {TFSIntegrationInfoModel}
     * @memberof ScanNotificationIntegrationViewModel
     */
    tFSInfo?: TFSIntegrationInfoModel;
    /**
     *
     * @type {TrelloIntegrationInfoModel}
     * @memberof ScanNotificationIntegrationViewModel
     */
    trelloInfo?: TrelloIntegrationInfoModel;
    /**
     *
     * @type {UnfuddleIntegrationInfoModel}
     * @memberof ScanNotificationIntegrationViewModel
     */
    unfuddleInfo?: UnfuddleIntegrationInfoModel;
    /**
     *
     * @type {WebhookIntegrationInfoModel}
     * @memberof ScanNotificationIntegrationViewModel
     */
    webhookInfo?: WebhookIntegrationInfoModel;
    /**
     *
     * @type {ZapierIntegrationInfoModel}
     * @memberof ScanNotificationIntegrationViewModel
     */
    zapierInfo?: ZapierIntegrationInfoModel;
    /**
     *
     * @type {HashicorpVaultIntegrationInfoModel}
     * @memberof ScanNotificationIntegrationViewModel
     */
    vaultInfo?: HashicorpVaultIntegrationInfoModel;
    /**
     *
     * @type {CyberArkVaultIntegrationInfoModel}
     * @memberof ScanNotificationIntegrationViewModel
     */
    cyberArkVaultInfo?: CyberArkVaultIntegrationInfoModel;
    /**
     *
     * @type {AzureKeyVaultIntegrationInfoModel}
     * @memberof ScanNotificationIntegrationViewModel
     */
    azureVaultInfo?: AzureKeyVaultIntegrationInfoModel;
    /**
     *
     * @type {JazzTeamIntegrationInfoModel}
     * @memberof ScanNotificationIntegrationViewModel
     */
    jazzTeamInfo?: JazzTeamIntegrationInfoModel;
    /**
     *
     * @type {ClubhouseIntegrationInfoModel}
     * @memberof ScanNotificationIntegrationViewModel
     */
    clubhouseInfo?: ClubhouseIntegrationInfoModel;
    /**
     *
     * @type {PivotalTrackerIntegrationInfoModel}
     * @memberof ScanNotificationIntegrationViewModel
     */
    pivotalTrackerInfo?: PivotalTrackerIntegrationInfoModel;
    /**
     *
     * @type {Array<IntegrationCustomFieldVm>}
     * @memberof ScanNotificationIntegrationViewModel
     */
    customFields?: Array<IntegrationCustomFieldVm>;
    /**
     *
     * @type {DefectDojoIntegrationInfoModel}
     * @memberof ScanNotificationIntegrationViewModel
     */
    defectDojoInfo?: DefectDojoIntegrationInfoModel;
    /**
     *
     * @type {FogBugzIntegrationInfoModel}
     * @memberof ScanNotificationIntegrationViewModel
     */
    fogBugzInfo?: FogBugzIntegrationInfoModel;
    /**
     *
     * @type {GitHubIntegrationInfoModel}
     * @memberof ScanNotificationIntegrationViewModel
     */
    gitHubInfo?: GitHubIntegrationInfoModel;
    /**
     *
     * @type {GitLabIntegrationInfoModel}
     * @memberof ScanNotificationIntegrationViewModel
     */
    gitLabInfo?: GitLabIntegrationInfoModel;
    /**
     *
     * @type {JiraIntegrationInfoModel}
     * @memberof ScanNotificationIntegrationViewModel
     */
    jiraInfo?: JiraIntegrationInfoModel;
    /**
     *
     * @type {KafkaIntegrationInfoModel}
     * @memberof ScanNotificationIntegrationViewModel
     */
    kafkaInfo?: KafkaIntegrationInfoModel;
    /**
     *
     * @type {KennaIntegrationInfoModel}
     * @memberof ScanNotificationIntegrationViewModel
     */
    kennaInfo?: KennaIntegrationInfoModel;
    /**
     *
     * @type {FreshserviceIntegrationInfoModel}
     * @memberof ScanNotificationIntegrationViewModel
     */
    freshserviceInfo?: FreshserviceIntegrationInfoModel;
    /**
     *
     * @type {YouTrackIntegrationInfoModel}
     * @memberof ScanNotificationIntegrationViewModel
     */
    youTrackInfo?: YouTrackIntegrationInfoModel;
    /**
     *
     * @type {MicrosoftTeamsIntegrationInfoModel}
     * @memberof ScanNotificationIntegrationViewModel
     */
    microsoftTeamsInfo?: MicrosoftTeamsIntegrationInfoModel;
}
/**
 * @export
 */
export declare const ScanNotificationIntegrationViewModelTypeEnum: {
    readonly Jira: "Jira";
    readonly GitHub: "GitHub";
    readonly Tfs: "TFS";
    readonly FogBugz: "FogBugz";
    readonly ServiceNow: "ServiceNow";
    readonly Slack: "Slack";
    readonly GitLab: "GitLab";
    readonly Bitbucket: "Bitbucket";
    readonly Unfuddle: "Unfuddle";
    readonly Zapier: "Zapier";
    readonly AzureDevOps: "AzureDevOps";
    readonly Redmine: "Redmine";
    readonly Bugzilla: "Bugzilla";
    readonly Kafka: "Kafka";
    readonly PagerDuty: "PagerDuty";
    readonly MicrosoftTeams: "MicrosoftTeams";
    readonly Clubhouse: "Clubhouse";
    readonly Trello: "Trello";
    readonly Asana: "Asana";
    readonly Webhook: "Webhook";
    readonly Kenna: "Kenna";
    readonly Freshservice: "Freshservice";
    readonly YouTrack: "YouTrack";
    readonly NetsparkerEnterprise: "NetsparkerEnterprise";
    readonly Splunk: "Splunk";
    readonly Mattermost: "Mattermost";
    readonly Hashicorp: "Hashicorp";
    readonly PivotalTracker: "PivotalTracker";
    readonly CyberArk: "CyberArk";
    readonly DefectDojo: "DefectDojo";
    readonly JazzTeam: "JazzTeam";
    readonly AzureKeyVault: "AzureKeyVault";
    readonly ServiceNowVrm: "ServiceNowVRM";
};
export type ScanNotificationIntegrationViewModelTypeEnum = typeof ScanNotificationIntegrationViewModelTypeEnum[keyof typeof ScanNotificationIntegrationViewModelTypeEnum];
/**
 * @export
 */
export declare const ScanNotificationIntegrationViewModelCategoryEnum: {
    readonly IssueTrackingSystem: "IssueTrackingSystem";
    readonly TeamMessagingSystem: "TeamMessagingSystem";
    readonly SecretsAndEncryptionManagement: "SecretsAndEncryptionManagement";
};
export type ScanNotificationIntegrationViewModelCategoryEnum = typeof ScanNotificationIntegrationViewModelCategoryEnum[keyof typeof ScanNotificationIntegrationViewModelCategoryEnum];
/**
 * Check if a given object implements the ScanNotificationIntegrationViewModel interface.
 */
export declare function instanceOfScanNotificationIntegrationViewModel(value: object): boolean;
export declare function ScanNotificationIntegrationViewModelFromJSON(json: any): ScanNotificationIntegrationViewModel;
export declare function ScanNotificationIntegrationViewModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScanNotificationIntegrationViewModel;
export declare function ScanNotificationIntegrationViewModelToJSON(value?: ScanNotificationIntegrationViewModel | null): any;
