"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PciScanTaskViewModelToJSON = exports.PciScanTaskViewModelFromJSONTyped = exports.PciScanTaskViewModelFromJSON = exports.instanceOfPciScanTaskViewModel = exports.PciScanTaskViewModelComplianceStatusEnum = exports.PciScanTaskViewModelScanStateEnum = void 0;
const runtime_1 = require("../runtime");
/**
* @export
* @enum {string}
*/
var PciScanTaskViewModelScanStateEnum;
(function (PciScanTaskViewModelScanStateEnum) {
    PciScanTaskViewModelScanStateEnum["New"] = "New";
    PciScanTaskViewModelScanStateEnum["Running"] = "Running";
    PciScanTaskViewModelScanStateEnum["Stopped"] = "Stopped";
    PciScanTaskViewModelScanStateEnum["Deleted"] = "Deleted";
    PciScanTaskViewModelScanStateEnum["Done"] = "Done";
})(PciScanTaskViewModelScanStateEnum = exports.PciScanTaskViewModelScanStateEnum || (exports.PciScanTaskViewModelScanStateEnum = {}));
/**
* @export
* @enum {string}
*/
var PciScanTaskViewModelComplianceStatusEnum;
(function (PciScanTaskViewModelComplianceStatusEnum) {
    PciScanTaskViewModelComplianceStatusEnum["Scanning"] = "Scanning";
    PciScanTaskViewModelComplianceStatusEnum["Passed"] = "Passed";
    PciScanTaskViewModelComplianceStatusEnum["Failed"] = "Failed";
})(PciScanTaskViewModelComplianceStatusEnum = exports.PciScanTaskViewModelComplianceStatusEnum || (exports.PciScanTaskViewModelComplianceStatusEnum = {}));
/**
 * Check if a given object implements the PciScanTaskViewModel interface.
 */
function instanceOfPciScanTaskViewModel(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfPciScanTaskViewModel = instanceOfPciScanTaskViewModel;
function PciScanTaskViewModelFromJSON(json) {
    return PciScanTaskViewModelFromJSONTyped(json, false);
}
exports.PciScanTaskViewModelFromJSON = PciScanTaskViewModelFromJSON;
function PciScanTaskViewModelFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'name': !(0, runtime_1.exists)(json, 'Name') ? undefined : json['Name'],
        'progress': !(0, runtime_1.exists)(json, 'Progress') ? undefined : json['Progress'],
        'scanState': !(0, runtime_1.exists)(json, 'ScanState') ? undefined : json['ScanState'],
        'complianceStatus': !(0, runtime_1.exists)(json, 'ComplianceStatus') ? undefined : json['ComplianceStatus'],
        'endDate': !(0, runtime_1.exists)(json, 'EndDate') ? undefined : (new Date(json['EndDate'])),
    };
}
exports.PciScanTaskViewModelFromJSONTyped = PciScanTaskViewModelFromJSONTyped;
function PciScanTaskViewModelToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'Name': value.name,
        'Progress': value.progress,
        'ScanState': value.scanState,
        'ComplianceStatus': value.complianceStatus,
        'EndDate': value.endDate === undefined ? undefined : (value.endDate.toISOString()),
    };
}
exports.PciScanTaskViewModelToJSON = PciScanTaskViewModelToJSON;
//# sourceMappingURL=PciScanTaskViewModel.js.map