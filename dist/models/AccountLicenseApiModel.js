"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccountLicenseApiModelToJSON = exports.AccountLicenseApiModelFromJSONTyped = exports.AccountLicenseApiModelFromJSON = exports.instanceOfAccountLicenseApiModel = void 0;
const LicenseBaseModel_1 = require("./LicenseBaseModel");
/**
 * Check if a given object implements the AccountLicenseApiModel interface.
 */
function instanceOfAccountLicenseApiModel(value) {
    return true;
}
exports.instanceOfAccountLicenseApiModel = instanceOfAccountLicenseApiModel;
function AccountLicenseApiModelFromJSON(json) {
    return AccountLicenseApiModelFromJSONTyped(json, false);
}
exports.AccountLicenseApiModelFromJSON = AccountLicenseApiModelFromJSON;
function AccountLicenseApiModelFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'subscriptionMaximumSiteLimit': json['SubscriptionMaximumSiteLimit'] == null ? undefined : json['SubscriptionMaximumSiteLimit'],
        'subscriptionSiteCount': json['SubscriptionSiteCount'] == null ? undefined : json['SubscriptionSiteCount'],
        'subscriptionEndDate': json['SubscriptionEndDate'] == null ? undefined : json['SubscriptionEndDate'],
        'subscriptionStartDate': json['SubscriptionStartDate'] == null ? undefined : json['SubscriptionStartDate'],
        'isAccountWhitelisted': json['IsAccountWhitelisted'] == null ? undefined : json['IsAccountWhitelisted'],
        'usedScanCreditCount': json['UsedScanCreditCount'] == null ? undefined : json['UsedScanCreditCount'],
        'scanCreditCount': json['ScanCreditCount'] == null ? undefined : json['ScanCreditCount'],
        'isCreditScanEnabled': json['IsCreditScanEnabled'] == null ? undefined : json['IsCreditScanEnabled'],
        'isSubscriptionEnabled': json['IsSubscriptionEnabled'] == null ? undefined : json['IsSubscriptionEnabled'],
        'preVerifiedWebsites': json['PreVerifiedWebsites'] == null ? undefined : json['PreVerifiedWebsites'],
        'licenses': json['Licenses'] == null ? undefined : (json['Licenses'].map(LicenseBaseModel_1.LicenseBaseModelFromJSON)),
    };
}
exports.AccountLicenseApiModelFromJSONTyped = AccountLicenseApiModelFromJSONTyped;
function AccountLicenseApiModelToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        'SubscriptionMaximumSiteLimit': value['subscriptionMaximumSiteLimit'],
        'SubscriptionSiteCount': value['subscriptionSiteCount'],
        'SubscriptionEndDate': value['subscriptionEndDate'],
        'SubscriptionStartDate': value['subscriptionStartDate'],
        'IsAccountWhitelisted': value['isAccountWhitelisted'],
        'UsedScanCreditCount': value['usedScanCreditCount'],
        'ScanCreditCount': value['scanCreditCount'],
        'IsCreditScanEnabled': value['isCreditScanEnabled'],
        'IsSubscriptionEnabled': value['isSubscriptionEnabled'],
        'PreVerifiedWebsites': value['preVerifiedWebsites'],
        'Licenses': value['licenses'] == null ? undefined : (value['licenses'].map(LicenseBaseModel_1.LicenseBaseModelToJSON)),
    };
}
exports.AccountLicenseApiModelToJSON = AccountLicenseApiModelToJSON;
//# sourceMappingURL=AccountLicenseApiModel.js.map