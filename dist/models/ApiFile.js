"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ApiFileToJSON = exports.ApiFileFromJSONTyped = exports.ApiFileFromJSON = exports.instanceOfApiFile = exports.ApiFileTypeEnum = exports.ApiFileImporterTypeEnum = void 0;
/**
 * @export
 */
exports.ApiFileImporterTypeEnum = {
    None: 'None',
    Fiddler: 'Fiddler',
    Burp: 'Burp',
    Swagger: 'Swagger',
    OwaspZap: 'OwaspZap',
    AspNet: 'AspNet',
    HttpArchive: 'HttpArchive',
    Wadl: 'Wadl',
    Wsdl: 'Wsdl',
    Postman: 'Postman',
    Netsparker: 'Netsparker',
    HttpRequestImporter: 'HttpRequestImporter',
    LinkImporter: 'LinkImporter',
    CsvImporter: 'CsvImporter',
    Iodocs: 'Iodocs',
    WordPress: 'WordPress',
    Raml: 'Raml',
    GraphQl: 'GraphQl',
    AcxXml: 'AcxXml'
};
/**
 * @export
 */
exports.ApiFileTypeEnum = {
    LinkImportFile: 'LinkImportFile',
    LinkImportUrl: 'LinkImportUrl',
    LinkImportEnterLink: 'LinkImportEnterLink'
};
/**
 * Check if a given object implements the ApiFile interface.
 */
function instanceOfApiFile(value) {
    return true;
}
exports.instanceOfApiFile = instanceOfApiFile;
function ApiFileFromJSON(json) {
    return ApiFileFromJSONTyped(json, false);
}
exports.ApiFileFromJSON = ApiFileFromJSON;
function ApiFileFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'content': json['Content'] == null ? undefined : json['Content'],
        'fileName': json['FileName'] == null ? undefined : json['FileName'],
        'importerType': json['ImporterType'] == null ? undefined : json['ImporterType'],
        'uRL': json['URL'] == null ? undefined : json['URL'],
        'apiURL': json['ApiURL'] == null ? undefined : json['ApiURL'],
        'type': json['Type'] == null ? undefined : json['Type'],
    };
}
exports.ApiFileFromJSONTyped = ApiFileFromJSONTyped;
function ApiFileToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        'Content': value['content'],
        'FileName': value['fileName'],
        'ImporterType': value['importerType'],
        'URL': value['uRL'],
        'ApiURL': value['apiURL'],
        'Type': value['type'],
    };
}
exports.ApiFileToJSON = ApiFileToJSON;
//# sourceMappingURL=ApiFile.js.map