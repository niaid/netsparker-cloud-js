"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ScheduledScanRecurrenceViewModelToJSON = exports.ScheduledScanRecurrenceViewModelFromJSONTyped = exports.ScheduledScanRecurrenceViewModelFromJSON = exports.instanceOfScheduledScanRecurrenceViewModel = exports.ScheduledScanRecurrenceViewModelDayOfWeekEnum = exports.ScheduledScanRecurrenceViewModelOrdinalEnum = exports.ScheduledScanRecurrenceViewModelMonthsOfYearEnum = exports.ScheduledScanRecurrenceViewModelDaysOfWeekEnum = exports.ScheduledScanRecurrenceViewModelEndingTypeEnum = exports.ScheduledScanRecurrenceViewModelRepeatTypeEnum = void 0;
const runtime_1 = require("../runtime");
/**
* @export
* @enum {string}
*/
var ScheduledScanRecurrenceViewModelRepeatTypeEnum;
(function (ScheduledScanRecurrenceViewModelRepeatTypeEnum) {
    ScheduledScanRecurrenceViewModelRepeatTypeEnum["Days"] = "Days";
    ScheduledScanRecurrenceViewModelRepeatTypeEnum["Weeks"] = "Weeks";
    ScheduledScanRecurrenceViewModelRepeatTypeEnum["Months"] = "Months";
    ScheduledScanRecurrenceViewModelRepeatTypeEnum["Years"] = "Years";
})(ScheduledScanRecurrenceViewModelRepeatTypeEnum = exports.ScheduledScanRecurrenceViewModelRepeatTypeEnum || (exports.ScheduledScanRecurrenceViewModelRepeatTypeEnum = {}));
/**
* @export
* @enum {string}
*/
var ScheduledScanRecurrenceViewModelEndingTypeEnum;
(function (ScheduledScanRecurrenceViewModelEndingTypeEnum) {
    ScheduledScanRecurrenceViewModelEndingTypeEnum["Never"] = "Never";
    ScheduledScanRecurrenceViewModelEndingTypeEnum["Date"] = "Date";
    ScheduledScanRecurrenceViewModelEndingTypeEnum["Occurences"] = "Occurences";
})(ScheduledScanRecurrenceViewModelEndingTypeEnum = exports.ScheduledScanRecurrenceViewModelEndingTypeEnum || (exports.ScheduledScanRecurrenceViewModelEndingTypeEnum = {}));
/**
* @export
* @enum {string}
*/
var ScheduledScanRecurrenceViewModelDaysOfWeekEnum;
(function (ScheduledScanRecurrenceViewModelDaysOfWeekEnum) {
    ScheduledScanRecurrenceViewModelDaysOfWeekEnum["Sunday"] = "Sunday";
    ScheduledScanRecurrenceViewModelDaysOfWeekEnum["Monday"] = "Monday";
    ScheduledScanRecurrenceViewModelDaysOfWeekEnum["Tuesday"] = "Tuesday";
    ScheduledScanRecurrenceViewModelDaysOfWeekEnum["Wednesday"] = "Wednesday";
    ScheduledScanRecurrenceViewModelDaysOfWeekEnum["Thursday"] = "Thursday";
    ScheduledScanRecurrenceViewModelDaysOfWeekEnum["Friday"] = "Friday";
    ScheduledScanRecurrenceViewModelDaysOfWeekEnum["Saturday"] = "Saturday";
})(ScheduledScanRecurrenceViewModelDaysOfWeekEnum = exports.ScheduledScanRecurrenceViewModelDaysOfWeekEnum || (exports.ScheduledScanRecurrenceViewModelDaysOfWeekEnum = {}));
/**
* @export
* @enum {string}
*/
var ScheduledScanRecurrenceViewModelMonthsOfYearEnum;
(function (ScheduledScanRecurrenceViewModelMonthsOfYearEnum) {
    ScheduledScanRecurrenceViewModelMonthsOfYearEnum["January"] = "January";
    ScheduledScanRecurrenceViewModelMonthsOfYearEnum["February"] = "February";
    ScheduledScanRecurrenceViewModelMonthsOfYearEnum["March"] = "March";
    ScheduledScanRecurrenceViewModelMonthsOfYearEnum["April"] = "April";
    ScheduledScanRecurrenceViewModelMonthsOfYearEnum["May"] = "May";
    ScheduledScanRecurrenceViewModelMonthsOfYearEnum["June"] = "June";
    ScheduledScanRecurrenceViewModelMonthsOfYearEnum["July"] = "July";
    ScheduledScanRecurrenceViewModelMonthsOfYearEnum["August"] = "August";
    ScheduledScanRecurrenceViewModelMonthsOfYearEnum["September"] = "September";
    ScheduledScanRecurrenceViewModelMonthsOfYearEnum["October"] = "October";
    ScheduledScanRecurrenceViewModelMonthsOfYearEnum["November"] = "November";
    ScheduledScanRecurrenceViewModelMonthsOfYearEnum["December"] = "December";
})(ScheduledScanRecurrenceViewModelMonthsOfYearEnum = exports.ScheduledScanRecurrenceViewModelMonthsOfYearEnum || (exports.ScheduledScanRecurrenceViewModelMonthsOfYearEnum = {}));
/**
* @export
* @enum {string}
*/
var ScheduledScanRecurrenceViewModelOrdinalEnum;
(function (ScheduledScanRecurrenceViewModelOrdinalEnum) {
    ScheduledScanRecurrenceViewModelOrdinalEnum["First"] = "First";
    ScheduledScanRecurrenceViewModelOrdinalEnum["Second"] = "Second";
    ScheduledScanRecurrenceViewModelOrdinalEnum["Third"] = "Third";
    ScheduledScanRecurrenceViewModelOrdinalEnum["Fourth"] = "Fourth";
    ScheduledScanRecurrenceViewModelOrdinalEnum["Last"] = "Last";
})(ScheduledScanRecurrenceViewModelOrdinalEnum = exports.ScheduledScanRecurrenceViewModelOrdinalEnum || (exports.ScheduledScanRecurrenceViewModelOrdinalEnum = {}));
/**
* @export
* @enum {string}
*/
var ScheduledScanRecurrenceViewModelDayOfWeekEnum;
(function (ScheduledScanRecurrenceViewModelDayOfWeekEnum) {
    ScheduledScanRecurrenceViewModelDayOfWeekEnum["Sunday"] = "Sunday";
    ScheduledScanRecurrenceViewModelDayOfWeekEnum["Monday"] = "Monday";
    ScheduledScanRecurrenceViewModelDayOfWeekEnum["Tuesday"] = "Tuesday";
    ScheduledScanRecurrenceViewModelDayOfWeekEnum["Wednesday"] = "Wednesday";
    ScheduledScanRecurrenceViewModelDayOfWeekEnum["Thursday"] = "Thursday";
    ScheduledScanRecurrenceViewModelDayOfWeekEnum["Friday"] = "Friday";
    ScheduledScanRecurrenceViewModelDayOfWeekEnum["Saturday"] = "Saturday";
})(ScheduledScanRecurrenceViewModelDayOfWeekEnum = exports.ScheduledScanRecurrenceViewModelDayOfWeekEnum || (exports.ScheduledScanRecurrenceViewModelDayOfWeekEnum = {}));
/**
 * Check if a given object implements the ScheduledScanRecurrenceViewModel interface.
 */
function instanceOfScheduledScanRecurrenceViewModel(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfScheduledScanRecurrenceViewModel = instanceOfScheduledScanRecurrenceViewModel;
function ScheduledScanRecurrenceViewModelFromJSON(json) {
    return ScheduledScanRecurrenceViewModelFromJSONTyped(json, false);
}
exports.ScheduledScanRecurrenceViewModelFromJSON = ScheduledScanRecurrenceViewModelFromJSON;
function ScheduledScanRecurrenceViewModelFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'repeatType': !(0, runtime_1.exists)(json, 'RepeatType') ? undefined : json['RepeatType'],
        'interval': !(0, runtime_1.exists)(json, 'Interval') ? undefined : json['Interval'],
        'startDate': !(0, runtime_1.exists)(json, 'StartDate') ? undefined : (new Date(json['StartDate'])),
        'endingType': !(0, runtime_1.exists)(json, 'EndingType') ? undefined : json['EndingType'],
        'daysOfWeek': !(0, runtime_1.exists)(json, 'DaysOfWeek') ? undefined : json['DaysOfWeek'],
        'monthsOfYear': !(0, runtime_1.exists)(json, 'MonthsOfYear') ? undefined : json['MonthsOfYear'],
        'ordinal': !(0, runtime_1.exists)(json, 'Ordinal') ? undefined : json['Ordinal'],
        'endOn': !(0, runtime_1.exists)(json, 'EndOn') ? undefined : json['EndOn'],
        'endOnOccurences': !(0, runtime_1.exists)(json, 'EndOnOccurences') ? undefined : json['EndOnOccurences'],
        'dayOfMonth': !(0, runtime_1.exists)(json, 'DayOfMonth') ? undefined : json['DayOfMonth'],
        'endOnDate': !(0, runtime_1.exists)(json, 'EndOnDate') ? undefined : (new Date(json['EndOnDate'])),
        'dayOfWeek': !(0, runtime_1.exists)(json, 'DayOfWeek') ? undefined : json['DayOfWeek'],
    };
}
exports.ScheduledScanRecurrenceViewModelFromJSONTyped = ScheduledScanRecurrenceViewModelFromJSONTyped;
function ScheduledScanRecurrenceViewModelToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'RepeatType': value.repeatType,
        'Interval': value.interval,
        'StartDate': value.startDate === undefined ? undefined : (value.startDate.toISOString()),
        'EndingType': value.endingType,
        'DaysOfWeek': value.daysOfWeek,
        'MonthsOfYear': value.monthsOfYear,
        'Ordinal': value.ordinal,
        'EndOn': value.endOn,
        'EndOnOccurences': value.endOnOccurences,
        'DayOfMonth': value.dayOfMonth,
        'EndOnDate': value.endOnDate === undefined ? undefined : (value.endOnDate.toISOString()),
        'DayOfWeek': value.dayOfWeek,
    };
}
exports.ScheduledScanRecurrenceViewModelToJSON = ScheduledScanRecurrenceViewModelToJSON;
//# sourceMappingURL=ScheduledScanRecurrenceViewModel.js.map