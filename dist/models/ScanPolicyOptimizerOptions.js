"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ScanPolicyOptimizerOptionsToJSON = exports.ScanPolicyOptimizerOptionsFromJSONTyped = exports.ScanPolicyOptimizerOptionsFromJSON = exports.instanceOfScanPolicyOptimizerOptions = exports.ScanPolicyOptimizerOptionsWebServerEnum = exports.ScanPolicyOptimizerOptionsSuggestionStatusEnum = exports.ScanPolicyOptimizerOptionsOperatingSystemEnum = exports.ScanPolicyOptimizerOptionsDomParserPresetEnum = exports.ScanPolicyOptimizerOptionsDatabaseServerEnum = exports.ScanPolicyOptimizerOptionsAppServerEnum = void 0;
const runtime_1 = require("../runtime");
/**
 * @export
 */
exports.ScanPolicyOptimizerOptionsAppServerEnum = {
    All: 'All',
    Aspnet: 'Aspnet',
    Php: 'Php',
    Rails: 'Rails',
    Java: 'Java',
    Perl: 'Perl',
    Python: 'Python',
    NodeJs: 'NodeJs',
    Other: 'Other'
};
/**
 * @export
 */
exports.ScanPolicyOptimizerOptionsDatabaseServerEnum = {
    All: 'All',
    MsSql: 'MsSql',
    MySql: 'MySql',
    Oracle: 'Oracle',
    PostgreSql: 'PostgreSql',
    MsAccess: 'MsAccess',
    HsqlDb: 'HsqlDb',
    Sqlite: 'Sqlite',
    MongoDb: 'MongoDb',
    Other: 'Other'
};
/**
 * @export
 */
exports.ScanPolicyOptimizerOptionsDomParserPresetEnum = {
    None: 'None',
    Default: 'Default',
    Spa: 'Spa',
    LargeSpa: 'LargeSpa'
};
/**
 * @export
 */
exports.ScanPolicyOptimizerOptionsOperatingSystemEnum = {
    All: 'All',
    Windows: 'Windows',
    Unix: 'Unix'
};
/**
 * @export
 */
exports.ScanPolicyOptimizerOptionsSuggestionStatusEnum = {
    Always: 'Always',
    NotNow: 'NotNow',
    Never: 'Never'
};
/**
 * @export
 */
exports.ScanPolicyOptimizerOptionsWebServerEnum = {
    All: 'All',
    Iis: 'Iis',
    Apache: 'Apache',
    ApacheTomcat: 'ApacheTomcat',
    Nginx: 'Nginx',
    Other: 'Other'
};
/**
 * Check if a given object implements the ScanPolicyOptimizerOptions interface.
 */
function instanceOfScanPolicyOptimizerOptions(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfScanPolicyOptimizerOptions = instanceOfScanPolicyOptimizerOptions;
function ScanPolicyOptimizerOptionsFromJSON(json) {
    return ScanPolicyOptimizerOptionsFromJSONTyped(json, false);
}
exports.ScanPolicyOptimizerOptionsFromJSON = ScanPolicyOptimizerOptionsFromJSON;
function ScanPolicyOptimizerOptionsFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'appServer': !(0, runtime_1.exists)(json, 'AppServer') ? undefined : json['AppServer'],
        'databaseServer': !(0, runtime_1.exists)(json, 'DatabaseServer') ? undefined : json['DatabaseServer'],
        'directoryNameLimit': !(0, runtime_1.exists)(json, 'DirectoryNameLimit') ? undefined : json['DirectoryNameLimit'],
        'domParserPreset': !(0, runtime_1.exists)(json, 'DomParserPreset') ? undefined : json['DomParserPreset'],
        'hosts': !(0, runtime_1.exists)(json, 'Hosts') ? undefined : json['Hosts'],
        'isSharkEnabled': !(0, runtime_1.exists)(json, 'IsSharkEnabled') ? undefined : json['IsSharkEnabled'],
        'name': !(0, runtime_1.exists)(json, 'Name') ? undefined : json['Name'],
        'netsparkerHawkBaseUrl': !(0, runtime_1.exists)(json, 'NetsparkerHawkBaseUrl') ? undefined : json['NetsparkerHawkBaseUrl'],
        'operatingSystem': !(0, runtime_1.exists)(json, 'OperatingSystem') ? undefined : json['OperatingSystem'],
        'optimized': !(0, runtime_1.exists)(json, 'Optimized') ? undefined : json['Optimized'],
        'resourceFinders': !(0, runtime_1.exists)(json, 'ResourceFinders') ? undefined : json['ResourceFinders'],
        'suggestionStatus': !(0, runtime_1.exists)(json, 'SuggestionStatus') ? undefined : json['SuggestionStatus'],
        'webServer': !(0, runtime_1.exists)(json, 'WebServer') ? undefined : json['WebServer'],
    };
}
exports.ScanPolicyOptimizerOptionsFromJSONTyped = ScanPolicyOptimizerOptionsFromJSONTyped;
function ScanPolicyOptimizerOptionsToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'AppServer': value.appServer,
        'DatabaseServer': value.databaseServer,
        'DirectoryNameLimit': value.directoryNameLimit,
        'DomParserPreset': value.domParserPreset,
        'Hosts': value.hosts,
        'IsSharkEnabled': value.isSharkEnabled,
        'Name': value.name,
        'NetsparkerHawkBaseUrl': value.netsparkerHawkBaseUrl,
        'OperatingSystem': value.operatingSystem,
        'Optimized': value.optimized,
        'ResourceFinders': value.resourceFinders,
        'SuggestionStatus': value.suggestionStatus,
        'WebServer': value.webServer,
    };
}
exports.ScanPolicyOptimizerOptionsToJSON = ScanPolicyOptimizerOptionsToJSON;
//# sourceMappingURL=ScanPolicyOptimizerOptions.js.map