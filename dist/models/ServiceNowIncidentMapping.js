/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists } from '../runtime';
import { ServiceNowIncidentMappingFieldKeyValuePairFromJSON, ServiceNowIncidentMappingFieldKeyValuePairToJSON, } from './ServiceNowIncidentMappingFieldKeyValuePair';
/**
 * @export
 */
export const ServiceNowIncidentMappingInvictiChoiceEnum = {
    Severity: 'Severity'
};
/**
 * Check if a given object implements the ServiceNowIncidentMapping interface.
 */
export function instanceOfServiceNowIncidentMapping(value) {
    let isInstance = true;
    return isInstance;
}
export function ServiceNowIncidentMappingFromJSON(json) {
    return ServiceNowIncidentMappingFromJSONTyped(json, false);
}
export function ServiceNowIncidentMappingFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'invictiChoice': !exists(json, 'InvictiChoice') ? undefined : json['InvictiChoice'],
        'invictiValue': !exists(json, 'InvictiValue') ? undefined : json['InvictiValue'],
        'fieldKeyValuePairs': !exists(json, 'FieldKeyValuePairs') ? undefined : (json['FieldKeyValuePairs'].map(ServiceNowIncidentMappingFieldKeyValuePairFromJSON)),
    };
}
export function ServiceNowIncidentMappingToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'InvictiChoice': value.invictiChoice,
        'InvictiValue': value.invictiValue,
        'FieldKeyValuePairs': value.fieldKeyValuePairs === undefined ? undefined : (value.fieldKeyValuePairs.map(ServiceNowIncidentMappingFieldKeyValuePairToJSON)),
    };
}
//# sourceMappingURL=ServiceNowIncidentMapping.js.map