"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.NewGroupScanApiModelToJSON = exports.NewGroupScanApiModelFromJSONTyped = exports.NewGroupScanApiModelFromJSON = exports.instanceOfNewGroupScanApiModel = exports.NewGroupScanApiModelAuthenticationProfileOptionEnum = void 0;
const runtime_1 = require("../runtime");
const ScanTimeWindowModel_1 = require("./ScanTimeWindowModel");
/**
* @export
* @enum {string}
*/
var NewGroupScanApiModelAuthenticationProfileOptionEnum;
(function (NewGroupScanApiModelAuthenticationProfileOptionEnum) {
    NewGroupScanApiModelAuthenticationProfileOptionEnum["DontUse"] = "DontUse";
    NewGroupScanApiModelAuthenticationProfileOptionEnum["UseMatchedProfile"] = "UseMatchedProfile";
    NewGroupScanApiModelAuthenticationProfileOptionEnum["SelectedProfile"] = "SelectedProfile";
})(NewGroupScanApiModelAuthenticationProfileOptionEnum = exports.NewGroupScanApiModelAuthenticationProfileOptionEnum || (exports.NewGroupScanApiModelAuthenticationProfileOptionEnum = {}));
/**
 * Check if a given object implements the NewGroupScanApiModel interface.
 */
function instanceOfNewGroupScanApiModel(value) {
    let isInstance = true;
    isInstance = isInstance && "websiteGroupName" in value;
    return isInstance;
}
exports.instanceOfNewGroupScanApiModel = instanceOfNewGroupScanApiModel;
function NewGroupScanApiModelFromJSON(json) {
    return NewGroupScanApiModelFromJSONTyped(json, false);
}
exports.NewGroupScanApiModelFromJSON = NewGroupScanApiModelFromJSON;
function NewGroupScanApiModelFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'policyId': !(0, runtime_1.exists)(json, 'PolicyId') ? undefined : json['PolicyId'],
        'reportPolicyId': !(0, runtime_1.exists)(json, 'ReportPolicyId') ? undefined : json['ReportPolicyId'],
        'authenticationProfileOption': !(0, runtime_1.exists)(json, 'AuthenticationProfileOption') ? undefined : json['AuthenticationProfileOption'],
        'authenticationProfileId': !(0, runtime_1.exists)(json, 'AuthenticationProfileId') ? undefined : json['AuthenticationProfileId'],
        'timeWindow': !(0, runtime_1.exists)(json, 'TimeWindow') ? undefined : (0, ScanTimeWindowModel_1.ScanTimeWindowModelFromJSON)(json['TimeWindow']),
        'websiteGroupName': json['WebsiteGroupName'],
        'tags': !(0, runtime_1.exists)(json, 'Tags') ? undefined : json['Tags'],
    };
}
exports.NewGroupScanApiModelFromJSONTyped = NewGroupScanApiModelFromJSONTyped;
function NewGroupScanApiModelToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'PolicyId': value.policyId,
        'ReportPolicyId': value.reportPolicyId,
        'AuthenticationProfileOption': value.authenticationProfileOption,
        'AuthenticationProfileId': value.authenticationProfileId,
        'TimeWindow': (0, ScanTimeWindowModel_1.ScanTimeWindowModelToJSON)(value.timeWindow),
        'WebsiteGroupName': value.websiteGroupName,
        'Tags': value.tags,
    };
}
exports.NewGroupScanApiModelToJSON = NewGroupScanApiModelToJSON;
//# sourceMappingURL=NewGroupScanApiModel.js.map