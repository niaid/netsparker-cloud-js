/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { exists } from '../runtime';
import { ContentTypeModelFromJSON, ContentTypeModelToJSON, } from './ContentTypeModel';
/**
 * Check if a given object implements the ScopeSettingModel interface.
 */
export function instanceOfScopeSettingModel(value) {
    let isInstance = true;
    return isInstance;
}
export function ScopeSettingModelFromJSON(json) {
    return ScopeSettingModelFromJSONTyped(json, false);
}
export function ScopeSettingModelFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'blockAdNetworks': !exists(json, 'BlockAdNetworks') ? undefined : json['BlockAdNetworks'],
        'byPassScopeForStaticChecks': !exists(json, 'ByPassScopeForStaticChecks') ? undefined : json['ByPassScopeForStaticChecks'],
        'caseSensitiveScope': !exists(json, 'CaseSensitiveScope') ? undefined : json['CaseSensitiveScope'],
        'contentTypeCheckEnabled': !exists(json, 'ContentTypeCheckEnabled') ? undefined : json['ContentTypeCheckEnabled'],
        'ignoredContentTypes': !exists(json, 'IgnoredContentTypes') ? undefined : (json['IgnoredContentTypes'].map(ContentTypeModelFromJSON)),
    };
}
export function ScopeSettingModelToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'BlockAdNetworks': value.blockAdNetworks,
        'ByPassScopeForStaticChecks': value.byPassScopeForStaticChecks,
        'CaseSensitiveScope': value.caseSensitiveScope,
        'ContentTypeCheckEnabled': value.contentTypeCheckEnabled,
        'IgnoredContentTypes': value.ignoredContentTypes === undefined ? undefined : (value.ignoredContentTypes.map(ContentTypeModelToJSON)),
    };
}
//# sourceMappingURL=ScopeSettingModel.js.map