"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SlackIntegrationInfoModelToJSON = exports.SlackIntegrationInfoModelFromJSONTyped = exports.SlackIntegrationInfoModelFromJSON = exports.instanceOfSlackIntegrationInfoModel = exports.SlackIntegrationInfoModelTemplateTypeEnum = exports.SlackIntegrationInfoModelTypeEnum = void 0;
const runtime_1 = require("../runtime");
const IntegrationCustomFieldVm_1 = require("./IntegrationCustomFieldVm");
const IntegrationWizardResultModel_1 = require("./IntegrationWizardResultModel");
/**
* @export
* @enum {string}
*/
var SlackIntegrationInfoModelTypeEnum;
(function (SlackIntegrationInfoModelTypeEnum) {
    SlackIntegrationInfoModelTypeEnum["NetsparkerEnterprise"] = "NetsparkerEnterprise";
    SlackIntegrationInfoModelTypeEnum["Webhook"] = "Webhook";
    SlackIntegrationInfoModelTypeEnum["Zapier"] = "Zapier";
    SlackIntegrationInfoModelTypeEnum["Slack"] = "Slack";
    SlackIntegrationInfoModelTypeEnum["Mattermost"] = "Mattermost";
    SlackIntegrationInfoModelTypeEnum["MicrosoftTeams"] = "MicrosoftTeams";
    SlackIntegrationInfoModelTypeEnum["AzureDevOps"] = "AzureDevOps";
    SlackIntegrationInfoModelTypeEnum["Bitbucket"] = "Bitbucket";
    SlackIntegrationInfoModelTypeEnum["Bugzilla"] = "Bugzilla";
    SlackIntegrationInfoModelTypeEnum["Clubhouse"] = "Clubhouse";
    SlackIntegrationInfoModelTypeEnum["DefectDojo"] = "DefectDojo";
    SlackIntegrationInfoModelTypeEnum["PivotalTracker"] = "PivotalTracker";
    SlackIntegrationInfoModelTypeEnum["Jira"] = "Jira";
    SlackIntegrationInfoModelTypeEnum["FogBugz"] = "FogBugz";
    SlackIntegrationInfoModelTypeEnum["GitHub"] = "GitHub";
    SlackIntegrationInfoModelTypeEnum["PagerDuty"] = "PagerDuty";
    SlackIntegrationInfoModelTypeEnum["Kafka"] = "Kafka";
    SlackIntegrationInfoModelTypeEnum["Kenna"] = "Kenna";
    SlackIntegrationInfoModelTypeEnum["Redmine"] = "Redmine";
    SlackIntegrationInfoModelTypeEnum["ServiceNow"] = "ServiceNow";
    SlackIntegrationInfoModelTypeEnum["Tfs"] = "TFS";
    SlackIntegrationInfoModelTypeEnum["Unfuddle"] = "Unfuddle";
    SlackIntegrationInfoModelTypeEnum["YouTrack"] = "YouTrack";
    SlackIntegrationInfoModelTypeEnum["Freshservice"] = "Freshservice";
    SlackIntegrationInfoModelTypeEnum["Splunk"] = "Splunk";
    SlackIntegrationInfoModelTypeEnum["JazzTeam"] = "JazzTeam";
    SlackIntegrationInfoModelTypeEnum["ServiceNowVrm"] = "ServiceNowVRM";
    SlackIntegrationInfoModelTypeEnum["Asana"] = "Asana";
    SlackIntegrationInfoModelTypeEnum["Trello"] = "Trello";
    SlackIntegrationInfoModelTypeEnum["Hashicorp"] = "Hashicorp";
    SlackIntegrationInfoModelTypeEnum["CyberArk"] = "CyberArk";
    SlackIntegrationInfoModelTypeEnum["AzureKeyVault"] = "AzureKeyVault";
    SlackIntegrationInfoModelTypeEnum["GitLab"] = "GitLab";
})(SlackIntegrationInfoModelTypeEnum = exports.SlackIntegrationInfoModelTypeEnum || (exports.SlackIntegrationInfoModelTypeEnum = {}));
/**
* @export
* @enum {string}
*/
var SlackIntegrationInfoModelTemplateTypeEnum;
(function (SlackIntegrationInfoModelTemplateTypeEnum) {
    SlackIntegrationInfoModelTemplateTypeEnum["Standard"] = "Standard";
    SlackIntegrationInfoModelTemplateTypeEnum["Detailed"] = "Detailed";
})(SlackIntegrationInfoModelTemplateTypeEnum = exports.SlackIntegrationInfoModelTemplateTypeEnum || (exports.SlackIntegrationInfoModelTemplateTypeEnum = {}));
/**
 * Check if a given object implements the SlackIntegrationInfoModel interface.
 */
function instanceOfSlackIntegrationInfoModel(value) {
    let isInstance = true;
    isInstance = isInstance && "incomingWebhookUrl" in value;
    isInstance = isInstance && "titleFormat" in value;
    return isInstance;
}
exports.instanceOfSlackIntegrationInfoModel = instanceOfSlackIntegrationInfoModel;
function SlackIntegrationInfoModelFromJSON(json) {
    return SlackIntegrationInfoModelFromJSONTyped(json, false);
}
exports.SlackIntegrationInfoModelFromJSON = SlackIntegrationInfoModelFromJSON;
function SlackIntegrationInfoModelFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'incomingWebhookUrl': json['IncomingWebhookUrl'],
        'type': !(0, runtime_1.exists)(json, 'Type') ? undefined : json['Type'],
        'genericErrorMessage': !(0, runtime_1.exists)(json, 'GenericErrorMessage') ? undefined : json['GenericErrorMessage'],
        'identifier': !(0, runtime_1.exists)(json, 'Identifier') ? undefined : json['Identifier'],
        'testMessageBody': !(0, runtime_1.exists)(json, 'TestMessageBody') ? undefined : json['TestMessageBody'],
        'testMessageTitle': !(0, runtime_1.exists)(json, 'TestMessageTitle') ? undefined : json['TestMessageTitle'],
        'webhookUrl': !(0, runtime_1.exists)(json, 'WebhookUrl') ? undefined : json['WebhookUrl'],
        'name': !(0, runtime_1.exists)(json, 'Name') ? undefined : json['Name'],
        'integrationVersion': !(0, runtime_1.exists)(json, 'IntegrationVersion') ? undefined : json['IntegrationVersion'],
        'accountID': !(0, runtime_1.exists)(json, 'AccountID') ? undefined : json['AccountID'],
        'customFields': !(0, runtime_1.exists)(json, 'CustomFields') ? undefined : (json['CustomFields'].map(IntegrationCustomFieldVm_1.IntegrationCustomFieldVmFromJSON)),
        'templateType': !(0, runtime_1.exists)(json, 'TemplateType') ? undefined : json['TemplateType'],
        'reopenStatus': !(0, runtime_1.exists)(json, 'ReopenStatus') ? undefined : json['ReopenStatus'],
        'resolvedStatus': !(0, runtime_1.exists)(json, 'ResolvedStatus') ? undefined : json['ResolvedStatus'],
        'titleFormat': json['TitleFormat'],
        'integrationWizardResultModel': !(0, runtime_1.exists)(json, 'IntegrationWizardResultModel') ? undefined : (0, IntegrationWizardResultModel_1.IntegrationWizardResultModelFromJSON)(json['IntegrationWizardResultModel']),
    };
}
exports.SlackIntegrationInfoModelFromJSONTyped = SlackIntegrationInfoModelFromJSONTyped;
function SlackIntegrationInfoModelToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'IncomingWebhookUrl': value.incomingWebhookUrl,
        'Name': value.name,
        'IntegrationVersion': value.integrationVersion,
        'AccountID': value.accountID,
        'CustomFields': value.customFields === undefined ? undefined : (value.customFields.map(IntegrationCustomFieldVm_1.IntegrationCustomFieldVmToJSON)),
        'TemplateType': value.templateType,
        'ReopenStatus': value.reopenStatus,
        'ResolvedStatus': value.resolvedStatus,
        'TitleFormat': value.titleFormat,
        'IntegrationWizardResultModel': (0, IntegrationWizardResultModel_1.IntegrationWizardResultModelToJSON)(value.integrationWizardResultModel),
    };
}
exports.SlackIntegrationInfoModelToJSON = SlackIntegrationInfoModelToJSON;
//# sourceMappingURL=SlackIntegrationInfoModel.js.map