"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ScanNotificationApiModelToJSON = exports.ScanNotificationApiModelFromJSONTyped = exports.ScanNotificationApiModelFromJSON = exports.instanceOfScanNotificationApiModel = exports.ScanNotificationApiModelScopeEnum = exports.ScanNotificationApiModelEventEnum = void 0;
const NotificationEmailSmsFilterApi_1 = require("./NotificationEmailSmsFilterApi");
const NotificationIntegrationFilterApi_1 = require("./NotificationIntegrationFilterApi");
const ScanNotificationRecipientApiModel_1 = require("./ScanNotificationRecipientApiModel");
/**
 * @export
 */
exports.ScanNotificationApiModelEventEnum = {
    NewScan: 'NewScan',
    ScanCompleted: 'ScanCompleted',
    ScanCancelled: 'ScanCancelled',
    ScanFailed: 'ScanFailed',
    ScheduledScanLaunchFailed: 'ScheduledScanLaunchFailed',
    OutOfDateTechnology: 'OutOfDateTechnology'
};
/**
 * @export
 */
exports.ScanNotificationApiModelScopeEnum = {
    AnyWebsite: 'AnyWebsite',
    WebsiteGroup: 'WebsiteGroup',
    Website: 'Website'
};
/**
 * Check if a given object implements the ScanNotificationApiModel interface.
 */
function instanceOfScanNotificationApiModel(value) {
    if (!('disabled' in value))
        return false;
    if (!('event' in value))
        return false;
    if (!('name' in value))
        return false;
    if (!('scope' in value))
        return false;
    return true;
}
exports.instanceOfScanNotificationApiModel = instanceOfScanNotificationApiModel;
function ScanNotificationApiModelFromJSON(json) {
    return ScanNotificationApiModelFromJSONTyped(json, false);
}
exports.ScanNotificationApiModelFromJSON = ScanNotificationApiModelFromJSON;
function ScanNotificationApiModelFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['Id'] == null ? undefined : json['Id'],
        'priority': json['Priority'] == null ? undefined : json['Priority'],
        'recipients': json['Recipients'] == null ? undefined : (0, ScanNotificationRecipientApiModel_1.ScanNotificationRecipientApiModelFromJSON)(json['Recipients']),
        'websiteGroupName': json['WebsiteGroupName'] == null ? undefined : json['WebsiteGroupName'],
        'websiteRootUrl': json['WebsiteRootUrl'] == null ? undefined : json['WebsiteRootUrl'],
        'emailSmsFilter': json['EmailSmsFilter'] == null ? undefined : (0, NotificationEmailSmsFilterApi_1.NotificationEmailSmsFilterApiFromJSON)(json['EmailSmsFilter']),
        'integrationFilter': json['IntegrationFilter'] == null ? undefined : (0, NotificationIntegrationFilterApi_1.NotificationIntegrationFilterApiFromJSON)(json['IntegrationFilter']),
        'disabled': json['Disabled'],
        'scanTaskGroupId': json['ScanTaskGroupId'] == null ? undefined : json['ScanTaskGroupId'],
        'event': json['Event'],
        'name': json['Name'],
        'scope': json['Scope'],
    };
}
exports.ScanNotificationApiModelFromJSONTyped = ScanNotificationApiModelFromJSONTyped;
function ScanNotificationApiModelToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        'Id': value['id'],
        'Priority': value['priority'],
        'Recipients': (0, ScanNotificationRecipientApiModel_1.ScanNotificationRecipientApiModelToJSON)(value['recipients']),
        'WebsiteGroupName': value['websiteGroupName'],
        'WebsiteRootUrl': value['websiteRootUrl'],
        'EmailSmsFilter': (0, NotificationEmailSmsFilterApi_1.NotificationEmailSmsFilterApiToJSON)(value['emailSmsFilter']),
        'IntegrationFilter': (0, NotificationIntegrationFilterApi_1.NotificationIntegrationFilterApiToJSON)(value['integrationFilter']),
        'Disabled': value['disabled'],
        'ScanTaskGroupId': value['scanTaskGroupId'],
        'Event': value['event'],
        'Name': value['name'],
        'Scope': value['scope'],
    };
}
exports.ScanNotificationApiModelToJSON = ScanNotificationApiModelToJSON;
//# sourceMappingURL=ScanNotificationApiModel.js.map