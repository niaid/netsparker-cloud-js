"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Invicti Enterprise API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DeleteWebsiteGroupResponseToJSON = exports.DeleteWebsiteGroupResponseFromJSONTyped = exports.DeleteWebsiteGroupResponseFromJSON = exports.instanceOfDeleteWebsiteGroupResponse = exports.DeleteWebsiteGroupResponseResultEnum = void 0;
const runtime_1 = require("../runtime");
/**
* @export
* @enum {string}
*/
var DeleteWebsiteGroupResponseResultEnum;
(function (DeleteWebsiteGroupResponseResultEnum) {
    DeleteWebsiteGroupResponseResultEnum["Ok"] = "Ok";
    DeleteWebsiteGroupResponseResultEnum["NotFound"] = "NotFound";
    DeleteWebsiteGroupResponseResultEnum["WebsitesExisting"] = "WebsitesExisting";
    DeleteWebsiteGroupResponseResultEnum["ScheduledScanExists"] = "ScheduledScanExists";
    DeleteWebsiteGroupResponseResultEnum["OneWebsiteGroupMustExist"] = "OneWebsiteGroupMustExist";
    DeleteWebsiteGroupResponseResultEnum["ScanNotificationRuleExists"] = "ScanNotificationRuleExists";
})(DeleteWebsiteGroupResponseResultEnum = exports.DeleteWebsiteGroupResponseResultEnum || (exports.DeleteWebsiteGroupResponseResultEnum = {}));
/**
 * Check if a given object implements the DeleteWebsiteGroupResponse interface.
 */
function instanceOfDeleteWebsiteGroupResponse(value) {
    let isInstance = true;
    return isInstance;
}
exports.instanceOfDeleteWebsiteGroupResponse = instanceOfDeleteWebsiteGroupResponse;
function DeleteWebsiteGroupResponseFromJSON(json) {
    return DeleteWebsiteGroupResponseFromJSONTyped(json, false);
}
exports.DeleteWebsiteGroupResponseFromJSON = DeleteWebsiteGroupResponseFromJSON;
function DeleteWebsiteGroupResponseFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'result': !(0, runtime_1.exists)(json, 'Result') ? undefined : json['Result'],
        'message': !(0, runtime_1.exists)(json, 'Message') ? undefined : json['Message'],
    };
}
exports.DeleteWebsiteGroupResponseFromJSONTyped = DeleteWebsiteGroupResponseFromJSONTyped;
function DeleteWebsiteGroupResponseToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'Result': value.result,
        'Message': value.message,
    };
}
exports.DeleteWebsiteGroupResponseToJSON = DeleteWebsiteGroupResponseToJSON;
//# sourceMappingURL=DeleteWebsiteGroupResponse.js.map